{
    "achievements": {},
    "blocks": {
        "block": {}
    },
    "entities": {
        "dataserializers": {},
        "entity": {}
    },
    "items": {
        "item": {}
    },
    "language": {},
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i.isPresent()",
                            "instructions": [
                                {
                                    "field": "i.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "i.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "recipes": {},
    "sounds": {},
    "stats": {},
    "tags": {},
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            3216,
            3217
        ],
        "id": [
            "1.19.3-rc2",
            "1.19.3-rc3"
        ],
        "name": [
            "1.19.3 Release Candidate 2",
            "1.19.3 Release Candidate 3"
        ],
        "protocol": [
            1073741937,
            1073741938
        ]
    }
}