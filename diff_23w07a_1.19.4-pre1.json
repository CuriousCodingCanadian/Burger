{
    "achievements": {},
    "blocks": {
        "block": {
            "pink_petals": [
                {
                    "class": "cun",
                    "display_name": "Pink Petals",
                    "field": "rv",
                    "hardness": 0.1,
                    "max_state_id": 21985,
                    "min_state_id": 21970,
                    "num_states": 16,
                    "numeric_id": 957,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "dce",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dce",
                            "field_name": "d",
                            "max": 4,
                            "min": 1,
                            "name": "flower_amount",
                            "num_values": 4,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cpm",
                        "cpf"
                    ],
                    "text_id": "pink_petals"
                },
                {
                    "class": "cuo",
                    "display_name": "Pink Petals",
                    "field": "rv",
                    "max_state_id": 21985,
                    "min_state_id": 21970,
                    "num_states": 16,
                    "numeric_id": 957,
                    "states": [
                        {
                            "declared_in": "dcf",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dcf",
                            "field_name": "d",
                            "max": 4,
                            "min": 1,
                            "name": "flower_amount",
                            "num_values": 4,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cpn",
                        "cpg"
                    ],
                    "text_id": "pink_petals"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {},
        "entity": {}
    },
    "items": {
        "item": {}
    },
    "language": {
        "mco": {
            "notification.dismiss": [
                null,
                "Dismiss"
            ],
            "notification.visitUrl.buttonText.default": [
                null,
                "Open link"
            ],
            "notification.visitUrl.message.default": [
                null,
                "Please visit the link below"
            ]
        },
        "narration": {
            "tab_navigation.usage": [
                null,
                "Press Ctrl and Tab to switch between tabs"
            ]
        },
        "narrator": {
            "position.tab": [
                null,
                "Selected tab %s out of %s"
            ]
        },
        "options": {
            "accessibility.high_contrast": [
                null,
                "High Contrast"
            ],
            "accessibility.high_contrast.tooltip": [
                null,
                "Enhances the contrast of UI elements"
            ],
            "realmsNotifications": [
                "Realms Notifications",
                "Realms News & Invites"
            ]
        },
        "resourcePack": {
            "high_contrast.name": [
                null,
                "High Contrast"
            ]
        }
    },
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vr$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a.a()",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "itv.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0E": [
                {
                    "class": "vr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "tj.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0F": [
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vs$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lsq;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "vs$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "tk.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vu$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lsr;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "vu$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cfu",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cft",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "vw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "iy.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "iz.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "wa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e.isPresent()",
                            "instructions": [
                                {
                                    "field": "e.get().a()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().c()",
                                    "operation": "write",
                                    "type": "double"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e.isPresent()",
                            "instructions": [
                                {
                                    "field": "e.get().a()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().c()",
                                    "operation": "write",
                                    "type": "double"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apf.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apf.a(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apf.a(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gr",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aph.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aph.a(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aph.a(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gs",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wm$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "iy.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wo$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "iz.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "iy.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lsq;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "iq",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "iz.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lsr;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "ir",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cme.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acz",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hs.a.encode(ws.r, f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "wt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dxo",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmd.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "adb",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "ht.a.encode(wu.r, f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "clf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dxp",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "wv$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cle",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "wv$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wx$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "wv$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wx$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wx$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iy.r.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iz.r.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ts$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == tk$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tt$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == tl$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xi$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((xi$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lsq;Lxi$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "xi$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xk$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((xk$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lsr;Lxk$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "xk$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "bgk.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "cco.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ams$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ada",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == xl$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "ada",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "bgj.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "ccn.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((amu$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "adc",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == xn$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "adc",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iy.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iz.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cme.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmd.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cpf.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cpg.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((acl$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "ack.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lsq;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "acj",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((acn$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "acm.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lsr;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "acl",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bfl)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cfu)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bfk)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cft)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "yo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "yo.b(h)",
                            "instructions": [
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yo$b)k.orElseThrow(yo::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "yo.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "yp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != adq$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "yq.b(h)",
                            "instructions": [
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yq$b)k.orElseThrow(yq::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "yq.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "yq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != ads$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "yr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ys.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "ys.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                {
                    "class": "yu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "yv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iy.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iy.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iz.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "yx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iz.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "yy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "yz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "za.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "za.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                {
                    "class": "zb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_67": [
                {
                    "class": "zc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_68": [
                {
                    "class": "zd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ada, ad$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ada",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ada, af>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ze.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_69": [
                {
                    "class": "ze.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ze$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iy.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bhb",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<adc, ad$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "adc",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<adc, af>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6A": [
                {
                    "class": "zf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ada",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "zg$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iz.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bha",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6B": [
                {
                    "class": "zg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iy.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bex$a.a.encode(rn.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "adc",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6C": [
                {
                    "class": "zh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cix",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iy.t.b(itv.ag_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.e()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.ag_()",
                                    "method": "a(Lsq;Lcix;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "ciz",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iz.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bew$a.a.encode(ro.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6D": [
                {
                    "class": "zi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acz, anv$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<ada, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ciw",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iz.t.b(itv.ag_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.e()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.ag_()",
                                    "method": "a(Lsr;Lciw;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "ciy",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6E": [
                null,
                {
                    "class": "zk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<adb, anx$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<adc, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "pluginchannels": {},
    "recipes": {
        "brush": [
            [
                {
                    "id": "minecraft:brush",
                    "makes": {
                        "count": 1,
                        "name": "brush",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            " I ",
                            " I "
                        ],
                        "subs": {
                            "#": {
                                "name": "string",
                                "type": "item"
                            },
                            "I": {
                                "name": "stick",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "string",
                                "type": "item"
                            },
                            {
                                "name": "string",
                                "type": "item"
                            },
                            {
                                "name": "string",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ]
    },
    "sounds": {
        "block.froglight.break": [
            {
                "field": "ik",
                "id": 478,
                "name": "block.froglight.break",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1"
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2"
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3"
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            {
                "field": "ik",
                "id": 478,
                "name": "block.froglight.break",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.froglight.place": [
            {
                "field": "in",
                "id": 481,
                "name": "block.froglight.place",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1"
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2"
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3"
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            {
                "field": "in",
                "id": 481,
                "name": "block.froglight.place",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "item.brush.brush_sand_completed": [
            {
                "field": "cl",
                "id": 167,
                "name": "item.brush.brush_sand_completed",
                "sounds": [
                    {
                        "hash": "7425e3e9082b34174bc803a0b5b639c45b9f6631",
                        "name": "item/brush/brush_completed1"
                    },
                    {
                        "hash": "d4cf3c6c0ba86fbeedda0460dd25dce4f4762ee5",
                        "name": "item/brush/brush_completed2"
                    },
                    {
                        "hash": "33bab73536ccde1205b5c77001b55f9289769e1f",
                        "name": "item/brush/brush_completed3"
                    },
                    {
                        "hash": "bfd094a7e9c3c6f3bda315596ae97de16c4bce15",
                        "name": "item/brush/brush_completed4"
                    },
                    {
                        "hash": "6c53b74f97c248f4a293da24a67bae27baf0b5fe",
                        "name": "item/brush/brush_completed5"
                    }
                ]
            },
            {
                "field": "cl",
                "id": 167,
                "name": "item.brush.brush_sand_completed"
            }
        ],
        "item.brush.brushing": [
            {
                "field": "ck",
                "id": 166,
                "name": "item.brush.brushing",
                "sounds": [
                    {
                        "hash": "ffa8d698ddccefba63cb8236219ca17a369fbb91",
                        "name": "item/brush/brushing1",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "b28c3865582868f63f1efe6e6e78a28b7e3f9e3f",
                        "name": "item/brush/brushing2",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "cb5c412cf4108cfaa7b5642e6a34294d85efcf55",
                        "name": "item/brush/brushing3",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "992b7f42a7e4f3b55e64658c10619f55a2e3802e",
                        "name": "item/brush/brushing4",
                        "pitch": 0.6,
                        "volume": 0.6
                    }
                ]
            },
            {
                "field": "ck",
                "id": 166,
                "name": "item.brush.brushing"
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/smelts_to_glass": [
            null,
            {
                "name": "smelts_to_glass",
                "type": "blocks",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            }
        ],
        "damage_type/always_hurts_ender_dragons": [
            null,
            {
                "name": "always_hurts_ender_dragons",
                "type": "damage_type",
                "values": [
                    "minecraft:fireworks",
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "damage_type/avoids_guardian_thorns": [
            {
                "name": "avoids_guardian_thorns",
                "type": "damage_type",
                "values": [
                    "minecraft:magic"
                ]
            },
            {
                "name": "avoids_guardian_thorns",
                "type": "damage_type",
                "values": [
                    "minecraft:magic",
                    "minecraft:thorns",
                    "minecraft:fireworks",
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "entity_types/fall_damage_immune": [
            null,
            {
                "name": "fall_damage_immune",
                "type": "entity_types",
                "values": [
                    "minecraft:iron_golem",
                    "minecraft:snow_golem",
                    "minecraft:shulker",
                    "minecraft:allay",
                    "minecraft:bat",
                    "minecraft:bee",
                    "minecraft:blaze",
                    "minecraft:cat",
                    "minecraft:chicken",
                    "minecraft:ghast",
                    "minecraft:phantom",
                    "minecraft:magma_cube",
                    "minecraft:ocelot",
                    "minecraft:parrot",
                    "minecraft:wither"
                ]
            }
        ],
        "items/acacia_logs": [
            {
                "name": "acacia_logs",
                "type": "items",
                "values": [
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood"
                ]
            },
            {
                "name": "acacia_logs",
                "type": "items",
                "values": [
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood"
                ]
            }
        ],
        "items/anvil": [
            {
                "name": "anvil",
                "type": "items",
                "values": [
                    "minecraft:anvil",
                    "minecraft:chipped_anvil",
                    "minecraft:damaged_anvil"
                ]
            },
            {
                "name": "anvil",
                "type": "items",
                "values": [
                    "minecraft:anvil",
                    "minecraft:chipped_anvil",
                    "minecraft:damaged_anvil",
                    "minecraft:anvil",
                    "minecraft:chipped_anvil",
                    "minecraft:damaged_anvil"
                ]
            }
        ],
        "items/beds": [
            {
                "name": "beds",
                "type": "items",
                "values": [
                    "minecraft:red_bed",
                    "minecraft:black_bed",
                    "minecraft:blue_bed",
                    "minecraft:brown_bed",
                    "minecraft:cyan_bed",
                    "minecraft:gray_bed",
                    "minecraft:green_bed",
                    "minecraft:light_blue_bed",
                    "minecraft:light_gray_bed",
                    "minecraft:lime_bed",
                    "minecraft:magenta_bed",
                    "minecraft:orange_bed",
                    "minecraft:pink_bed",
                    "minecraft:purple_bed",
                    "minecraft:white_bed",
                    "minecraft:yellow_bed"
                ]
            },
            {
                "name": "beds",
                "type": "items",
                "values": [
                    "minecraft:red_bed",
                    "minecraft:black_bed",
                    "minecraft:blue_bed",
                    "minecraft:brown_bed",
                    "minecraft:cyan_bed",
                    "minecraft:gray_bed",
                    "minecraft:green_bed",
                    "minecraft:light_blue_bed",
                    "minecraft:light_gray_bed",
                    "minecraft:lime_bed",
                    "minecraft:magenta_bed",
                    "minecraft:orange_bed",
                    "minecraft:pink_bed",
                    "minecraft:purple_bed",
                    "minecraft:white_bed",
                    "minecraft:yellow_bed",
                    "minecraft:red_bed",
                    "minecraft:black_bed",
                    "minecraft:blue_bed",
                    "minecraft:brown_bed",
                    "minecraft:cyan_bed",
                    "minecraft:gray_bed",
                    "minecraft:green_bed",
                    "minecraft:light_blue_bed",
                    "minecraft:light_gray_bed",
                    "minecraft:lime_bed",
                    "minecraft:magenta_bed",
                    "minecraft:orange_bed",
                    "minecraft:pink_bed",
                    "minecraft:purple_bed",
                    "minecraft:white_bed",
                    "minecraft:yellow_bed"
                ]
            }
        ],
        "items/birch_logs": [
            {
                "name": "birch_logs",
                "type": "items",
                "values": [
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood"
                ]
            },
            {
                "name": "birch_logs",
                "type": "items",
                "values": [
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood"
                ]
            }
        ],
        "items/breaks_decorated_pots": [
            {
                "name": "breaks_decorated_pots",
                "type": "items",
                "values": [
                    "minecraft:diamond_sword",
                    "minecraft:stone_sword",
                    "minecraft:golden_sword",
                    "minecraft:netherite_sword",
                    "minecraft:wooden_sword",
                    "minecraft:iron_sword",
                    "minecraft:diamond_axe",
                    "minecraft:stone_axe",
                    "minecraft:golden_axe",
                    "minecraft:netherite_axe",
                    "minecraft:wooden_axe",
                    "minecraft:iron_axe",
                    "minecraft:diamond_pickaxe",
                    "minecraft:stone_pickaxe",
                    "minecraft:golden_pickaxe",
                    "minecraft:netherite_pickaxe",
                    "minecraft:wooden_pickaxe",
                    "minecraft:iron_pickaxe",
                    "minecraft:diamond_shovel",
                    "minecraft:stone_shovel",
                    "minecraft:golden_shovel",
                    "minecraft:netherite_shovel",
                    "minecraft:wooden_shovel",
                    "minecraft:iron_shovel",
                    "minecraft:diamond_hoe",
                    "minecraft:stone_hoe",
                    "minecraft:golden_hoe",
                    "minecraft:netherite_hoe",
                    "minecraft:wooden_hoe",
                    "minecraft:iron_hoe",
                    "minecraft:trident"
                ]
            },
            null
        ],
        "items/buttons": [
            {
                "name": "buttons",
                "type": "items",
                "values": [
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:stone_button",
                    "minecraft:polished_blackstone_button"
                ]
            },
            {
                "name": "buttons",
                "type": "items",
                "values": [
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:stone_button",
                    "minecraft:polished_blackstone_button",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:stone_button",
                    "minecraft:polished_blackstone_button"
                ]
            }
        ],
        "items/candles": [
            {
                "name": "candles",
                "type": "items",
                "values": [
                    "minecraft:candle",
                    "minecraft:white_candle",
                    "minecraft:orange_candle",
                    "minecraft:magenta_candle",
                    "minecraft:light_blue_candle",
                    "minecraft:yellow_candle",
                    "minecraft:lime_candle",
                    "minecraft:pink_candle",
                    "minecraft:gray_candle",
                    "minecraft:light_gray_candle",
                    "minecraft:cyan_candle",
                    "minecraft:purple_candle",
                    "minecraft:blue_candle",
                    "minecraft:brown_candle",
                    "minecraft:green_candle",
                    "minecraft:red_candle",
                    "minecraft:black_candle"
                ]
            },
            {
                "name": "candles",
                "type": "items",
                "values": [
                    "minecraft:candle",
                    "minecraft:white_candle",
                    "minecraft:orange_candle",
                    "minecraft:magenta_candle",
                    "minecraft:light_blue_candle",
                    "minecraft:yellow_candle",
                    "minecraft:lime_candle",
                    "minecraft:pink_candle",
                    "minecraft:gray_candle",
                    "minecraft:light_gray_candle",
                    "minecraft:cyan_candle",
                    "minecraft:purple_candle",
                    "minecraft:blue_candle",
                    "minecraft:brown_candle",
                    "minecraft:green_candle",
                    "minecraft:red_candle",
                    "minecraft:black_candle",
                    "minecraft:candle",
                    "minecraft:white_candle",
                    "minecraft:orange_candle",
                    "minecraft:magenta_candle",
                    "minecraft:light_blue_candle",
                    "minecraft:yellow_candle",
                    "minecraft:lime_candle",
                    "minecraft:pink_candle",
                    "minecraft:gray_candle",
                    "minecraft:light_gray_candle",
                    "minecraft:cyan_candle",
                    "minecraft:purple_candle",
                    "minecraft:blue_candle",
                    "minecraft:brown_candle",
                    "minecraft:green_candle",
                    "minecraft:red_candle",
                    "minecraft:black_candle"
                ]
            }
        ],
        "items/coal_ores": [
            {
                "name": "coal_ores",
                "type": "items",
                "values": [
                    "minecraft:coal_ore",
                    "minecraft:deepslate_coal_ore"
                ]
            },
            {
                "name": "coal_ores",
                "type": "items",
                "values": [
                    "minecraft:coal_ore",
                    "minecraft:deepslate_coal_ore",
                    "minecraft:coal_ore",
                    "minecraft:deepslate_coal_ore"
                ]
            }
        ],
        "items/completes_find_tree_tutorial": [
            {
                "name": "completes_find_tree_tutorial",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block"
                ]
            },
            {
                "name": "completes_find_tree_tutorial",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block"
                ]
            }
        ],
        "items/copper_ores": [
            {
                "name": "copper_ores",
                "type": "items",
                "values": [
                    "minecraft:copper_ore",
                    "minecraft:deepslate_copper_ore"
                ]
            },
            {
                "name": "copper_ores",
                "type": "items",
                "values": [
                    "minecraft:copper_ore",
                    "minecraft:deepslate_copper_ore",
                    "minecraft:copper_ore",
                    "minecraft:deepslate_copper_ore"
                ]
            }
        ],
        "items/crimson_stems": [
            {
                "name": "crimson_stems",
                "type": "items",
                "values": [
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae"
                ]
            },
            {
                "name": "crimson_stems",
                "type": "items",
                "values": [
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae"
                ]
            }
        ],
        "items/dampens_vibrations": [
            {
                "name": "dampens_vibrations",
                "type": "items",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet"
                ]
            },
            {
                "name": "dampens_vibrations",
                "type": "items",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet",
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet"
                ]
            }
        ],
        "items/dark_oak_logs": [
            {
                "name": "dark_oak_logs",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood"
                ]
            },
            {
                "name": "dark_oak_logs",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood"
                ]
            }
        ],
        "items/diamond_ores": [
            {
                "name": "diamond_ores",
                "type": "items",
                "values": [
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore"
                ]
            },
            {
                "name": "diamond_ores",
                "type": "items",
                "values": [
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore",
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore"
                ]
            }
        ],
        "items/dirt": [
            {
                "name": "dirt",
                "type": "items",
                "values": [
                    "minecraft:dirt",
                    "minecraft:grass_block",
                    "minecraft:podzol",
                    "minecraft:coarse_dirt",
                    "minecraft:mycelium",
                    "minecraft:rooted_dirt",
                    "minecraft:moss_block",
                    "minecraft:mud",
                    "minecraft:muddy_mangrove_roots"
                ]
            },
            {
                "name": "dirt",
                "type": "items",
                "values": [
                    "minecraft:dirt",
                    "minecraft:grass_block",
                    "minecraft:podzol",
                    "minecraft:coarse_dirt",
                    "minecraft:mycelium",
                    "minecraft:rooted_dirt",
                    "minecraft:moss_block",
                    "minecraft:mud",
                    "minecraft:muddy_mangrove_roots",
                    "minecraft:dirt",
                    "minecraft:grass_block",
                    "minecraft:podzol",
                    "minecraft:coarse_dirt",
                    "minecraft:mycelium",
                    "minecraft:rooted_dirt",
                    "minecraft:moss_block",
                    "minecraft:mud",
                    "minecraft:muddy_mangrove_roots"
                ]
            }
        ],
        "items/doors": [
            {
                "name": "doors",
                "type": "items",
                "values": [
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:iron_door"
                ]
            },
            {
                "name": "doors",
                "type": "items",
                "values": [
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:iron_door",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:iron_door"
                ]
            }
        ],
        "items/emerald_ores": [
            {
                "name": "emerald_ores",
                "type": "items",
                "values": [
                    "minecraft:emerald_ore",
                    "minecraft:deepslate_emerald_ore"
                ]
            },
            {
                "name": "emerald_ores",
                "type": "items",
                "values": [
                    "minecraft:emerald_ore",
                    "minecraft:deepslate_emerald_ore",
                    "minecraft:emerald_ore",
                    "minecraft:deepslate_emerald_ore"
                ]
            }
        ],
        "items/fence_gates": [
            {
                "name": "fence_gates",
                "type": "items",
                "values": [
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate"
                ]
            },
            {
                "name": "fence_gates",
                "type": "items",
                "values": [
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate",
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate"
                ]
            }
        ],
        "items/fences": [
            {
                "name": "fences",
                "type": "items",
                "values": [
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:nether_brick_fence"
                ]
            },
            {
                "name": "fences",
                "type": "items",
                "values": [
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:nether_brick_fence",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:nether_brick_fence"
                ]
            }
        ],
        "items/flowers": [
            {
                "name": "flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule"
                ]
            },
            {
                "name": "flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule"
                ]
            }
        ],
        "items/gold_ores": [
            {
                "name": "gold_ores",
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore"
                ]
            },
            {
                "name": "gold_ores",
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore"
                ]
            }
        ],
        "items/iron_ores": [
            {
                "name": "iron_ores",
                "type": "items",
                "values": [
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore"
                ]
            },
            {
                "name": "iron_ores",
                "type": "items",
                "values": [
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore",
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore"
                ]
            }
        ],
        "items/jungle_logs": [
            {
                "name": "jungle_logs",
                "type": "items",
                "values": [
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood"
                ]
            },
            {
                "name": "jungle_logs",
                "type": "items",
                "values": [
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood"
                ]
            }
        ],
        "items/lapis_ores": [
            {
                "name": "lapis_ores",
                "type": "items",
                "values": [
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore"
                ]
            },
            {
                "name": "lapis_ores",
                "type": "items",
                "values": [
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore",
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore"
                ]
            }
        ],
        "items/leaves": [
            {
                "name": "leaves",
                "type": "items",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves"
                ]
            },
            {
                "name": "leaves",
                "type": "items",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves"
                ]
            }
        ],
        "items/logs": [
            {
                "name": "logs",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae"
                ]
            },
            {
                "name": "logs",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae"
                ]
            }
        ],
        "items/logs_that_burn": [
            {
                "name": "logs_that_burn",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood"
                ]
            },
            {
                "name": "logs_that_burn",
                "type": "items",
                "values": [
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood"
                ]
            }
        ],
        "items/mangrove_logs": [
            {
                "name": "mangrove_logs",
                "type": "items",
                "values": [
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood"
                ]
            },
            {
                "name": "mangrove_logs",
                "type": "items",
                "values": [
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood"
                ]
            }
        ],
        "items/oak_logs": [
            {
                "name": "oak_logs",
                "type": "items",
                "values": [
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood"
                ]
            },
            {
                "name": "oak_logs",
                "type": "items",
                "values": [
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood"
                ]
            }
        ],
        "items/piglin_loved": [
            {
                "name": "piglin_loved",
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:gold_block",
                    "minecraft:gilded_blackstone",
                    "minecraft:light_weighted_pressure_plate",
                    "minecraft:gold_ingot",
                    "minecraft:bell",
                    "minecraft:clock",
                    "minecraft:golden_carrot",
                    "minecraft:glistering_melon_slice",
                    "minecraft:golden_apple",
                    "minecraft:enchanted_golden_apple",
                    "minecraft:golden_helmet",
                    "minecraft:golden_chestplate",
                    "minecraft:golden_leggings",
                    "minecraft:golden_boots",
                    "minecraft:golden_horse_armor",
                    "minecraft:golden_sword",
                    "minecraft:golden_pickaxe",
                    "minecraft:golden_shovel",
                    "minecraft:golden_axe",
                    "minecraft:golden_hoe",
                    "minecraft:raw_gold",
                    "minecraft:raw_gold_block"
                ]
            },
            {
                "name": "piglin_loved",
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:gold_block",
                    "minecraft:gilded_blackstone",
                    "minecraft:light_weighted_pressure_plate",
                    "minecraft:gold_ingot",
                    "minecraft:bell",
                    "minecraft:clock",
                    "minecraft:golden_carrot",
                    "minecraft:glistering_melon_slice",
                    "minecraft:golden_apple",
                    "minecraft:enchanted_golden_apple",
                    "minecraft:golden_helmet",
                    "minecraft:golden_chestplate",
                    "minecraft:golden_leggings",
                    "minecraft:golden_boots",
                    "minecraft:golden_horse_armor",
                    "minecraft:golden_sword",
                    "minecraft:golden_pickaxe",
                    "minecraft:golden_shovel",
                    "minecraft:golden_axe",
                    "minecraft:golden_hoe",
                    "minecraft:raw_gold",
                    "minecraft:raw_gold_block"
                ]
            }
        ],
        "items/planks": [
            {
                "name": "planks",
                "type": "items",
                "values": [
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:mangrove_planks"
                ]
            },
            {
                "name": "planks",
                "type": "items",
                "values": [
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:mangrove_planks",
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:mangrove_planks"
                ]
            }
        ],
        "items/rails": [
            {
                "name": "rails",
                "type": "items",
                "values": [
                    "minecraft:rail",
                    "minecraft:powered_rail",
                    "minecraft:detector_rail",
                    "minecraft:activator_rail"
                ]
            },
            {
                "name": "rails",
                "type": "items",
                "values": [
                    "minecraft:rail",
                    "minecraft:powered_rail",
                    "minecraft:detector_rail",
                    "minecraft:activator_rail",
                    "minecraft:rail",
                    "minecraft:powered_rail",
                    "minecraft:detector_rail",
                    "minecraft:activator_rail"
                ]
            }
        ],
        "items/redstone_ores": [
            {
                "name": "redstone_ores",
                "type": "items",
                "values": [
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore"
                ]
            },
            {
                "name": "redstone_ores",
                "type": "items",
                "values": [
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore",
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore"
                ]
            }
        ],
        "items/sand": [
            {
                "name": "sand",
                "type": "items",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            },
            {
                "name": "sand",
                "type": "items",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            }
        ],
        "items/saplings": [
            {
                "name": "saplings",
                "type": "items",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule"
                ]
            },
            {
                "name": "saplings",
                "type": "items",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule"
                ]
            }
        ],
        "items/signs": [
            {
                "name": "signs",
                "type": "items",
                "values": [
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign"
                ]
            },
            {
                "name": "signs",
                "type": "items",
                "values": [
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign",
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign"
                ]
            }
        ],
        "items/slabs": [
            {
                "name": "slabs",
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_brick_slab",
                    "minecraft:waxed_weathered_cut_copper_slab",
                    "minecraft:waxed_exposed_cut_copper_slab",
                    "minecraft:waxed_cut_copper_slab",
                    "minecraft:oxidized_cut_copper_slab",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:exposed_cut_copper_slab",
                    "minecraft:cut_copper_slab",
                    "minecraft:waxed_oxidized_cut_copper_slab",
                    "minecraft:mud_brick_slab"
                ]
            },
            {
                "name": "slabs",
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_brick_slab",
                    "minecraft:waxed_weathered_cut_copper_slab",
                    "minecraft:waxed_exposed_cut_copper_slab",
                    "minecraft:waxed_cut_copper_slab",
                    "minecraft:oxidized_cut_copper_slab",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:exposed_cut_copper_slab",
                    "minecraft:cut_copper_slab",
                    "minecraft:waxed_oxidized_cut_copper_slab",
                    "minecraft:mud_brick_slab",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_brick_slab",
                    "minecraft:waxed_weathered_cut_copper_slab",
                    "minecraft:waxed_exposed_cut_copper_slab",
                    "minecraft:waxed_cut_copper_slab",
                    "minecraft:oxidized_cut_copper_slab",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:exposed_cut_copper_slab",
                    "minecraft:cut_copper_slab",
                    "minecraft:waxed_oxidized_cut_copper_slab",
                    "minecraft:mud_brick_slab"
                ]
            }
        ],
        "items/small_flowers": [
            {
                "name": "small_flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose"
                ]
            },
            {
                "name": "small_flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose"
                ]
            }
        ],
        "items/smelts_to_glass": [
            null,
            {
                "name": "smelts_to_glass",
                "type": "items",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            }
        ],
        "items/soul_fire_base_blocks": [
            {
                "name": "soul_fire_base_blocks",
                "type": "items",
                "values": [
                    "minecraft:soul_sand",
                    "minecraft:soul_soil"
                ]
            },
            {
                "name": "soul_fire_base_blocks",
                "type": "items",
                "values": [
                    "minecraft:soul_sand",
                    "minecraft:soul_soil",
                    "minecraft:soul_sand",
                    "minecraft:soul_soil"
                ]
            }
        ],
        "items/spruce_logs": [
            {
                "name": "spruce_logs",
                "type": "items",
                "values": [
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood"
                ]
            },
            {
                "name": "spruce_logs",
                "type": "items",
                "values": [
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood"
                ]
            }
        ],
        "items/stairs": [
            {
                "name": "stairs",
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_brick_stairs",
                    "minecraft:oxidized_cut_copper_stairs",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:exposed_cut_copper_stairs",
                    "minecraft:cut_copper_stairs",
                    "minecraft:waxed_weathered_cut_copper_stairs",
                    "minecraft:waxed_exposed_cut_copper_stairs",
                    "minecraft:waxed_cut_copper_stairs",
                    "minecraft:waxed_oxidized_cut_copper_stairs",
                    "minecraft:mud_brick_stairs"
                ]
            },
            {
                "name": "stairs",
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_brick_stairs",
                    "minecraft:oxidized_cut_copper_stairs",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:exposed_cut_copper_stairs",
                    "minecraft:cut_copper_stairs",
                    "minecraft:waxed_weathered_cut_copper_stairs",
                    "minecraft:waxed_exposed_cut_copper_stairs",
                    "minecraft:waxed_cut_copper_stairs",
                    "minecraft:waxed_oxidized_cut_copper_stairs",
                    "minecraft:mud_brick_stairs",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_brick_stairs",
                    "minecraft:oxidized_cut_copper_stairs",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:exposed_cut_copper_stairs",
                    "minecraft:cut_copper_stairs",
                    "minecraft:waxed_weathered_cut_copper_stairs",
                    "minecraft:waxed_exposed_cut_copper_stairs",
                    "minecraft:waxed_cut_copper_stairs",
                    "minecraft:waxed_oxidized_cut_copper_stairs",
                    "minecraft:mud_brick_stairs"
                ]
            }
        ],
        "items/stone_bricks": [
            {
                "name": "stone_bricks",
                "type": "items",
                "values": [
                    "minecraft:stone_bricks",
                    "minecraft:mossy_stone_bricks",
                    "minecraft:cracked_stone_bricks",
                    "minecraft:chiseled_stone_bricks"
                ]
            },
            {
                "name": "stone_bricks",
                "type": "items",
                "values": [
                    "minecraft:stone_bricks",
                    "minecraft:mossy_stone_bricks",
                    "minecraft:cracked_stone_bricks",
                    "minecraft:chiseled_stone_bricks",
                    "minecraft:stone_bricks",
                    "minecraft:mossy_stone_bricks",
                    "minecraft:cracked_stone_bricks",
                    "minecraft:chiseled_stone_bricks"
                ]
            }
        ],
        "items/tall_flowers": [
            {
                "name": "tall_flowers",
                "type": "items",
                "values": [
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush"
                ]
            },
            {
                "name": "tall_flowers",
                "type": "items",
                "values": [
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush"
                ]
            }
        ],
        "items/terracotta": [
            {
                "name": "terracotta",
                "type": "items",
                "values": [
                    "minecraft:terracotta",
                    "minecraft:white_terracotta",
                    "minecraft:orange_terracotta",
                    "minecraft:magenta_terracotta",
                    "minecraft:light_blue_terracotta",
                    "minecraft:yellow_terracotta",
                    "minecraft:lime_terracotta",
                    "minecraft:pink_terracotta",
                    "minecraft:gray_terracotta",
                    "minecraft:light_gray_terracotta",
                    "minecraft:cyan_terracotta",
                    "minecraft:purple_terracotta",
                    "minecraft:blue_terracotta",
                    "minecraft:brown_terracotta",
                    "minecraft:green_terracotta",
                    "minecraft:red_terracotta",
                    "minecraft:black_terracotta"
                ]
            },
            {
                "name": "terracotta",
                "type": "items",
                "values": [
                    "minecraft:terracotta",
                    "minecraft:white_terracotta",
                    "minecraft:orange_terracotta",
                    "minecraft:magenta_terracotta",
                    "minecraft:light_blue_terracotta",
                    "minecraft:yellow_terracotta",
                    "minecraft:lime_terracotta",
                    "minecraft:pink_terracotta",
                    "minecraft:gray_terracotta",
                    "minecraft:light_gray_terracotta",
                    "minecraft:cyan_terracotta",
                    "minecraft:purple_terracotta",
                    "minecraft:blue_terracotta",
                    "minecraft:brown_terracotta",
                    "minecraft:green_terracotta",
                    "minecraft:red_terracotta",
                    "minecraft:black_terracotta",
                    "minecraft:terracotta",
                    "minecraft:white_terracotta",
                    "minecraft:orange_terracotta",
                    "minecraft:magenta_terracotta",
                    "minecraft:light_blue_terracotta",
                    "minecraft:yellow_terracotta",
                    "minecraft:lime_terracotta",
                    "minecraft:pink_terracotta",
                    "minecraft:gray_terracotta",
                    "minecraft:light_gray_terracotta",
                    "minecraft:cyan_terracotta",
                    "minecraft:purple_terracotta",
                    "minecraft:blue_terracotta",
                    "minecraft:brown_terracotta",
                    "minecraft:green_terracotta",
                    "minecraft:red_terracotta",
                    "minecraft:black_terracotta"
                ]
            }
        ],
        "items/trapdoors": [
            {
                "name": "trapdoors",
                "type": "items",
                "values": [
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:iron_trapdoor"
                ]
            },
            {
                "name": "trapdoors",
                "type": "items",
                "values": [
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:iron_trapdoor",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:iron_trapdoor"
                ]
            }
        ],
        "items/walls": [
            {
                "name": "walls",
                "type": "items",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall",
                    "minecraft:mud_brick_wall"
                ]
            },
            {
                "name": "walls",
                "type": "items",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall",
                    "minecraft:mud_brick_wall",
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall",
                    "minecraft:mud_brick_wall"
                ]
            }
        ],
        "items/warped_stems": [
            {
                "name": "warped_stems",
                "type": "items",
                "values": [
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae"
                ]
            },
            {
                "name": "warped_stems",
                "type": "items",
                "values": [
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae"
                ]
            }
        ],
        "items/wart_blocks": [
            {
                "name": "wart_blocks",
                "type": "items",
                "values": [
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block"
                ]
            },
            {
                "name": "wart_blocks",
                "type": "items",
                "values": [
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block",
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block"
                ]
            }
        ],
        "items/wooden_buttons": [
            {
                "name": "wooden_buttons",
                "type": "items",
                "values": [
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button"
                ]
            },
            {
                "name": "wooden_buttons",
                "type": "items",
                "values": [
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button"
                ]
            }
        ],
        "items/wooden_doors": [
            {
                "name": "wooden_doors",
                "type": "items",
                "values": [
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door"
                ]
            },
            {
                "name": "wooden_doors",
                "type": "items",
                "values": [
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door"
                ]
            }
        ],
        "items/wooden_fences": [
            {
                "name": "wooden_fences",
                "type": "items",
                "values": [
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence"
                ]
            },
            {
                "name": "wooden_fences",
                "type": "items",
                "values": [
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence"
                ]
            }
        ],
        "items/wooden_pressure_plates": [
            {
                "name": "wooden_pressure_plates",
                "type": "items",
                "values": [
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:mangrove_pressure_plate"
                ]
            },
            {
                "name": "wooden_pressure_plates",
                "type": "items",
                "values": [
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:mangrove_pressure_plate",
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:mangrove_pressure_plate"
                ]
            }
        ],
        "items/wooden_slabs": [
            {
                "name": "wooden_slabs",
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab"
                ]
            },
            {
                "name": "wooden_slabs",
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab"
                ]
            }
        ],
        "items/wooden_stairs": [
            {
                "name": "wooden_stairs",
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs"
                ]
            },
            {
                "name": "wooden_stairs",
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs"
                ]
            }
        ],
        "items/wooden_trapdoors": [
            {
                "name": "wooden_trapdoors",
                "type": "items",
                "values": [
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor"
                ]
            },
            {
                "name": "wooden_trapdoors",
                "type": "items",
                "values": [
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor"
                ]
            }
        ],
        "items/wool": [
            {
                "name": "wool",
                "type": "items",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool"
                ]
            },
            {
                "name": "wool",
                "type": "items",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool",
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool"
                ]
            }
        ],
        "items/wool_carpets": [
            {
                "name": "wool_carpets",
                "type": "items",
                "values": [
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet"
                ]
            },
            {
                "name": "wool_carpets",
                "type": "items",
                "values": [
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            3329,
            3330
        ],
        "id": [
            "23w07a",
            "1.19.4-pre1"
        ],
        "name": [
            "23w07a",
            "1.19.4 Pre-release 1"
        ],
        "protocol": [
            1073741943,
            1073741944
        ]
    }
}