{
    "achievements": {},
    "blocks": {
        "block": {
            "cherry_button": [
                null,
                {
                    "class": "cpq",
                    "display_name": "Cherry Button",
                    "field": "gz",
                    "hardness": 0.5,
                    "max_state_id": 8750,
                    "min_state_id": 8727,
                    "num_states": 24,
                    "numeric_id": 389,
                    "resistance": 0.5,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "enum_class": "dcc",
                            "field_name": "J",
                            "name": "face",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "FLOOR",
                                "WALL",
                                "CEILING"
                            ]
                        }
                    ],
                    "super": [
                        "crv",
                        "csy",
                        "cpi"
                    ],
                    "text_id": "cherry_button"
                }
            ],
            "cherry_door": [
                null,
                {
                    "class": "cri",
                    "display_name": "Cherry Door",
                    "field": "ko",
                    "hardness": 3.0,
                    "max_state_id": 11996,
                    "min_state_id": 11933,
                    "num_states": 64,
                    "numeric_id": 586,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "dcn",
                            "field_name": "e",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "UPPER",
                                "LOWER"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "enum_class": "dcm",
                            "field_name": "c",
                            "name": "hinge",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "LEFT",
                                "RIGHT"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "cherry_door"
                }
            ],
            "cherry_fence": [
                null,
                {
                    "class": "crz",
                    "display_name": "Cherry Fence",
                    "field": "kg",
                    "hardness": 2.0,
                    "max_state_id": 11580,
                    "min_state_id": 11549,
                    "num_states": 32,
                    "numeric_id": 578,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "north",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "west",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "south",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cqy",
                        "cpi"
                    ],
                    "text_id": "cherry_fence"
                }
            ],
            "cherry_fence_gate": [
                null,
                {
                    "class": "csa",
                    "display_name": "Cherry Fence Gate",
                    "field": "jY",
                    "hardness": 2.0,
                    "max_state_id": 11324,
                    "min_state_id": 11293,
                    "num_states": 32,
                    "numeric_id": 570,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "in_wall",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "csy",
                        "cpi"
                    ],
                    "text_id": "cherry_fence_gate"
                }
            ],
            "cherry_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cqe",
                    "display_name": "Cherry Hanging Sign",
                    "field": "dd",
                    "hardness": 1.0,
                    "max_state_id": 5149,
                    "min_state_id": 5086,
                    "num_states": 64,
                    "numeric_id": 211,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cwe",
                        "cov",
                        "cpi"
                    ],
                    "text_id": "cherry_hanging_sign"
                }
            ],
            "cherry_leaves": [
                null,
                {
                    "class": "cqh",
                    "display_name": "Cherry Leaves",
                    "field": "aI",
                    "hardness": 0.2,
                    "max_state_id": 400,
                    "min_state_id": 373,
                    "num_states": 28,
                    "numeric_id": 86,
                    "resistance": 0.2,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "max": 7,
                            "min": 1,
                            "name": "distance",
                            "num_values": 7,
                            "type": "int"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "persistent",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctm",
                        "cpi"
                    ],
                    "text_id": "cherry_leaves"
                }
            ],
            "cherry_log": [
                null,
                {
                    "class": "cvp",
                    "display_name": "Cherry Log",
                    "field": "Y",
                    "hardness": 2.0,
                    "max_state_id": 143,
                    "min_state_id": 141,
                    "num_states": 3,
                    "numeric_id": 50,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "gz$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "cherry_log"
                }
            ],
            "cherry_planks": [
                null,
                {
                    "class": "cpi",
                    "display_name": "Cherry Planks",
                    "field": "s",
                    "hardness": 2.0,
                    "max_state_id": 20,
                    "min_state_id": 20,
                    "num_states": 1,
                    "numeric_id": 18,
                    "resistance": 3.0,
                    "states": [],
                    "super": [],
                    "text_id": "cherry_planks"
                }
            ],
            "cherry_pressure_plate": [
                null,
                {
                    "class": "cva",
                    "display_name": "Cherry Pressure Plate",
                    "field": "dD",
                    "hardness": 0.5,
                    "max_state_id": 5723,
                    "min_state_id": 5722,
                    "num_states": 2,
                    "numeric_id": 237,
                    "resistance": 0.5,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cox",
                        "cpi"
                    ],
                    "text_id": "cherry_pressure_plate"
                }
            ],
            "cherry_sapling": [
                null,
                {
                    "class": "cvs",
                    "display_name": "Cherry Sapling",
                    "field": "C",
                    "hardness": 0.0,
                    "max_state_id": 36,
                    "min_state_id": 35,
                    "num_states": 2,
                    "numeric_id": 28,
                    "resistance": 0.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "max": 1,
                            "min": 0,
                            "name": "stage",
                            "num_values": 2,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cpp",
                        "cpi"
                    ],
                    "text_id": "cherry_sapling"
                }
            ],
            "cherry_sign": [
                null,
                {
                    "block_entity": "sign",
                    "class": "cwy",
                    "display_name": "Cherry Sign",
                    "field": "cH",
                    "hardness": 1.0,
                    "max_state_id": 4457,
                    "min_state_id": 4426,
                    "num_states": 32,
                    "numeric_id": 189,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cwe",
                        "cov",
                        "cpi"
                    ],
                    "text_id": "cherry_sign"
                }
            ],
            "cherry_slab": [
                null,
                {
                    "class": "cwh",
                    "display_name": "Cherry Slab",
                    "field": "jx",
                    "hardness": 2.0,
                    "max_state_id": 11052,
                    "min_state_id": 11047,
                    "num_states": 6,
                    "numeric_id": 543,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "dcz",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "cherry_slab"
                }
            ],
            "cherry_stairs": [
                null,
                {
                    "class": "cwx",
                    "display_name": "Cherry Stairs",
                    "field": "hP",
                    "max_state_id": 9899,
                    "min_state_id": 9820,
                    "num_states": 80,
                    "numeric_id": 457,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "enum_class": "dcq",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "enum_class": "dda",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "cherry_stairs"
                }
            ],
            "cherry_trapdoor": [
                null,
                {
                    "class": "cxr",
                    "display_name": "Cherry Trapdoor",
                    "field": "eD",
                    "hardness": 3.0,
                    "max_state_id": 6341,
                    "min_state_id": 6278,
                    "num_states": 64,
                    "numeric_id": 289,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "enum_class": "dcq",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "csy",
                        "cpi"
                    ],
                    "text_id": "cherry_trapdoor"
                }
            ],
            "cherry_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cyb",
                    "display_name": "Cherry Wall Hanging Sign",
                    "field": "do",
                    "hardness": 1.0,
                    "max_state_id": 5573,
                    "min_state_id": 5566,
                    "num_states": 8,
                    "numeric_id": 222,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cwe",
                        "cov",
                        "cpi"
                    ],
                    "text_id": "cherry_wall_hanging_sign"
                }
            ],
            "cherry_wall_sign": [
                null,
                {
                    "block_entity": "sign",
                    "class": "cyc",
                    "display_name": "Cherry Wall Sign",
                    "field": "cU",
                    "hardness": 1.0,
                    "max_state_id": 4797,
                    "min_state_id": 4790,
                    "num_states": 8,
                    "numeric_id": 202,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cwe",
                        "cov",
                        "cpi"
                    ],
                    "text_id": "cherry_wall_sign"
                }
            ],
            "cherry_wood": [
                null,
                {
                    "class": "cvp",
                    "display_name": "Cherry Wood",
                    "field": "as",
                    "hardness": 2.0,
                    "max_state_id": 202,
                    "min_state_id": 200,
                    "num_states": 3,
                    "numeric_id": 70,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "gz$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "cherry_wood"
                }
            ],
            "decorated_pot": [
                null,
                {
                    "block_entity": "decorated_pot",
                    "class": "crc",
                    "display_name": "Decorated Pot",
                    "field": "sj",
                    "hardness": 0.0,
                    "max_state_id": 23724,
                    "min_state_id": 23717,
                    "num_states": 8,
                    "numeric_id": 997,
                    "resistance": 0.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cov",
                        "cpi"
                    ],
                    "text_id": "decorated_pot"
                }
            ],
            "pink_petals": [
                null,
                {
                    "class": "cuq",
                    "display_name": "Pink Petals",
                    "field": "rv",
                    "max_state_id": 21985,
                    "min_state_id": 21970,
                    "num_states": 16,
                    "numeric_id": 957,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "dch",
                            "field_name": "d",
                            "max": 4,
                            "min": 1,
                            "name": "flower_amount",
                            "num_values": 4,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cpp",
                        "cpi"
                    ],
                    "text_id": "pink_petals"
                }
            ],
            "potted_cherry_sapling": [
                null,
                {
                    "class": "cse",
                    "display_name": "Potted Cherry Sapling",
                    "field": "fX",
                    "hardness": 0.0,
                    "max_state_id": 8570,
                    "min_state_id": 8570,
                    "num_states": 1,
                    "numeric_id": 361,
                    "resistance": 0.0,
                    "states": [],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "potted_cherry_sapling"
                }
            ],
            "potted_torchflower": [
                null,
                {
                    "class": "cse",
                    "display_name": "Potted Torchflower",
                    "field": "fR",
                    "hardness": 0.0,
                    "max_state_id": 8564,
                    "min_state_id": 8564,
                    "num_states": 1,
                    "numeric_id": 355,
                    "resistance": 0.0,
                    "states": [],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "potted_torchflower"
                }
            ],
            "stripped_cherry_log": [
                null,
                {
                    "class": "cvp",
                    "display_name": "Stripped Cherry Log",
                    "field": "ai",
                    "hardness": 2.0,
                    "max_state_id": 172,
                    "min_state_id": 170,
                    "num_states": 3,
                    "numeric_id": 60,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "gz$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "stripped_cherry_log"
                }
            ],
            "stripped_cherry_wood": [
                null,
                {
                    "class": "cvp",
                    "display_name": "Stripped Cherry Wood",
                    "field": "aA",
                    "hardness": 2.0,
                    "max_state_id": 226,
                    "min_state_id": 224,
                    "num_states": 3,
                    "numeric_id": 78,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "enum_class": "gz$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cpi"
                    ],
                    "text_id": "stripped_cherry_wood"
                }
            ],
            "suspicious_sand": [
                null,
                {
                    "block_entity": "suspicious_sand",
                    "class": "cxh",
                    "display_name": "Suspicious Sand",
                    "field": "J",
                    "hardness": 0.25,
                    "max_state_id": 116,
                    "min_state_id": 113,
                    "num_states": 4,
                    "numeric_id": 35,
                    "resistance": 0.25,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "max": 3,
                            "min": 0,
                            "name": "dusted",
                            "num_values": 4,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cov",
                        "cpi"
                    ],
                    "text_id": "suspicious_sand"
                }
            ],
            "torchflower": [
                null,
                {
                    "class": "csd",
                    "display_name": "Torchflower",
                    "field": "bR",
                    "hardness": 0.0,
                    "max_state_id": 2072,
                    "min_state_id": 2072,
                    "num_states": 1,
                    "numeric_id": 147,
                    "resistance": 0.0,
                    "states": [],
                    "super": [
                        "cpp",
                        "cpi"
                    ],
                    "text_id": "torchflower"
                }
            ],
            "torchflower_crop": [
                null,
                {
                    "class": "cxq",
                    "display_name": "Torchflower Crop",
                    "field": "kz",
                    "hardness": 0.0,
                    "max_state_id": 12352,
                    "min_state_id": 12350,
                    "num_states": 3,
                    "numeric_id": 597,
                    "resistance": 0.0,
                    "states": [
                        {
                            "declared_in": "dch",
                            "field_name": "b",
                            "max": 2,
                            "min": 0,
                            "name": "age",
                            "num_values": 3,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cqx",
                        "cpp",
                        "cpi"
                    ],
                    "text_id": "torchflower_crop"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {
            "20": [
                {
                    "class": "abo$1",
                    "field": "v",
                    "id": 20,
                    "instructions": [
                        {
                            "field": "iw.ai.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "bps"
                },
                null
            ],
            "22": [
                {
                    "class": "abo$1",
                    "field": "q",
                    "id": 22,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "type": "java/util/Optional<Lgy;>"
                },
                {
                    "class": "acm$1",
                    "field": "x",
                    "id": 22,
                    "instructions": [
                        {
                            "field": "ja.aj.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "bru"
                }
            ],
            "23": [
                {
                    "class": "abo$1",
                    "field": "x",
                    "id": 23,
                    "instructions": [
                        {
                            "field": "None.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "gz<Lbte;>"
                },
                {
                    "class": "acm$1",
                    "field": "r",
                    "id": 23,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "type": "java/util/Optional<Lhc;>"
                }
            ],
            "24": [
                null,
                {
                    "class": "acm$1",
                    "field": "y",
                    "id": 24,
                    "instructions": [
                        {
                            "field": "None.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "hd<Lbvb;>"
                }
            ],
            "25": [
                null,
                {
                    "class": "acm$1",
                    "field": "z",
                    "id": 25,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "type": "btv$a"
                }
            ],
            "BlockState": [
                null,
                {
                    "class": "acm$1",
                    "field": "i",
                    "id": 14,
                    "instructions": [
                        {
                            "field": "cpi.o.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "BlockState",
                    "type": "dbq"
                }
            ],
            "NBT": [
                {
                    "class": "abp$5",
                    "field": "r",
                    "id": 15,
                    "instructions": [
                        {
                            "field": "(qp)value",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "name": "NBT",
                    "type": "qp"
                },
                {
                    "class": "acn$5",
                    "field": "s",
                    "id": 16,
                    "instructions": [
                        {
                            "field": "(re)value",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "name": "NBT",
                    "type": "re"
                }
            ],
            "OptBlockState": [
                {
                    "class": "abp$2",
                    "field": "i",
                    "id": 14,
                    "instructions": [
                        {
                            "condition": "((Optional)value).isPresent()",
                            "instructions": [
                                {
                                    "field": "cmt.i(((cyt)((Optional)value).get()))",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "name": "OptBlockState",
                    "type": "java/util/Optional<Lcyt;>"
                },
                {
                    "class": "acn$2",
                    "field": "j",
                    "id": 15,
                    "instructions": [
                        {
                            "condition": "((Optional)value).isPresent()",
                            "instructions": [
                                {
                                    "field": "cpi.i(((dbq)((Optional)value).get()))",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "name": "OptBlockState",
                    "type": "java/util/Optional<Ldbq;>"
                }
            ],
            "OptVarInt": [
                {
                    "class": "abp$7",
                    "field": "t",
                    "id": 18,
                    "instructions": [
                        {
                            "field": "((OptionalInt)value).orElse(-1) + 1",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "OptVarInt",
                    "type": "java/util/OptionalInt"
                },
                {
                    "class": "acn$7",
                    "field": "u",
                    "id": 19,
                    "instructions": [
                        {
                            "field": "((OptionalInt)value).orElse(-1) + 1",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "OptVarInt",
                    "type": "java/util/OptionalInt"
                }
            ],
            "Particle": [
                {
                    "class": "abp$3",
                    "field": "k",
                    "id": 16,
                    "instructions": [
                        {
                            "field": "iw.k.getId(((io)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "(io)value",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "io",
                            "type": "interface"
                        }
                    ],
                    "name": "Particle",
                    "type": "io"
                },
                {
                    "class": "acn$3",
                    "field": "l",
                    "id": 17,
                    "instructions": [
                        {
                            "field": "ja.k.getId(((is)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "(is)value",
                            "method": "a(Lss;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "is",
                            "type": "interface"
                        }
                    ],
                    "name": "Particle",
                    "type": "is"
                }
            ],
            "Pose": [
                {
                    "class": "abo$1",
                    "field": "u",
                    "id": 19,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Pose",
                    "type": "bes"
                },
                {
                    "class": "acm$1",
                    "field": "v",
                    "id": 20,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Pose",
                    "type": "bgj"
                }
            ],
            "Quaternionf": [
                null,
                {
                    "class": "acm$1",
                    "field": "B",
                    "id": 27,
                    "instructions": [
                        {
                            "field": "value.x",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "value.y",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "value.z",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "value.w",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Quaternionf",
                    "type": "org/joml/Quaternionf"
                }
            ],
            "Vector3f": [
                null,
                {
                    "class": "acm$1",
                    "field": "A",
                    "id": 26,
                    "instructions": [
                        {
                            "field": "value.x()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "value.y()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "value.z()",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Vector3f",
                    "type": "org/joml/Vector3f"
                }
            ],
            "VillagerData": [
                {
                    "class": "abp$6",
                    "field": "s",
                    "id": 17,
                    "instructions": [
                        {
                            "field": "iw.y.getId(((bwd)value).a())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.z.getId(((bwd)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "((bwd)value).c()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "VillagerData",
                    "type": "bwd"
                },
                {
                    "class": "acn$6",
                    "field": "t",
                    "id": 18,
                    "instructions": [
                        {
                            "field": "ja.y.getId(((bya)value).a())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ja.z.getId(((bya)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "((bya)value).c()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "VillagerData",
                    "type": "bya"
                }
            ]
        },
        "entity": {
            "block_display": [
                null,
                {
                    "class": "bfg$b",
                    "display_name": "Block Display",
                    "field": "j",
                    "height": 0.0,
                    "id": 8,
                    "metadata": [
                        {
                            "class": "bfh",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aC",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfg$b",
                            "data": [
                                {
                                    "field": "p",
                                    "index": 22,
                                    "serializer": "BlockState",
                                    "serializer_id": 14
                                }
                            ]
                        }
                    ],
                    "name": "block_display",
                    "width": 0.0
                }
            ],
            "camel": [
                {
                    "class": "bra",
                    "display_name": "Camel",
                    "field": "m",
                    "height": 2.375,
                    "id": 11,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bra",
                            "data": [
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": -52,
                                    "field": "cb",
                                    "index": 20,
                                    "serializer": "Long",
                                    "serializer_id": 2
                                }
                            ]
                        }
                    ],
                    "name": "camel",
                    "width": 1.7
                },
                {
                    "class": "bsv",
                    "display_name": "Camel",
                    "field": "l",
                    "height": 2.375,
                    "id": 10,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bsv",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bW",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "bX",
                                    "index": 19,
                                    "serializer": "Long",
                                    "serializer_id": 2
                                }
                            ]
                        }
                    ],
                    "name": "camel",
                    "width": 1.7
                }
            ],
            "cat": [
                {
                    "class": "bpr",
                    "display_name": "Cat",
                    "field": "l",
                    "height": 0.7,
                    "id": 10,
                    "metadata": [
                        {
                            "class": "bfb",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "bpr",
                            "data": [
                                {
                                    "field": "ce",
                                    "index": 19,
                                    "serializer": 20,
                                    "serializer_id": 20
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 20,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "ch",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "cat",
                    "width": 0.6
                },
                {
                    "class": "brm",
                    "display_name": "Cat",
                    "field": "m",
                    "height": 0.7,
                    "id": 11,
                    "metadata": [
                        {
                            "class": "bgt",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "field": "bZ",
                                    "index": 19,
                                    "serializer": 21,
                                    "serializer_id": 21
                                },
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 20,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "cc",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "cat",
                    "width": 0.6
                }
            ],
            "donkey": [
                {
                    "class": "bro",
                    "display_name": "Donkey",
                    "field": "t",
                    "height": 1.5,
                    "id": 18,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "donkey",
                    "width": 1.39648
                },
                {
                    "class": "btj",
                    "display_name": "Donkey",
                    "field": "w",
                    "height": 1.5,
                    "id": 21,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bth",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bT",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "donkey",
                    "width": 1.39648
                }
            ],
            "frog": [
                {
                    "class": "brd",
                    "display_name": "Frog",
                    "field": "I",
                    "height": 0.5,
                    "id": 33,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "brd",
                            "data": [
                                {
                                    "field": "ci",
                                    "index": 17,
                                    "serializer": 21,
                                    "serializer_id": 21
                                },
                                {
                                    "default": "Empty",
                                    "field": "cj",
                                    "index": 18,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 18
                                }
                            ]
                        }
                    ],
                    "name": "frog",
                    "width": 0.5
                },
                {
                    "class": "bsy",
                    "display_name": "Frog",
                    "field": "O",
                    "height": 0.5,
                    "id": 39,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bsy",
                            "data": [
                                {
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": 22,
                                    "serializer_id": 22
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 19
                                }
                            ]
                        }
                    ],
                    "name": "frog",
                    "width": 0.5
                }
            ],
            "horse": [
                {
                    "class": "brp",
                    "display_name": "Horse",
                    "field": "Q",
                    "height": 1.6,
                    "id": 41,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brp",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "horse",
                    "width": 1.39648
                },
                {
                    "class": "btk",
                    "display_name": "Horse",
                    "field": "Y",
                    "height": 1.6,
                    "id": 49,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "btk",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bT",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "horse",
                    "width": 1.39648
                }
            ],
            "interaction": [
                null,
                {
                    "class": "bfs",
                    "display_name": "Interaction",
                    "field": "ab",
                    "height": 0.0,
                    "id": 52,
                    "metadata": [
                        {
                            "class": "bfh",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfs",
                            "data": [
                                {
                                    "default": 1.0,
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "d",
                                    "index": 9,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 10,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "interaction",
                    "width": 0.0
                }
            ],
            "item_display": [
                null,
                {
                    "class": "bfg$j",
                    "display_name": "Item Display",
                    "field": "ae",
                    "height": 0.0,
                    "id": 55,
                    "metadata": [
                        {
                            "class": "bfh",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aC",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfg$j",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "q",
                                    "index": 22,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "r",
                                    "index": 23,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "item_display",
                    "width": 0.0
                }
            ],
            "llama": [
                {
                    "class": "brq",
                    "display_name": "Llama",
                    "field": "Z",
                    "height": 1.87,
                    "id": 50,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brq",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "cc",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "llama",
                    "width": 0.9
                },
                {
                    "class": "btl",
                    "display_name": "Llama",
                    "field": "aj",
                    "height": 1.87,
                    "id": 60,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bth",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bT",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "btl",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bW",
                                    "index": 19,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "bX",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bY",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "llama",
                    "width": 0.9
                }
            ],
            "mule": [
                {
                    "class": "brs",
                    "display_name": "Mule",
                    "field": "ak",
                    "height": 1.6,
                    "id": 61,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "mule",
                    "width": 1.39648
                },
                {
                    "class": "btn",
                    "display_name": "Mule",
                    "field": "ap",
                    "height": 1.6,
                    "id": 66,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bth",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bT",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "mule",
                    "width": 1.39648
                }
            ],
            "painting": [
                {
                    "class": "btd",
                    "display_name": "Painting",
                    "field": "an",
                    "height": 0.5,
                    "id": 64,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "btd",
                            "data": [
                                {
                                    "field": "e",
                                    "index": 8,
                                    "serializer": 23,
                                    "serializer_id": 23
                                }
                            ]
                        }
                    ],
                    "name": "painting",
                    "width": 0.5
                },
                {
                    "class": "bva",
                    "display_name": "Painting",
                    "field": "ar",
                    "height": 0.5,
                    "id": 68,
                    "metadata": [
                        {
                            "class": "bfh",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "field": "f",
                                    "index": 8,
                                    "serializer": 24,
                                    "serializer_id": 24
                                }
                            ]
                        }
                    ],
                    "name": "painting",
                    "width": 0.5
                }
            ],
            "skeleton_horse": [
                {
                    "class": "brt",
                    "display_name": "Skeleton Horse",
                    "field": "aG",
                    "height": 1.6,
                    "id": 83,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "skeleton_horse",
                    "width": 1.39648
                },
                {
                    "class": "bto",
                    "display_name": "Skeleton Horse",
                    "field": "aK",
                    "height": 1.6,
                    "id": 87,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "skeleton_horse",
                    "width": 1.39648
                }
            ],
            "sniffer": [
                null,
                {
                    "class": "btv",
                    "display_name": "Sniffer",
                    "field": "aN",
                    "height": 1.75,
                    "id": 90,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "btv",
                            "data": [
                                {
                                    "field": "ch",
                                    "index": 17,
                                    "serializer": 25,
                                    "serializer_id": 25
                                },
                                {
                                    "field": "ci",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "sniffer",
                    "width": 1.9
                }
            ],
            "text_display": [
                null,
                {
                    "class": "bfg$k",
                    "display_name": "Text Display",
                    "field": "aX",
                    "height": 0.0,
                    "id": 100,
                    "metadata": [
                        {
                            "class": "bfh",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aC",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfg$k",
                            "data": [
                                {
                                    "field": "aK",
                                    "index": 22,
                                    "serializer": "Chat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": 200,
                                    "field": "aL",
                                    "index": 23,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1073741824,
                                    "field": "aM",
                                    "index": 24,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "aN",
                                    "index": 25,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 0,
                                    "field": "aO",
                                    "index": 26,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "text_display",
                    "width": 0.0
                }
            ],
            "zombie_horse": [
                {
                    "class": "brx",
                    "display_name": "Zombie Horse",
                    "field": "bl",
                    "height": 1.6,
                    "id": 114,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "zombie_horse",
                    "width": 1.39648
                },
                {
                    "class": "bts",
                    "display_name": "Zombie Horse",
                    "field": "bq",
                    "height": 1.6,
                    "id": 119,
                    "metadata": [
                        {
                            "class": "brj",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gh"
                                },
                                {
                                    "mask": 16,
                                    "method": "gk"
                                },
                                {
                                    "mask": 32,
                                    "method": "gl"
                                },
                                {
                                    "mask": 8,
                                    "method": "gm"
                                },
                                {
                                    "mask": 4,
                                    "method": "i"
                                }
                            ],
                            "class": "bti",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cu",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "zombie_horse",
                    "width": 1.39648
                }
            ]
        }
    },
    "items": {
        "item": {
            "brush": [
                null,
                {
                    "class": "cdx",
                    "display_name": "Brush",
                    "field": "wp",
                    "max_stack_size": 64,
                    "numeric_id": 1211,
                    "text_id": "brush"
                }
            ],
            "cherry_boat": [
                null,
                {
                    "class": "cdr",
                    "display_name": "Cherry Boat",
                    "field": "no",
                    "max_stack_size": 1,
                    "numeric_id": 742,
                    "text_id": "cherry_boat"
                }
            ],
            "cherry_button": [
                null,
                {
                    "display_name": "Cherry Button",
                    "field": "lN",
                    "max_stack_size": 64,
                    "numeric_id": 663,
                    "text_id": "cherry_button"
                }
            ],
            "cherry_chest_boat": [
                null,
                {
                    "class": "cdr",
                    "display_name": "Cherry Boat with Chest",
                    "field": "np",
                    "max_stack_size": 1,
                    "numeric_id": 743,
                    "text_id": "cherry_chest_boat"
                }
            ],
            "cherry_door": [
                null,
                {
                    "class": "cek",
                    "display_name": "Cherry Door",
                    "field": "mo",
                    "max_stack_size": 64,
                    "numeric_id": 690,
                    "text_id": "cherry_door"
                }
            ],
            "cherry_fence": [
                null,
                {
                    "display_name": "Cherry Fence",
                    "field": "eG",
                    "max_stack_size": 64,
                    "numeric_id": 292,
                    "text_id": "cherry_fence"
                }
            ],
            "cherry_fence_gate": [
                null,
                {
                    "display_name": "Cherry Fence Gate",
                    "field": "mL",
                    "max_stack_size": 64,
                    "numeric_id": 713,
                    "text_id": "cherry_fence_gate"
                }
            ],
            "cherry_hanging_sign": [
                null,
                {
                    "class": "cfi",
                    "display_name": "Cherry Hanging Sign",
                    "field": "pA",
                    "max_stack_size": 16,
                    "numeric_id": 858,
                    "text_id": "cherry_hanging_sign"
                }
            ],
            "cherry_leaves": [
                null,
                {
                    "display_name": "Cherry Leaves",
                    "field": "cc",
                    "max_stack_size": 64,
                    "numeric_id": 158,
                    "text_id": "cherry_leaves"
                }
            ],
            "cherry_log": [
                null,
                {
                    "display_name": "Cherry Log",
                    "field": "bk",
                    "max_stack_size": 64,
                    "numeric_id": 114,
                    "text_id": "cherry_log"
                }
            ],
            "cherry_planks": [
                null,
                {
                    "display_name": "Cherry Planks",
                    "field": "C",
                    "max_stack_size": 64,
                    "numeric_id": 28,
                    "text_id": "cherry_planks"
                }
            ],
            "cherry_pressure_plate": [
                null,
                {
                    "display_name": "Cherry Pressure Plate",
                    "field": "mc",
                    "max_stack_size": 64,
                    "numeric_id": 678,
                    "text_id": "cherry_pressure_plate"
                }
            ],
            "cherry_sapling": [
                null,
                {
                    "display_name": "Cherry Sapling",
                    "field": "O",
                    "max_stack_size": 64,
                    "numeric_id": 40,
                    "text_id": "cherry_sapling"
                }
            ],
            "cherry_sign": [
                null,
                {
                    "class": "cgu",
                    "display_name": "Cherry Sign",
                    "field": "pp",
                    "max_stack_size": 16,
                    "numeric_id": 847,
                    "text_id": "cherry_sign"
                }
            ],
            "cherry_slab": [
                null,
                {
                    "display_name": "Cherry Slab",
                    "field": "dz",
                    "max_stack_size": 64,
                    "numeric_id": 233,
                    "text_id": "cherry_slab"
                }
            ],
            "cherry_stairs": [
                null,
                {
                    "display_name": "Cherry Stairs",
                    "field": "ga",
                    "max_stack_size": 64,
                    "numeric_id": 364,
                    "text_id": "cherry_stairs"
                }
            ],
            "cherry_trapdoor": [
                null,
                {
                    "display_name": "Cherry Trapdoor",
                    "field": "mA",
                    "max_stack_size": 64,
                    "numeric_id": 702,
                    "text_id": "cherry_trapdoor"
                }
            ],
            "cherry_wood": [
                null,
                {
                    "display_name": "Cherry Wood",
                    "field": "bS",
                    "max_stack_size": 64,
                    "numeric_id": 148,
                    "text_id": "cherry_wood"
                }
            ],
            "coast_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wt",
                    "max_stack_size": 64,
                    "numeric_id": 1215,
                    "text_id": "coast_armor_trim_smithing_template"
                }
            ],
            "decorated_pot": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Decorated Pot",
                    "field": "ee",
                    "max_stack_size": 1,
                    "numeric_id": 264,
                    "text_id": "decorated_pot"
                }
            ],
            "dune_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "ws",
                    "max_stack_size": 64,
                    "numeric_id": 1214,
                    "text_id": "dune_armor_trim_smithing_template"
                }
            ],
            "eye_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "ww",
                    "max_stack_size": 64,
                    "numeric_id": 1218,
                    "text_id": "eye_armor_trim_smithing_template"
                }
            ],
            "netherite_upgrade_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wq",
                    "max_stack_size": 64,
                    "numeric_id": 1212,
                    "text_id": "netherite_upgrade_smithing_template"
                }
            ],
            "pink_petals": [
                null,
                {
                    "display_name": "Pink Petals",
                    "field": "do",
                    "max_stack_size": 64,
                    "numeric_id": 222,
                    "text_id": "pink_petals"
                }
            ],
            "pottery_shard_archer": [
                null,
                {
                    "class": "cfq",
                    "display_name": "Archer Pottery Shard",
                    "field": "wC",
                    "max_stack_size": 64,
                    "numeric_id": 1224,
                    "text_id": "pottery_shard_archer"
                }
            ],
            "pottery_shard_arms_up": [
                null,
                {
                    "class": "cfq",
                    "display_name": "Arms Up Pottery Shard",
                    "field": "wE",
                    "max_stack_size": 64,
                    "numeric_id": 1226,
                    "text_id": "pottery_shard_arms_up"
                }
            ],
            "pottery_shard_prize": [
                null,
                {
                    "class": "cfq",
                    "display_name": "Prize Pottery Shard",
                    "field": "wD",
                    "max_stack_size": 64,
                    "numeric_id": 1225,
                    "text_id": "pottery_shard_prize"
                }
            ],
            "pottery_shard_skull": [
                null,
                {
                    "class": "cfq",
                    "display_name": "Skull Pottery Shard",
                    "field": "wF",
                    "max_stack_size": 64,
                    "numeric_id": 1227,
                    "text_id": "pottery_shard_skull"
                }
            ],
            "rib_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wA",
                    "max_stack_size": 64,
                    "numeric_id": 1222,
                    "text_id": "rib_armor_trim_smithing_template"
                }
            ],
            "sentry_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wr",
                    "max_stack_size": 64,
                    "numeric_id": 1213,
                    "text_id": "sentry_armor_trim_smithing_template"
                }
            ],
            "sniffer_spawn_egg": [
                null,
                {
                    "class": "cgz",
                    "display_name": "Sniffer Spawn Egg",
                    "field": "sC",
                    "max_stack_size": 64,
                    "numeric_id": 1016,
                    "text_id": "sniffer_spawn_egg"
                }
            ],
            "snout_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wz",
                    "max_stack_size": 64,
                    "numeric_id": 1221,
                    "text_id": "snout_armor_trim_smithing_template"
                }
            ],
            "spire_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wB",
                    "max_stack_size": 64,
                    "numeric_id": 1223,
                    "text_id": "spire_armor_trim_smithing_template"
                }
            ],
            "stripped_cherry_log": [
                null,
                {
                    "display_name": "Stripped Cherry Log",
                    "field": "bx",
                    "max_stack_size": 64,
                    "numeric_id": 127,
                    "text_id": "stripped_cherry_log"
                }
            ],
            "stripped_cherry_wood": [
                null,
                {
                    "display_name": "Stripped Cherry Wood",
                    "field": "bH",
                    "max_stack_size": 64,
                    "numeric_id": 137,
                    "text_id": "stripped_cherry_wood"
                }
            ],
            "suspicious_sand": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Suspicious Sand",
                    "field": "T",
                    "max_stack_size": 64,
                    "numeric_id": 45,
                    "text_id": "suspicious_sand"
                }
            ],
            "tide_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wy",
                    "max_stack_size": 64,
                    "numeric_id": 1220,
                    "text_id": "tide_armor_trim_smithing_template"
                }
            ],
            "torchflower": [
                null,
                {
                    "display_name": "Torchflower",
                    "field": "da",
                    "max_stack_size": 64,
                    "numeric_id": 208,
                    "text_id": "torchflower"
                }
            ],
            "torchflower_seeds": [
                null,
                {
                    "class": "cfu",
                    "display_name": "Torchflower Seeds",
                    "field": "uk",
                    "max_stack_size": 64,
                    "numeric_id": 1102,
                    "text_id": "torchflower_seeds"
                }
            ],
            "vex_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wx",
                    "max_stack_size": 64,
                    "numeric_id": 1219,
                    "text_id": "vex_armor_trim_smithing_template"
                }
            ],
            "ward_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wv",
                    "max_stack_size": 64,
                    "numeric_id": 1217,
                    "text_id": "ward_armor_trim_smithing_template"
                }
            ],
            "wild_armor_trim_smithing_template": [
                null,
                {
                    "class": "cgw",
                    "field": "wu",
                    "max_stack_size": 64,
                    "numeric_id": 1216,
                    "text_id": "wild_armor_trim_smithing_template"
                }
            ]
        }
    },
    "language": {
        "accessibility": [
            null,
            {
                "onboarding.screen.narrator": "Press enter to enable the narrator",
                "onboarding.screen.title": "Welcome to Minecraft!\n\nWould you like to enable the Narrator or visit the Accessibility Settings?"
            }
        ],
        "argument": {
            "time.tick_count_too_low": [
                null,
                "Tick count must not be less than %s, found %s"
            ]
        },
        "biome": {
            "minecraft.cherry_grove": [
                null,
                "Cherry Grove"
            ]
        },
        "block": {
            "minecraft.cherry_button": [
                null,
                "Cherry Button"
            ],
            "minecraft.cherry_door": [
                null,
                "Cherry Door"
            ],
            "minecraft.cherry_fence": [
                null,
                "Cherry Fence"
            ],
            "minecraft.cherry_fence_gate": [
                null,
                "Cherry Fence Gate"
            ],
            "minecraft.cherry_hanging_sign": [
                null,
                "Cherry Hanging Sign"
            ],
            "minecraft.cherry_leaves": [
                null,
                "Cherry Leaves"
            ],
            "minecraft.cherry_log": [
                null,
                "Cherry Log"
            ],
            "minecraft.cherry_planks": [
                null,
                "Cherry Planks"
            ],
            "minecraft.cherry_pressure_plate": [
                null,
                "Cherry Pressure Plate"
            ],
            "minecraft.cherry_sapling": [
                null,
                "Cherry Sapling"
            ],
            "minecraft.cherry_sign": [
                null,
                "Cherry Sign"
            ],
            "minecraft.cherry_slab": [
                null,
                "Cherry Slab"
            ],
            "minecraft.cherry_stairs": [
                null,
                "Cherry Stairs"
            ],
            "minecraft.cherry_trapdoor": [
                null,
                "Cherry Trapdoor"
            ],
            "minecraft.cherry_wall_hanging_sign": [
                null,
                "Cherry Wall Hanging Sign"
            ],
            "minecraft.cherry_wall_sign": [
                null,
                "Cherry Wall Sign"
            ],
            "minecraft.cherry_wood": [
                null,
                "Cherry Wood"
            ],
            "minecraft.decorated_pot": [
                null,
                "Decorated Pot"
            ],
            "minecraft.pink_petals": [
                null,
                "Pink Petals"
            ],
            "minecraft.potted_cherry_sapling": [
                null,
                "Potted Cherry Sapling"
            ],
            "minecraft.potted_torchflower": [
                null,
                "Potted Torchflower"
            ],
            "minecraft.stripped_cherry_log": [
                null,
                "Stripped Cherry Log"
            ],
            "minecraft.stripped_cherry_wood": [
                null,
                "Stripped Cherry Wood"
            ],
            "minecraft.suspicious_sand": [
                null,
                "Suspicious Sand"
            ],
            "minecraft.torchflower": [
                null,
                "Torchflower"
            ],
            "minecraft.torchflower_crop": [
                null,
                "Torchflower Crop"
            ]
        },
        "commands": {
            "banip.info": [
                "This ban affects %s players: %s",
                "This ban affects %s player(s): %s"
            ],
            "banlist.list": [
                "There are %s bans:",
                "There is/are %s ban(s):"
            ],
            "clear.success.multiple": [
                "Removed %s items from %s players",
                "Removed %s item(s) from %s players"
            ],
            "clear.success.single": [
                "Removed %s items from player %s",
                "Removed %s item(s) from player %s"
            ],
            "clear.test.multiple": [
                "Found %s matching items on %s players",
                "Found %s matching item(s) on %s players"
            ],
            "clear.test.single": [
                "Found %s matching items on player %s",
                "Found %s matching item(s) on player %s"
            ],
            "damage.invulnerable": [
                null,
                "Target is invulnerable to the given damage type"
            ],
            "damage.success": [
                null,
                "Applied %s damage to %s"
            ],
            "data.modify.expected_value": [
                null,
                "Expected value, got: %s"
            ],
            "debug.function.success.multiple": [
                "Traced %s commands from %s functions to output file %s",
                "Traced %s command(s) from %s functions to output file %s"
            ],
            "debug.function.success.single": [
                "Traced %s commands from function '%s' to output file %s",
                "Traced %s command(s) from function '%s' to output file %s"
            ],
            "function.success.multiple": [
                "Executed %s commands from %s functions",
                "Executed %s command(s) from %s functions"
            ],
            "function.success.single": [
                "Executed %s commands from function '%s'",
                "Executed %s command(s) from function '%s'"
            ],
            "perf.stopped": [
                "Stopped performance profiling after %s seconds and %s ticks (%s ticks per second)",
                "Stopped performance profiling after %s second(s) and %s tick(s) (%s tick(s) per second)"
            ],
            "ride.already_riding": [
                null,
                "%s is already riding %s"
            ],
            "ride.dismount.success": [
                null,
                "%s stopped riding %s"
            ],
            "ride.mount.failure.cant_ride_players": [
                null,
                "Players can't be ridden"
            ],
            "ride.mount.failure.generic": [
                null,
                "%s couldn't start riding %s"
            ],
            "ride.mount.failure.loop": [
                null,
                "Can't mount entity on itself or any of its passengers"
            ],
            "ride.mount.failure.wrong_dimension": [
                null,
                "Can't mount entity in different dimension"
            ],
            "ride.mount.success": [
                null,
                "%s started riding %s"
            ],
            "ride.not_riding": [
                null,
                "%s is not riding any vehicle"
            ],
            "schedule.cleared.success": [
                "Removed %s schedules with id %s",
                "Removed %s schedule(s) with id %s"
            ],
            "schedule.created.function": [
                "Scheduled function '%s' in %s ticks at gametime %s",
                "Scheduled function '%s' in %s tick(s) at gametime %s"
            ],
            "setidletimeout.success": [
                "The player idle timeout is now %s minutes",
                "The player idle timeout is now %s minute(s)"
            ],
            "spreadplayers.failed.entities": [
                "Could not spread %s entities around %s, %s (too many entities for space - try using spread of at most %s)",
                "Could not spread %s entity/entities around %s, %s (too many entities for space - try using spread of at most %s)"
            ],
            "spreadplayers.failed.teams": [
                "Could not spread %s teams around %s, %s (too many entities for space - try using spread of at most %s)",
                "Could not spread %s team(s) around %s, %s (too many entities for space - try using spread of at most %s)"
            ],
            "spreadplayers.success.entities": [
                "Spread %s players around %s, %s with an average distance of %s blocks apart",
                "Spread %s player(s) around %s, %s with an average distance of %s blocks apart"
            ],
            "spreadplayers.success.teams": [
                "Spread %s teams around %s, %s with an average distance of %s blocks apart",
                "Spread %s team(s) around %s, %s with an average distance of %s blocks apart"
            ],
            "whitelist.list": [
                "There are %s whitelisted players: %s",
                "There is/are %s whitelisted player(s): %s"
            ],
            "worldborder.damage.buffer.success": [
                "Set the world border damage buffer to %s blocks",
                "Set the world border damage buffer to %s block(s)"
            ],
            "worldborder.get": [
                "The world border is currently %s blocks wide",
                "The world border is currently %s block(s) wide"
            ],
            "worldborder.set.immediate": [
                "Set the world border to %s blocks wide",
                "Set the world border to %s block(s) wide"
            ],
            "worldborder.set.shrink": [
                "Shrinking the world border to %s blocks wide over %s seconds",
                "Shrinking the world border to %s block(s) wide over %s second(s)"
            ],
            "worldborder.warning.distance.success": [
                "Set the world border warning distance to %s blocks",
                "Set the world border warning distance to %s block(s)"
            ],
            "worldborder.warning.time.success": [
                "Set the world border warning time to %s seconds",
                "Set the world border warning time to %s second(s)"
            ]
        },
        "container": {
            "upgrade.error_tooltip": [
                null,
                "Your item cannot be upgraded in this way"
            ],
            "upgrade.missing_template_tooltip": [
                null,
                "Put a Smithing Template here"
            ]
        },
        "controls": {
            "keybinds.duplicateKeybinds": [
                null,
                "This key is also used for:\n%s"
            ]
        },
        "createWorld": {
            "tab.game.title": [
                null,
                "Game"
            ],
            "tab.more.title": [
                null,
                "More"
            ],
            "tab.world.title": [
                null,
                "World"
            ]
        },
        "credits_and_attribution": [
            null,
            {
                "button.attribution": "Attribution",
                "button.credits": "Credits",
                "button.licenses": "Licenses",
                "screen.title": "Credits and Attribution"
            }
        ],
        "dataPack": {
            "bundle.name": [
                null,
                "Bundles"
            ],
            "update_1_20.name": [
                null,
                "Update 1.20"
            ]
        },
        "datapackFailure": {
            "safeMode.failed.description": [
                null,
                "This world contains invalid or corrupted save data."
            ],
            "safeMode.failed.title": [
                null,
                "Failed to load world in Safe Mode."
            ]
        },
        "death": {
            "attack.dragonBreath": [
                "%1$s was roasted in dragon breath",
                "%1$s was roasted in dragon's breath"
            ],
            "attack.dragonBreath.player": [
                "%1$s was roasted in dragon breath by %2$s",
                "%1$s was roasted in dragon's breath by %2$s"
            ],
            "attack.hotFloor.player": [
                "%1$s walked into danger zone due to %2$s",
                "%1$s walked into the danger zone due to %2$s"
            ],
            "attack.message_too_long": [
                "Actually, message was too long to deliver fully. Sorry! Here's stripped version: %s",
                "Actually, the message was too long to deliver fully. Sorry! Here's stripped version: %s"
            ]
        },
        "debug": {
            "dump_dynamic_textures": [
                null,
                "Saved dynamic textures to %s"
            ],
            "dump_dynamic_textures.help": [
                null,
                "F3 + S = Dump dynamic textures"
            ]
        },
        "effect": {
            "duration.infinite": [
                null,
                "\u221e"
            ]
        },
        "entity": {
            "minecraft.block_display": [
                null,
                "Block Display"
            ],
            "minecraft.falling_block_type": [
                null,
                "Falling %s"
            ],
            "minecraft.interaction": [
                null,
                "Interaction"
            ],
            "minecraft.item_display": [
                null,
                "Item Display"
            ],
            "minecraft.sniffer": [
                null,
                "Sniffer"
            ],
            "minecraft.text_display": [
                null,
                "Text Display"
            ]
        },
        "gamerule": {
            "commandModificationBlockLimit": [
                null,
                "Command Modification Block Limit"
            ],
            "commandModificationBlockLimit.description": [
                null,
                "Number of blocks that can be changed at once by one command, such as fill or clone."
            ],
            "doVinesSpread": [
                null,
                "Vines spread"
            ],
            "doVinesSpread.description": [
                null,
                "Controls whether or not the Vines block spreads randomly to adjacent blocks. Does not affect other type of vine blocks such as Weeping Vines, Twisting Vines, etc."
            ]
        },
        "gui": {
            "banned.reason.defamation_impersonation_false_information": [
                null,
                "Impersonation or sharing information to exploit or mislead others"
            ],
            "banned.reason.drugs": [
                null,
                "References to illegal drugs"
            ],
            "banned.reason.extreme_violence_or_gore": [
                null,
                "Depictions of real-life excessive violence or gore"
            ],
            "banned.reason.false_reporting": [
                null,
                "Excessive false or inaccurate reports"
            ],
            "banned.reason.fraud": [
                null,
                "Fraudulent acquisition or use of content"
            ],
            "banned.reason.generic_violation": [
                null,
                "Violating Community Standards"
            ],
            "banned.reason.harassment_or_bullying": [
                null,
                "Abusive language used in a directed, harmful manner"
            ],
            "banned.reason.hate_speech": [
                null,
                "Hate speech or discrimination"
            ],
            "banned.reason.hate_terrorism_notorious_figure": [
                null,
                "References to hate groups, terrorist organizations, or notorious figures"
            ],
            "banned.reason.imminent_harm_to_person_or_property": [
                null,
                "Intent to cause real-life harm to persons or property"
            ],
            "banned.reason.nudity_or_pornography": [
                null,
                "Displaying lewd or pornographic material"
            ],
            "banned.reason.sexually_inappropriate": [
                null,
                "Topics or content of a sexual nature"
            ],
            "banned.reason.spam_or_advertising": [
                null,
                "Spam or advertising"
            ],
            "continue": [
                null,
                "Continue"
            ],
            "narrate.tab": [
                null,
                "%s tab"
            ]
        },
        "item": {
            "minecraft.brush": [
                null,
                "Brush"
            ],
            "minecraft.cherry_boat": [
                null,
                "Cherry Boat"
            ],
            "minecraft.cherry_chest_boat": [
                null,
                "Cherry Boat with Chest"
            ],
            "minecraft.pottery_shard_archer": [
                null,
                "Archer Pottery Shard"
            ],
            "minecraft.pottery_shard_arms_up": [
                null,
                "Arms Up Pottery Shard"
            ],
            "minecraft.pottery_shard_prize": [
                null,
                "Prize Pottery Shard"
            ],
            "minecraft.pottery_shard_skull": [
                null,
                "Skull Pottery Shard"
            ],
            "minecraft.smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.smithing_template.applies_to": [
                null,
                "Applies to:"
            ],
            "minecraft.smithing_template.armor_trim.additions_slot_description": [
                null,
                "Put an ingot or crystal here"
            ],
            "minecraft.smithing_template.armor_trim.applies_to": [
                null,
                "Armor"
            ],
            "minecraft.smithing_template.armor_trim.base_slot_description": [
                null,
                "Put a piece of armor here"
            ],
            "minecraft.smithing_template.armor_trim.ingredients": [
                null,
                "Ingots & Crystals"
            ],
            "minecraft.smithing_template.ingredients": [
                null,
                "Ingredients:"
            ],
            "minecraft.smithing_template.netherite_upgrade.additions_slot_description": [
                null,
                "Put a Netherite Ingot here"
            ],
            "minecraft.smithing_template.netherite_upgrade.applies_to": [
                null,
                "Diamond Equipment"
            ],
            "minecraft.smithing_template.netherite_upgrade.base_slot_description": [
                null,
                "Put a piece of Diamond armor, weapon or tool here"
            ],
            "minecraft.smithing_template.netherite_upgrade.ingredients": [
                null,
                "Netherite Ingot"
            ],
            "minecraft.smithing_template.upgrade": [
                null,
                "Upgrade: "
            ],
            "minecraft.sniffer_spawn_egg": [
                null,
                "Sniffer Spawn Egg"
            ],
            "minecraft.torchflower_seeds": [
                null,
                "Torchflower Seeds"
            ]
        },
        "mco": {
            "activity.noactivity": [
                "No activity for the past %s days",
                "No activity for the past %s day(s)"
            ],
            "configure.world.invite.narration": [
                "You have %s new invites",
                "You have %s new invite(s)"
            ],
            "configure.world.subscription.recurring.info": [
                null,
                "Changes made to your Realms subscription such as stacking time or turning off recurring billing will not be reflected until your next bill date."
            ],
            "invites.pending": [
                "New invites!",
                "New invite(s)!"
            ],
            "notification.dismiss": [
                null,
                "Dismiss"
            ],
            "notification.visitUrl.buttonText.default": [
                null,
                "Open link"
            ],
            "notification.visitUrl.message.default": [
                null,
                "Please visit the link below"
            ]
        },
        "multiplayer": {
            "lan.server_found": [
                null,
                "New server found: %s"
            ],
            "player.list.narration": [
                null,
                "Online players: %s"
            ],
            "status.motd.narration": [
                null,
                "Message of the day: %s"
            ],
            "status.online": [
                null,
                "Online"
            ],
            "status.ping.narration": [
                null,
                "Ping %s milliseconds"
            ],
            "status.player_count.narration": [
                null,
                "%s out of %s players online"
            ],
            "status.version.narration": [
                null,
                "Server version: %s"
            ]
        },
        "narration": {
            "tab_navigation.usage": [
                null,
                "Press Ctrl and Tab to switch between tabs"
            ]
        },
        "narrator": {
            "position.tab": [
                null,
                "Selected tab %s out of %s"
            ],
            "ready_to_play": [
                null,
                "Ready to play"
            ]
        },
        "options": {
            "accessibility.high_contrast": [
                null,
                "High Contrast"
            ],
            "accessibility.high_contrast.error.tooltip": [
                null,
                "High Contrast resource pack is not available"
            ],
            "accessibility.high_contrast.tooltip": [
                null,
                "Enhances the contrast of UI elements"
            ],
            "credits_and_attribution": [
                null,
                "Credits & Attribution..."
            ],
            "damageTiltStrength": [
                null,
                "Damage Tilt"
            ],
            "damageTiltStrength.tooltip": [
                null,
                "The amount of camera shake caused by being hurt."
            ],
            "difficulty.easy.info": [
                null,
                "Hostile mobs spawn but deal less damage. Hunger bar depletes and drains health down to 5 hearts."
            ],
            "difficulty.hard.info": [
                null,
                "Hostile mobs spawn and deal more damage. Hunger bar depletes and drains all health."
            ],
            "difficulty.normal.info": [
                null,
                "Hostile mobs spawn and deal standard damage. Hunger bar depletes and drains health down to half a heart."
            ],
            "difficulty.peaceful.info": [
                null,
                "No hostile mobs and only some neutral mobs spawn. Hunger bar doesn't deplete and health replenishes over time."
            ],
            "glintSpeed": [
                null,
                "Glint Speed"
            ],
            "glintSpeed.tooltip": [
                null,
                "Controls how fast the visual glint shimmers across enchanted items."
            ],
            "glintStrength": [
                null,
                "Glint Strength"
            ],
            "glintStrength.tooltip": [
                null,
                "Controls how transparent the visual glint is on enchanted items."
            ],
            "multiplier": [
                null,
                "%sx"
            ],
            "notifications.display_time": [
                null,
                "Notification Time"
            ],
            "notifications.display_time.tooltip": [
                null,
                "Affects the length of time that all notifications stay visible on the screen."
            ],
            "realmsNotifications": [
                "Realms Notifications",
                "Realms News & Invites"
            ],
            "telemetry": [
                "Telemetry Data",
                "Telemetry Data..."
            ]
        },
        "painting": [
            null,
            {
                "dimensions": "%sx%s",
                "minecraft.alban.author": "Kristoffer Zetterstrand",
                "minecraft.alban.title": "Albanian",
                "minecraft.aztec.author": "Kristoffer Zetterstrand",
                "minecraft.aztec.title": "de_aztec",
                "minecraft.aztec2.author": "Kristoffer Zetterstrand",
                "minecraft.aztec2.title": "de_aztec",
                "minecraft.bomb.author": "Kristoffer Zetterstrand",
                "minecraft.bomb.title": "Target Successfully Bombed",
                "minecraft.burning_skull.author": "Kristoffer Zetterstrand",
                "minecraft.burning_skull.title": "Skull On Fire",
                "minecraft.bust.author": "Kristoffer Zetterstrand",
                "minecraft.bust.title": "Bust",
                "minecraft.courbet.author": "Kristoffer Zetterstrand",
                "minecraft.courbet.title": "Bonjour Monsieur Courbet",
                "minecraft.creebet.author": "Kristoffer Zetterstrand",
                "minecraft.creebet.title": "Creebet",
                "minecraft.donkey_kong.author": "Kristoffer Zetterstrand",
                "minecraft.donkey_kong.title": "Kong",
                "minecraft.earth.author": "Mojang",
                "minecraft.earth.title": "Earth",
                "minecraft.fighters.author": "Kristoffer Zetterstrand",
                "minecraft.fighters.title": "Fighters",
                "minecraft.fire.author": "Mojang",
                "minecraft.fire.title": "Fire",
                "minecraft.graham.author": "Kristoffer Zetterstrand",
                "minecraft.graham.title": "Graham",
                "minecraft.kebab.author": "Kristoffer Zetterstrand",
                "minecraft.kebab.title": "Kebab med tre pepperoni",
                "minecraft.match.author": "Kristoffer Zetterstrand",
                "minecraft.match.title": "Match",
                "minecraft.pigscene.author": "Kristoffer Zetterstrand",
                "minecraft.pigscene.title": "Pigscene",
                "minecraft.plant.author": "Kristoffer Zetterstrand",
                "minecraft.plant.title": "Paradistr\u00e4d",
                "minecraft.pointer.author": "Kristoffer Zetterstrand",
                "minecraft.pointer.title": "Pointer",
                "minecraft.pool.author": "Kristoffer Zetterstrand",
                "minecraft.pool.title": "The Pool",
                "minecraft.sea.author": "Kristoffer Zetterstrand",
                "minecraft.sea.title": "Seaside",
                "minecraft.skeleton.author": "Kristoffer Zetterstrand",
                "minecraft.skeleton.title": "Mortal Coil",
                "minecraft.skull_and_roses.author": "Kristoffer Zetterstrand",
                "minecraft.skull_and_roses.title": "Skull and Roses",
                "minecraft.stage.author": "Kristoffer Zetterstrand",
                "minecraft.stage.title": "The Stage Is Set",
                "minecraft.sunset.author": "Kristoffer Zetterstrand",
                "minecraft.sunset.title": "sunset_dense",
                "minecraft.void.author": "Kristoffer Zetterstrand",
                "minecraft.void.title": "The void",
                "minecraft.wanderer.author": "Kristoffer Zetterstrand",
                "minecraft.wanderer.title": "Wanderer",
                "minecraft.wasteland.author": "Kristoffer Zetterstrand",
                "minecraft.wasteland.title": "Wasteland",
                "minecraft.water.author": "Mojang",
                "minecraft.water.title": "Water",
                "minecraft.wind.author": "Mojang",
                "minecraft.wind.title": "Wind",
                "minecraft.wither.author": "Mojang",
                "minecraft.wither.title": "Wither",
                "random": "Random variant"
            }
        ],
        "resourcePack": {
            "high_contrast.name": [
                null,
                "High Contrast"
            ]
        },
        "selectWorld": {
            "experimental.message": [
                "Be careful!\nSome of the selected packs require features that are still under development. Your world might crash, break or not work with future updates.",
                "Be careful!\nThis configuration requires features that are still under development. Your world might crash, break, or not work with future updates."
            ],
            "experiments": [
                null,
                "Experiments"
            ],
            "experiments.info": [
                null,
                "Experiments are potential new features. Be careful as things might break. Experiments can't be turned off after world creation."
            ],
            "gameMode.adventure.info": [
                null,
                "Same as Survival Mode, but blocks can't be added or removed."
            ],
            "gameMode.creative.info": [
                null,
                "Create, build, and explore without limits. You can fly, have endless materials, and can't be hurt by monsters."
            ],
            "gameMode.hardcore.info": [
                null,
                "Survival Mode locked to 'Hard' difficulty. You can't respawn if you die."
            ],
            "gameMode.spectator.info": [
                null,
                "You can look but don't touch."
            ],
            "gameMode.survival.info": [
                null,
                "Explore a mysterious world where you build, collect, craft, and fight monsters."
            ],
            "mapFeatures.info": [
                "Villages, dungeons etc.",
                "Villages, Shipwrecks, etc."
            ],
            "targetFolder": [
                null,
                "Save folder: %s"
            ]
        },
        "subtitles": {
            "block.decorated_pot.shatter": [
                null,
                "Pot shatters"
            ],
            "entity.sniffer.death": [
                null,
                "Sniffer dies"
            ],
            "entity.sniffer.digging": [
                null,
                "Sniffer digs"
            ],
            "entity.sniffer.digging_stop": [
                null,
                "Sniffer stands up"
            ],
            "entity.sniffer.drop_seed": [
                null,
                "Sniffer drops seed"
            ],
            "entity.sniffer.eat": [
                null,
                "Sniffer eats"
            ],
            "entity.sniffer.happy": [
                null,
                "Sniffer delights"
            ],
            "entity.sniffer.hurt": [
                null,
                "Sniffer hurts"
            ],
            "entity.sniffer.idle": [
                null,
                "Sniffer grunts"
            ],
            "entity.sniffer.scenting": [
                null,
                "Sniffer scents"
            ],
            "entity.sniffer.searching": [
                null,
                "Sniffer searches"
            ],
            "entity.sniffer.sniffing": [
                null,
                "Sniffer sniffs"
            ],
            "entity.sniffer.step": [
                null,
                "Sniffer steps"
            ],
            "item.brush.brush_sand_completed": [
                null,
                "Brushing sand completed"
            ],
            "item.brush.brushing": [
                null,
                "Brushing"
            ]
        },
        "trim_material": [
            null,
            {
                "minecraft.amethyst": "Amethyst Material",
                "minecraft.copper": "Copper Material",
                "minecraft.diamond": "Diamond Material",
                "minecraft.emerald": "Emerald Material",
                "minecraft.gold": "Gold Material",
                "minecraft.iron": "Iron Material",
                "minecraft.lapis": "Lapis Material",
                "minecraft.netherite": "Netherite Material",
                "minecraft.quartz": "Quartz Material",
                "minecraft.redstone": "Redstone Material"
            }
        ],
        "trim_pattern": [
            null,
            {
                "minecraft.coast": "Coast Armor Trim",
                "minecraft.dune": "Dune Armor Trim",
                "minecraft.eye": "Eye Armor Trim",
                "minecraft.rib": "Rib Armor Trim",
                "minecraft.sentry": "Sentry Armor Trim",
                "minecraft.snout": "Snout Armor Trim",
                "minecraft.spire": "Spire Armor Trim",
                "minecraft.tide": "Tide Armor Trim",
                "minecraft.vex": "Vex Armor Trim",
                "minecraft.ward": "Ward Armor Trim",
                "minecraft.wild": "Wild Armor Trim"
            }
        ],
        "upgrade": [
            null,
            {
                "minecraft.netherite_upgrade": "Netherite Upgrade"
            }
        ]
    },
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_00": [
                {
                    "class": "ul.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "iw.h.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_01": [
                {
                    "class": "um.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "ja.h.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_02": [
                {
                    "class": "un.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_03": [
                {
                    "class": "uo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_04": [
                {
                    "class": "up.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<alv, int>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iw.x.getId(itv.getKey().a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getKey().a().a().getId(itv.getKey().b())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_05": [
                {
                    "class": "uq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<amy, int>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "ja.x.getId(itv.getKey().a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getKey().a().a().getId(itv.getKey().b())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_06": [
                {
                    "class": "ur.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_07": [
                {
                    "class": "us.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "iw.l.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_08": [
                {
                    "class": "ut.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "iw.f.getId(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "ja.l.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_09": [
                {
                    "class": "uu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "cmt.o.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "ja.f.getId(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0A": [
                {
                    "class": "uv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "e",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "uv$c",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "cpi.o.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0B": [
                {
                    "class": "uw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "e",
                            "method": "a(Lss;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vp$c",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0C": [
                {
                    "class": "ux.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "uy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "su.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vs$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a.a()",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "itv.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0E": [
                {
                    "class": "uz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "uz$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lsd;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "uz$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0F": [
                {
                    "class": "va.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "tl.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "vb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cdt",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vv$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lss;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "vv$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "vc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "vd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cfv",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "ve.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "iw.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "vf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "vg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "ja.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e.isPresent()",
                            "instructions": [
                                {
                                    "field": "e.get().a()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().c()",
                                    "operation": "write",
                                    "type": "double"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "vn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "vo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apj.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apj.a(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apj.a(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gt",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "vp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vr$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "iw.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "iw.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "io",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ace",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hq.a.encode(f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wp$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "ja.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dur",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ciu",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "ja.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lss;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "is",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "wa$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "wa$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmf.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "adc",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hu.a.encode(wv.r, f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "wa$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dxr",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "clg",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wy$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.r.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wy$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wy$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ja.r.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "td$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == sv$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tu$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == tm$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wn$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((wn$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lsd;Lwn$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "wn$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "wp$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "caq.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((als$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == wq$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "acf",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xl$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((xl$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lss;Lxl$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "xl$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "wt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "bgl.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "ccp.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((amv$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "add",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == xo$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "add",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(long)((cmt.i(d[var2]) << 0xc) | c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ja.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmf.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cpi.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ya.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((abq$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "abp.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lsd;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "abo",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bdw)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cdt)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aco$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "acn.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lss;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "acm",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bfm)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cfv)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "xt.b(h)",
                            "instructions": [
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "xt.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != acv$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "yr.b(h)",
                            "instructions": [
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((yr$b)k.orElseThrow(yr::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "yr.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ys.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != adt$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "ya.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iw.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iw.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "ja.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "ja.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "za.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acf, ac$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ah>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acf, ae>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "yj$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iw.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bfh",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_67": [
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ze.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_68": [
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bdk$a.a.encode(i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_69": [
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cgo",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iw.t.b(itv.X_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.X_()",
                                    "method": "a(Lsd;Lcgo;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cgq",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<add, ae$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "add",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<add, ag>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ak>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6A": [
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ace, amu$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<acf, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "zh$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "ja.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bhc",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6B": [
                null,
                {
                    "class": "zi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "add",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6C": [
                null,
                {
                    "class": "zj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ja.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bey$a.a.encode(rp.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6D": [
                null,
                {
                    "class": "zk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ciy",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "ja.t.b(itv.ai_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.e()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.ai_()",
                                    "method": "a(Lss;Lciy;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cja",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6E": [
                null,
                {
                    "class": "zl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<adc, any$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<add, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_06": [
                {
                    "class": "yz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a.a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.b.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "a.b.c.getEncoded().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.c.getEncoded()",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "a.b.d.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_07": [
                {
                    "class": "za.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_08": [
                {
                    "class": "zb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_09": [
                {
                    "class": "zc.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0A": [
                {
                    "class": "zd.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cdt>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaa.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0B": [
                {
                    "class": "ze.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aab.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cfv>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0C": [
                {
                    "class": "zf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aac.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0D": [
                {
                    "class": "zg.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aad.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0E": [
                {
                    "class": "zh.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aae.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0F": [
                {
                    "class": "zi.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "zi$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_10": [
                {
                    "class": "zj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aag.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lss;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "aag$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_11": [
                {
                    "class": "zk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aah.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_12": [
                {
                    "class": "zl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aai.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_13": [
                {
                    "class": "zm$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_14": [
                {
                    "class": "zm$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aak$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_15": [
                {
                    "class": "zm$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aak$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_16": [
                {
                    "class": "zm$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aak$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_17": [
                {
                    "class": "zn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aak$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_18": [
                {
                    "class": "zo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aal.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_19": [
                {
                    "class": "zp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aam.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1A": [
                {
                    "class": "zq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aan.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1B": [
                {
                    "class": "zr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aao.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1C": [
                {
                    "class": "zs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aap.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1D": [
                {
                    "class": "zt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1E": [
                {
                    "class": "zu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aar.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1F": [
                {
                    "class": "zv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aas.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_20": [
                {
                    "class": "yy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a.a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.b.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "a.b.c.getEncoded().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.c.getEncoded()",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "a.b.d.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aat.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "STATUS_CLIENTBOUND_00": [
                {
                    "class": "abh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "abh.a.toJson(b)",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "STATUS"
                },
                {
                    "class": "acf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "acg.a.encode(a)",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "STATUS"
                }
            ]
        }
    },
    "recipes": {},
    "sounds": {
        "block.cherry_leaves.break": [
            null,
            {
                "field": "dJ",
                "id": 243,
                "name": "block.cherry_leaves.break",
                "sounds": [
                    {
                        "hash": "f1143e5adcd07dc885ed44d949886ce6fd870398",
                        "name": "block/cherry_leaves/break1"
                    },
                    {
                        "hash": "f69923d3997e201e375daa99449249eab23fa123",
                        "name": "block/cherry_leaves/break2"
                    },
                    {
                        "hash": "241e9041f3af4d599a093d66599823f27a7c9c7c",
                        "name": "block/cherry_leaves/break3"
                    },
                    {
                        "hash": "157693bffdf434eca79edc0688e8bfbc3e2c85f1",
                        "name": "block/cherry_leaves/break4"
                    },
                    {
                        "hash": "cdf49946c33481ce4cc5210c6e22d26ed2a6cbc6",
                        "name": "block/cherry_leaves/break5"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.cherry_leaves.fall": [
            null,
            {
                "field": "dK",
                "id": 244,
                "name": "block.cherry_leaves.fall",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1"
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2"
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3"
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4"
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5"
                    }
                ]
            }
        ],
        "block.cherry_leaves.hit": [
            null,
            {
                "field": "dL",
                "id": 245,
                "name": "block.cherry_leaves.hit",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1",
                        "volume": 0.8
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3",
                        "volume": 0.8
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4",
                        "volume": 0.8
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.cherry_leaves.place": [
            null,
            {
                "field": "dM",
                "id": 246,
                "name": "block.cherry_leaves.place",
                "sounds": [
                    {
                        "hash": "f1143e5adcd07dc885ed44d949886ce6fd870398",
                        "name": "block/cherry_leaves/break1"
                    },
                    {
                        "hash": "f69923d3997e201e375daa99449249eab23fa123",
                        "name": "block/cherry_leaves/break2"
                    },
                    {
                        "hash": "241e9041f3af4d599a093d66599823f27a7c9c7c",
                        "name": "block/cherry_leaves/break3"
                    },
                    {
                        "hash": "157693bffdf434eca79edc0688e8bfbc3e2c85f1",
                        "name": "block/cherry_leaves/break4"
                    },
                    {
                        "hash": "cdf49946c33481ce4cc5210c6e22d26ed2a6cbc6",
                        "name": "block/cherry_leaves/break5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.cherry_leaves.step": [
            null,
            {
                "field": "dN",
                "id": 247,
                "name": "block.cherry_leaves.step",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1"
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2"
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3"
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4"
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.cherry_sapling.break": [
            null,
            {
                "field": "dE",
                "id": 238,
                "name": "block.cherry_sapling.break",
                "sounds": [
                    {
                        "hash": "01c5ba2d1645698cc2f6e462982bd4513a3e0d93",
                        "name": "block/bamboo/sapling_place1"
                    },
                    {
                        "hash": "1d407e006a12bb9e2085bd131f5858faca224c04",
                        "name": "block/bamboo/sapling_place2"
                    },
                    {
                        "hash": "e307581ed3bf3a02b5cc4ce695d63cbdddc7d771",
                        "name": "block/bamboo/sapling_place3"
                    },
                    {
                        "hash": "a2c9a38685d6935d092ed3e3a028c36f188a419f",
                        "name": "block/bamboo/sapling_place4"
                    },
                    {
                        "hash": "711c7bffbff757323d96b35444b64e39706a66ed",
                        "name": "block/bamboo/sapling_place5"
                    },
                    {
                        "hash": "7397aec16ab142151a3dc45f544907f2b1be4459",
                        "name": "block/bamboo/sapling_place6"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.cherry_sapling.fall": [
            null,
            {
                "field": "dF",
                "id": 239,
                "name": "block.cherry_sapling.fall",
                "sounds": [
                    {
                        "hash": "79f72a74753d81086324b8a826cab0a612bc57a4",
                        "name": "block/bamboo/sapling_hit1"
                    },
                    {
                        "hash": "50c9b5b23ecf10df2f0301dc78a2dfa30c084fe7",
                        "name": "block/bamboo/sapling_hit2"
                    },
                    {
                        "hash": "b72c88ed02173cdef682d3d658544333ef608bd8",
                        "name": "block/bamboo/sapling_hit3"
                    },
                    {
                        "hash": "4f1d7eed78371293d49c31c7a39bfdd4b4bd1e51",
                        "name": "block/bamboo/sapling_hit4"
                    },
                    {
                        "hash": "df131c5832b20f3967463a0bab0e4c8797c25eee",
                        "name": "block/bamboo/sapling_hit5"
                    }
                ]
            }
        ],
        "block.cherry_sapling.hit": [
            null,
            {
                "field": "dG",
                "id": 240,
                "name": "block.cherry_sapling.hit",
                "sounds": [
                    {
                        "hash": "79f72a74753d81086324b8a826cab0a612bc57a4",
                        "name": "block/bamboo/sapling_hit1"
                    },
                    {
                        "hash": "50c9b5b23ecf10df2f0301dc78a2dfa30c084fe7",
                        "name": "block/bamboo/sapling_hit2"
                    },
                    {
                        "hash": "b72c88ed02173cdef682d3d658544333ef608bd8",
                        "name": "block/bamboo/sapling_hit3"
                    },
                    {
                        "hash": "4f1d7eed78371293d49c31c7a39bfdd4b4bd1e51",
                        "name": "block/bamboo/sapling_hit4"
                    },
                    {
                        "hash": "df131c5832b20f3967463a0bab0e4c8797c25eee",
                        "name": "block/bamboo/sapling_hit5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.cherry_sapling.place": [
            null,
            {
                "field": "dH",
                "id": 241,
                "name": "block.cherry_sapling.place",
                "sounds": [
                    {
                        "hash": "01c5ba2d1645698cc2f6e462982bd4513a3e0d93",
                        "name": "block/bamboo/sapling_place1"
                    },
                    {
                        "hash": "1d407e006a12bb9e2085bd131f5858faca224c04",
                        "name": "block/bamboo/sapling_place2"
                    },
                    {
                        "hash": "e307581ed3bf3a02b5cc4ce695d63cbdddc7d771",
                        "name": "block/bamboo/sapling_place3"
                    },
                    {
                        "hash": "a2c9a38685d6935d092ed3e3a028c36f188a419f",
                        "name": "block/bamboo/sapling_place4"
                    },
                    {
                        "hash": "711c7bffbff757323d96b35444b64e39706a66ed",
                        "name": "block/bamboo/sapling_place5"
                    },
                    {
                        "hash": "7397aec16ab142151a3dc45f544907f2b1be4459",
                        "name": "block/bamboo/sapling_place6"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.cherry_sapling.step": [
            null,
            {
                "field": "dI",
                "id": 242,
                "name": "block.cherry_sapling.step",
                "sounds": [
                    {
                        "hash": "79f72a74753d81086324b8a826cab0a612bc57a4",
                        "name": "block/bamboo/sapling_hit1"
                    },
                    {
                        "hash": "50c9b5b23ecf10df2f0301dc78a2dfa30c084fe7",
                        "name": "block/bamboo/sapling_hit2"
                    },
                    {
                        "hash": "b72c88ed02173cdef682d3d658544333ef608bd8",
                        "name": "block/bamboo/sapling_hit3"
                    },
                    {
                        "hash": "4f1d7eed78371293d49c31c7a39bfdd4b4bd1e51",
                        "name": "block/bamboo/sapling_hit4"
                    },
                    {
                        "hash": "df131c5832b20f3967463a0bab0e4c8797c25eee",
                        "name": "block/bamboo/sapling_hit5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.cherry_wood.break": [
            null,
            {
                "field": "dz",
                "id": 233,
                "name": "block.cherry_wood.break",
                "sounds": [
                    {
                        "hash": "c1922dedcd1a38ae0b335d6685bf4cf3df1ec5d9",
                        "name": "block/cherry_wood/break1"
                    },
                    {
                        "hash": "46e3718a4a4bba759f372b81bdbfcb407354c1f4",
                        "name": "block/cherry_wood/break2"
                    },
                    {
                        "hash": "3b4d57ebb6fdeba68c0928049ffa5a2a6cf03a30",
                        "name": "block/cherry_wood/break3"
                    },
                    {
                        "hash": "83a533615eb1fe15085cb0b4b9d835ea55406e35",
                        "name": "block/cherry_wood/break4"
                    },
                    {
                        "hash": "8ac864916a37c5bf4e5c927a1182f1576ea7e94a",
                        "name": "block/cherry_wood/break5"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.cherry_wood.fall": [
            null,
            {
                "field": "dA",
                "id": 234,
                "name": "block.cherry_wood.fall",
                "sounds": [
                    {
                        "hash": "f8807814d08f238929538d6ca640c75bbd387c65",
                        "name": "block/cherry_wood/step1"
                    },
                    {
                        "hash": "abe2633a696ef636d7fa0231487ea4e750830a0d",
                        "name": "block/cherry_wood/step2"
                    },
                    {
                        "hash": "07d8464e662f96bb3b899dd50274774fd5943e5a",
                        "name": "block/cherry_wood/step3"
                    },
                    {
                        "hash": "8a240f9292a601d5e039bd602783f1f924287375",
                        "name": "block/cherry_wood/step4"
                    },
                    {
                        "hash": "aca745c870a8e3eb0c36fb0b63515a625752cc9c",
                        "name": "block/cherry_wood/step5"
                    },
                    {
                        "hash": "b56f19aae155a350799282fd0f0b9b813d7f945c",
                        "name": "block/cherry_wood/step6"
                    }
                ]
            }
        ],
        "block.cherry_wood.hit": [
            null,
            {
                "field": "dB",
                "id": 235,
                "name": "block.cherry_wood.hit",
                "sounds": [
                    {
                        "hash": "f8807814d08f238929538d6ca640c75bbd387c65",
                        "name": "block/cherry_wood/step1"
                    },
                    {
                        "hash": "abe2633a696ef636d7fa0231487ea4e750830a0d",
                        "name": "block/cherry_wood/step2"
                    },
                    {
                        "hash": "07d8464e662f96bb3b899dd50274774fd5943e5a",
                        "name": "block/cherry_wood/step3"
                    },
                    {
                        "hash": "8a240f9292a601d5e039bd602783f1f924287375",
                        "name": "block/cherry_wood/step4"
                    },
                    {
                        "hash": "aca745c870a8e3eb0c36fb0b63515a625752cc9c",
                        "name": "block/cherry_wood/step5"
                    },
                    {
                        "hash": "b56f19aae155a350799282fd0f0b9b813d7f945c",
                        "name": "block/cherry_wood/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.cherry_wood.place": [
            null,
            {
                "field": "dC",
                "id": 236,
                "name": "block.cherry_wood.place",
                "sounds": [
                    {
                        "hash": "c1922dedcd1a38ae0b335d6685bf4cf3df1ec5d9",
                        "name": "block/cherry_wood/break1"
                    },
                    {
                        "hash": "46e3718a4a4bba759f372b81bdbfcb407354c1f4",
                        "name": "block/cherry_wood/break2"
                    },
                    {
                        "hash": "3b4d57ebb6fdeba68c0928049ffa5a2a6cf03a30",
                        "name": "block/cherry_wood/break3"
                    },
                    {
                        "hash": "83a533615eb1fe15085cb0b4b9d835ea55406e35",
                        "name": "block/cherry_wood/break4"
                    },
                    {
                        "hash": "8ac864916a37c5bf4e5c927a1182f1576ea7e94a",
                        "name": "block/cherry_wood/break5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.cherry_wood.step": [
            null,
            {
                "field": "dD",
                "id": 237,
                "name": "block.cherry_wood.step",
                "sounds": [
                    {
                        "hash": "f8807814d08f238929538d6ca640c75bbd387c65",
                        "name": "block/cherry_wood/step1"
                    },
                    {
                        "hash": "abe2633a696ef636d7fa0231487ea4e750830a0d",
                        "name": "block/cherry_wood/step2"
                    },
                    {
                        "hash": "07d8464e662f96bb3b899dd50274774fd5943e5a",
                        "name": "block/cherry_wood/step3"
                    },
                    {
                        "hash": "8a240f9292a601d5e039bd602783f1f924287375",
                        "name": "block/cherry_wood/step4"
                    },
                    {
                        "hash": "aca745c870a8e3eb0c36fb0b63515a625752cc9c",
                        "name": "block/cherry_wood/step5"
                    },
                    {
                        "hash": "b56f19aae155a350799282fd0f0b9b813d7f945c",
                        "name": "block/cherry_wood/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.cherry_wood_button.click_off": [
            null,
            {
                "field": "dX",
                "id": 257,
                "name": "block.cherry_wood_button.click_off",
                "sounds": [
                    {
                        "hash": "4dde7bcaca14f997cd72c638c651ca293bf4411a",
                        "name": "block/cherrywood_button/cherrywood_click",
                        "pitch": 0.5,
                        "volume": 0.4
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.cherry_wood_button.click_on": [
            null,
            {
                "field": "dY",
                "id": 258,
                "name": "block.cherry_wood_button.click_on",
                "sounds": [
                    {
                        "hash": "4dde7bcaca14f997cd72c638c651ca293bf4411a",
                        "name": "block/cherrywood_button/cherrywood_click",
                        "pitch": 0.6,
                        "volume": 0.4
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.cherry_wood_door.close": [
            null,
            {
                "field": "dT",
                "id": 253,
                "name": "block.cherry_wood_door.close",
                "sounds": [
                    {
                        "hash": "d4d026beefbd60dde82c3ac8aa3230abe1ace1fc",
                        "name": "block/cherrywood_door/toggle1"
                    },
                    {
                        "hash": "91e90c476138ab63fd578477dd95f76ac14934a2",
                        "name": "block/cherrywood_door/toggle2"
                    },
                    {
                        "hash": "cb4173aa39e5c90134e569f456831a33e724cb09",
                        "name": "block/cherrywood_door/toggle3"
                    },
                    {
                        "hash": "75c7b109405d04ff20e1f5750969b3899a590358",
                        "name": "block/cherrywood_door/toggle4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.cherry_wood_door.open": [
            null,
            {
                "field": "dU",
                "id": 254,
                "name": "block.cherry_wood_door.open",
                "sounds": [
                    {
                        "hash": "d4d026beefbd60dde82c3ac8aa3230abe1ace1fc",
                        "name": "block/cherrywood_door/toggle1"
                    },
                    {
                        "hash": "91e90c476138ab63fd578477dd95f76ac14934a2",
                        "name": "block/cherrywood_door/toggle2"
                    },
                    {
                        "hash": "cb4173aa39e5c90134e569f456831a33e724cb09",
                        "name": "block/cherrywood_door/toggle3"
                    },
                    {
                        "hash": "75c7b109405d04ff20e1f5750969b3899a590358",
                        "name": "block/cherrywood_door/toggle4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.cherry_wood_fence_gate.close": [
            null,
            {
                "field": "eb",
                "id": 261,
                "name": "block.cherry_wood_fence_gate.close",
                "sounds": [
                    {
                        "hash": "090697aa306d9bcba3793d3c61b66d417df7792a",
                        "name": "block/cherrywood_fence_gate/toggle1"
                    },
                    {
                        "hash": "67ca27f41a2e0d9b43c711be34e62ec25ff1fb57",
                        "name": "block/cherrywood_fence_gate/toggle2"
                    },
                    {
                        "hash": "1cead9b23c178f00cefdfa72028a1a8e11b0c226",
                        "name": "block/cherrywood_fence_gate/toggle3"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.cherry_wood_fence_gate.open": [
            null,
            {
                "field": "ec",
                "id": 262,
                "name": "block.cherry_wood_fence_gate.open",
                "sounds": [
                    {
                        "hash": "090697aa306d9bcba3793d3c61b66d417df7792a",
                        "name": "block/cherrywood_fence_gate/toggle1"
                    },
                    {
                        "hash": "67ca27f41a2e0d9b43c711be34e62ec25ff1fb57",
                        "name": "block/cherrywood_fence_gate/toggle2"
                    },
                    {
                        "hash": "1cead9b23c178f00cefdfa72028a1a8e11b0c226",
                        "name": "block/cherrywood_fence_gate/toggle3"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.cherry_wood_hanging_sign.break": [
            null,
            {
                "field": "dP",
                "id": 249,
                "name": "block.cherry_wood_hanging_sign.break",
                "sounds": [
                    {
                        "hash": "707536e8e6beb5309db5cebda68963e9b36cdd24",
                        "name": "block/cherry_wood_hanging_sign/break1"
                    },
                    {
                        "hash": "50dc781ac900945b3e03fd265a835c1bd03ce04d",
                        "name": "block/cherry_wood_hanging_sign/break2"
                    },
                    {
                        "hash": "01b151d31f674044b1c5cd455d00eb4e481ac686",
                        "name": "block/cherry_wood_hanging_sign/break3"
                    },
                    {
                        "hash": "a8be4f7da981f6b2dd4f8274426db3ff95e48375",
                        "name": "block/cherry_wood_hanging_sign/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.cherry_wood_hanging_sign.fall": [
            null,
            {
                "field": "dQ",
                "id": 250,
                "name": "block.cherry_wood_hanging_sign.fall",
                "sounds": [
                    {
                        "hash": "5a1746448c594e0a59941912bce82bb8fa0406ea",
                        "name": "block/cherry_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "da49132061efbdacd64f9b9ae4800182a467b603",
                        "name": "block/cherry_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "10c8d501eab26890772d6b8b89f1d925d03f3cd6",
                        "name": "block/cherry_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "e3c3d092c5ef080c6daf139118c9da725d2ee59c",
                        "name": "block/cherry_wood_hanging_sign/step4"
                    }
                ]
            }
        ],
        "block.cherry_wood_hanging_sign.hit": [
            null,
            {
                "field": "dR",
                "id": 251,
                "name": "block.cherry_wood_hanging_sign.hit",
                "sounds": [
                    {
                        "hash": "5a1746448c594e0a59941912bce82bb8fa0406ea",
                        "name": "block/cherry_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "da49132061efbdacd64f9b9ae4800182a467b603",
                        "name": "block/cherry_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "10c8d501eab26890772d6b8b89f1d925d03f3cd6",
                        "name": "block/cherry_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "e3c3d092c5ef080c6daf139118c9da725d2ee59c",
                        "name": "block/cherry_wood_hanging_sign/step4"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.cherry_wood_hanging_sign.place": [
            null,
            {
                "field": "dS",
                "id": 252,
                "name": "block.cherry_wood_hanging_sign.place",
                "sounds": [
                    {
                        "hash": "707536e8e6beb5309db5cebda68963e9b36cdd24",
                        "name": "block/cherry_wood_hanging_sign/break1"
                    },
                    {
                        "hash": "50dc781ac900945b3e03fd265a835c1bd03ce04d",
                        "name": "block/cherry_wood_hanging_sign/break2"
                    },
                    {
                        "hash": "01b151d31f674044b1c5cd455d00eb4e481ac686",
                        "name": "block/cherry_wood_hanging_sign/break3"
                    },
                    {
                        "hash": "a8be4f7da981f6b2dd4f8274426db3ff95e48375",
                        "name": "block/cherry_wood_hanging_sign/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.cherry_wood_hanging_sign.step": [
            null,
            {
                "field": "dO",
                "id": 248,
                "name": "block.cherry_wood_hanging_sign.step",
                "sounds": [
                    {
                        "hash": "5a1746448c594e0a59941912bce82bb8fa0406ea",
                        "name": "block/cherry_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "da49132061efbdacd64f9b9ae4800182a467b603",
                        "name": "block/cherry_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "10c8d501eab26890772d6b8b89f1d925d03f3cd6",
                        "name": "block/cherry_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "e3c3d092c5ef080c6daf139118c9da725d2ee59c",
                        "name": "block/cherry_wood_hanging_sign/step4"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.cherry_wood_pressure_plate.click_off": [
            null,
            {
                "field": "dZ",
                "id": 259,
                "name": "block.cherry_wood_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.7,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.cherry_wood_pressure_plate.click_on": [
            null,
            {
                "field": "ea",
                "id": 260,
                "name": "block.cherry_wood_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.8,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.cherry_wood_trapdoor.close": [
            null,
            {
                "field": "dV",
                "id": 255,
                "name": "block.cherry_wood_trapdoor.close",
                "sounds": [
                    {
                        "hash": "0013485e9449e914908ca89a8dc1369eff037a26",
                        "name": "block/cherrywood_trapdoor/toggle1"
                    },
                    {
                        "hash": "24de6468a71d73e4d139d71c8e2704b0db7e81f8",
                        "name": "block/cherrywood_trapdoor/toggle2"
                    },
                    {
                        "hash": "2153a99ee979bea5121c8465cbaf905e1d1cb0ac",
                        "name": "block/cherrywood_trapdoor/toggle3"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.cherry_wood_trapdoor.open": [
            null,
            {
                "field": "dW",
                "id": 256,
                "name": "block.cherry_wood_trapdoor.open",
                "sounds": [
                    {
                        "hash": "0013485e9449e914908ca89a8dc1369eff037a26",
                        "name": "block/cherrywood_trapdoor/toggle1"
                    },
                    {
                        "hash": "24de6468a71d73e4d139d71c8e2704b0db7e81f8",
                        "name": "block/cherrywood_trapdoor/toggle2"
                    },
                    {
                        "hash": "2153a99ee979bea5121c8465cbaf905e1d1cb0ac",
                        "name": "block/cherrywood_trapdoor/toggle3"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.decorated_pot.break": [
            null,
            {
                "field": "fn",
                "id": 325,
                "name": "block.decorated_pot.break",
                "sounds": [
                    {
                        "hash": "5c84f54276722bea66088e2774e0fcd00929ae58",
                        "name": "block/decorated_pot/break1"
                    },
                    {
                        "hash": "98fe2b2b0c6bcc3f921c1ae8ec0686b719569e70",
                        "name": "block/decorated_pot/break2"
                    },
                    {
                        "hash": "1e37a7e44e34d5a0e338c2d57424eaab4ba8eb46",
                        "name": "block/decorated_pot/break3"
                    },
                    {
                        "hash": "af6b7387f6d3140d630060c8efe5d25493d9e69c",
                        "name": "block/decorated_pot/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.decorated_pot.fall": [
            null,
            {
                "field": "fo",
                "id": 326,
                "name": "block.decorated_pot.fall",
                "sounds": [
                    {
                        "hash": "3074b4ae157b43321c2310de6e930b6584e1caac",
                        "name": "block/decorated_pot/step1"
                    },
                    {
                        "hash": "5985e73faa571a80ce67ea3ced8f90483bf942d6",
                        "name": "block/decorated_pot/step2"
                    },
                    {
                        "hash": "6994b2d54e4ce1e6b65efefac0200faffa7386d0",
                        "name": "block/decorated_pot/step3"
                    },
                    {
                        "hash": "9be5bd79cec57751d647b70d2502ef7ea23a4791",
                        "name": "block/decorated_pot/step4"
                    },
                    {
                        "hash": "ed1727e71588360e17a9ec891e448e2dc7cfe4ea",
                        "name": "block/decorated_pot/step5"
                    }
                ]
            }
        ],
        "block.decorated_pot.hit": [
            null,
            {
                "field": "fp",
                "id": 327,
                "name": "block.decorated_pot.hit",
                "sounds": [
                    {
                        "hash": "3074b4ae157b43321c2310de6e930b6584e1caac",
                        "name": "block/decorated_pot/step1"
                    },
                    {
                        "hash": "5985e73faa571a80ce67ea3ced8f90483bf942d6",
                        "name": "block/decorated_pot/step2"
                    },
                    {
                        "hash": "6994b2d54e4ce1e6b65efefac0200faffa7386d0",
                        "name": "block/decorated_pot/step3"
                    },
                    {
                        "hash": "9be5bd79cec57751d647b70d2502ef7ea23a4791",
                        "name": "block/decorated_pot/step4"
                    },
                    {
                        "hash": "ed1727e71588360e17a9ec891e448e2dc7cfe4ea",
                        "name": "block/decorated_pot/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.decorated_pot.place": [
            null,
            {
                "field": "fr",
                "id": 329,
                "name": "block.decorated_pot.place",
                "sounds": [
                    {
                        "hash": "5c84f54276722bea66088e2774e0fcd00929ae58",
                        "name": "block/decorated_pot/break1"
                    },
                    {
                        "hash": "98fe2b2b0c6bcc3f921c1ae8ec0686b719569e70",
                        "name": "block/decorated_pot/break2"
                    },
                    {
                        "hash": "1e37a7e44e34d5a0e338c2d57424eaab4ba8eb46",
                        "name": "block/decorated_pot/break3"
                    },
                    {
                        "hash": "af6b7387f6d3140d630060c8efe5d25493d9e69c",
                        "name": "block/decorated_pot/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.decorated_pot.shatter": [
            null,
            {
                "field": "fs",
                "id": 330,
                "name": "block.decorated_pot.shatter",
                "sounds": [
                    {
                        "hash": "aab5cf806b0948e7cf0b858fa36385913a2e486f",
                        "name": "block/decorated_pot/shatter1"
                    },
                    {
                        "hash": "21d4ebdf82249ccdcda3f01b23bb783490fe57d7",
                        "name": "block/decorated_pot/shatter2"
                    },
                    {
                        "hash": "7cd3d8225fa509ad313cbf622341b90d0b641e7b",
                        "name": "block/decorated_pot/shatter3"
                    },
                    {
                        "hash": "c2511ffc48374a7b05f83e0718bba9875a1ecfa7",
                        "name": "block/decorated_pot/shatter4"
                    },
                    {
                        "hash": "162e1406a22bda7483ad1b643a4277bec636c26f",
                        "name": "block/decorated_pot/shatter5"
                    },
                    {
                        "hash": "5716954e6041e0ec81b8d13b18b31b576d0067ee",
                        "name": "block/decorated_pot/shatter6"
                    }
                ],
                "subtitle": "Pot shatters",
                "subtitle_key": "subtitles.block.decorated_pot.shatter"
            }
        ],
        "block.decorated_pot.step": [
            null,
            {
                "field": "fq",
                "id": 328,
                "name": "block.decorated_pot.step",
                "sounds": [
                    {
                        "hash": "3074b4ae157b43321c2310de6e930b6584e1caac",
                        "name": "block/decorated_pot/step1"
                    },
                    {
                        "hash": "5985e73faa571a80ce67ea3ced8f90483bf942d6",
                        "name": "block/decorated_pot/step2"
                    },
                    {
                        "hash": "6994b2d54e4ce1e6b65efefac0200faffa7386d0",
                        "name": "block/decorated_pot/step3"
                    },
                    {
                        "hash": "9be5bd79cec57751d647b70d2502ef7ea23a4791",
                        "name": "block/decorated_pot/step4"
                    },
                    {
                        "hash": "ed1727e71588360e17a9ec891e448e2dc7cfe4ea",
                        "name": "block/decorated_pot/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.froglight.break": [
            {
                "field": "ht",
                "id": 435,
                "name": "block.froglight.break",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1"
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2"
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3"
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            {
                "field": "ik",
                "id": 478,
                "name": "block.froglight.break",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.froglight.place": [
            {
                "field": "hw",
                "id": 438,
                "name": "block.froglight.place",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1"
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2"
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3"
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            {
                "field": "in",
                "id": 481,
                "name": "block.froglight.place",
                "sounds": [
                    {
                        "hash": "8e1b990f1904fee612f096217e4c1f5e070da4eb",
                        "name": "block/froglight/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "bfe463d86f6dd29972a8b144d327ca0ac893a3ac",
                        "name": "block/froglight/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1845bd4c5ab4480491f9fe24494db55d417c76ba",
                        "name": "block/froglight/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "430b0fd6b24e24f70909c29a9ae6aca527046d0e",
                        "name": "block/froglight/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.pink_petals.break": [
            null,
            {
                "field": "nk",
                "id": 737,
                "name": "block.pink_petals.break",
                "sounds": [
                    {
                        "hash": "f1143e5adcd07dc885ed44d949886ce6fd870398",
                        "name": "block/cherry_leaves/break1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "f69923d3997e201e375daa99449249eab23fa123",
                        "name": "block/cherry_leaves/break2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "241e9041f3af4d599a093d66599823f27a7c9c7c",
                        "name": "block/cherry_leaves/break3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "157693bffdf434eca79edc0688e8bfbc3e2c85f1",
                        "name": "block/cherry_leaves/break4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "cdf49946c33481ce4cc5210c6e22d26ed2a6cbc6",
                        "name": "block/cherry_leaves/break5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.pink_petals.fall": [
            null,
            {
                "field": "nl",
                "id": 738,
                "name": "block.pink_petals.fall",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ]
            }
        ],
        "block.pink_petals.hit": [
            null,
            {
                "field": "nm",
                "id": 739,
                "name": "block.pink_petals.hit",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.pink_petals.place": [
            null,
            {
                "field": "nn",
                "id": 740,
                "name": "block.pink_petals.place",
                "sounds": [
                    {
                        "hash": "f1143e5adcd07dc885ed44d949886ce6fd870398",
                        "name": "block/cherry_leaves/break1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "f69923d3997e201e375daa99449249eab23fa123",
                        "name": "block/cherry_leaves/break2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "241e9041f3af4d599a093d66599823f27a7c9c7c",
                        "name": "block/cherry_leaves/break3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "157693bffdf434eca79edc0688e8bfbc3e2c85f1",
                        "name": "block/cherry_leaves/break4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "cdf49946c33481ce4cc5210c6e22d26ed2a6cbc6",
                        "name": "block/cherry_leaves/break5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.pink_petals.step": [
            null,
            {
                "field": "no",
                "id": 741,
                "name": "block.pink_petals.step",
                "sounds": [
                    {
                        "hash": "971452802a989bb7da353fc9b1bee56453f654ba",
                        "name": "block/cherry_leaves/step1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "d0cf47229e35ca91c2c70e8cdef1f1f842a1a0c9",
                        "name": "block/cherry_leaves/step2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "1a07b76ea50a3e33b63cfccbb51a12492c9bad8b",
                        "name": "block/cherry_leaves/step3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "5fdb7dfaaead3fac114c06fe7079426fdff0172f",
                        "name": "block/cherry_leaves/step4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "328cb372f5cec2977d7c393c7005966d6eed9ac5",
                        "name": "block/cherry_leaves/step5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.suspicious_sand.break": [
            null,
            {
                "field": "if",
                "id": 473,
                "name": "block.suspicious_sand.break",
                "sounds": [
                    {
                        "hash": "fa4cde3a4a7c969f67c0db580e2d1a9753894a06",
                        "name": "block/suspicious_sand/break1"
                    },
                    {
                        "hash": "7aa18022b06bfdb160c4f9a065b29e758644dd8f",
                        "name": "block/suspicious_sand/break2"
                    },
                    {
                        "hash": "217d71d1a5eb91491a8f6f5e7e648c08179e3e2f",
                        "name": "block/suspicious_sand/break3"
                    },
                    {
                        "hash": "c464f1b0415105a61e9ac40944535ed8cefb9939",
                        "name": "block/suspicious_sand/break4"
                    },
                    {
                        "hash": "784891ecc861171b9fc9397b41b0926aada4ab29",
                        "name": "block/suspicious_sand/break5"
                    },
                    {
                        "hash": "a7ffd93b890ffa30cc881d3280a66051210b6c3b",
                        "name": "block/suspicious_sand/break6"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.suspicious_sand.fall": [
            null,
            {
                "field": "ij",
                "id": 477,
                "name": "block.suspicious_sand.fall",
                "sounds": [
                    {
                        "hash": "55f06c5d247175cd1b819b53360f8c99f670a722",
                        "name": "block/suspicious_sand/step1"
                    },
                    {
                        "hash": "7bc0bbd5a259c1d2aacff9d3e07543a9d1caaaca",
                        "name": "block/suspicious_sand/step2"
                    },
                    {
                        "hash": "880d5e1ebb517f95a560b352ab28e22c28b5a8fa",
                        "name": "block/suspicious_sand/step3"
                    },
                    {
                        "hash": "7de922538314b6e3490bc3a4f3cb719e61393127",
                        "name": "block/suspicious_sand/step4"
                    },
                    {
                        "hash": "611f5163b6ba7c995d1ff9822830cb41fd9d140a",
                        "name": "block/suspicious_sand/step5"
                    }
                ]
            }
        ],
        "block.suspicious_sand.hit": [
            null,
            {
                "field": "ii",
                "id": 476,
                "name": "block.suspicious_sand.hit",
                "sounds": [
                    {
                        "hash": "55f06c5d247175cd1b819b53360f8c99f670a722",
                        "name": "block/suspicious_sand/step1"
                    },
                    {
                        "hash": "7bc0bbd5a259c1d2aacff9d3e07543a9d1caaaca",
                        "name": "block/suspicious_sand/step2"
                    },
                    {
                        "hash": "880d5e1ebb517f95a560b352ab28e22c28b5a8fa",
                        "name": "block/suspicious_sand/step3"
                    },
                    {
                        "hash": "7de922538314b6e3490bc3a4f3cb719e61393127",
                        "name": "block/suspicious_sand/step4"
                    },
                    {
                        "hash": "611f5163b6ba7c995d1ff9822830cb41fd9d140a",
                        "name": "block/suspicious_sand/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.suspicious_sand.place": [
            null,
            {
                "field": "ih",
                "id": 475,
                "name": "block.suspicious_sand.place",
                "sounds": [
                    {
                        "hash": "cc8b36813bb1701d9933109f7107e81753b0f7d2",
                        "name": "block/suspicious_sand/place1"
                    },
                    {
                        "hash": "b7970d1be71e3b0f8dc48a7b0a3ce88d9332f345",
                        "name": "block/suspicious_sand/place2"
                    },
                    {
                        "hash": "a614902cf90159fd9d1e5fc86af68479534a5ed5",
                        "name": "block/suspicious_sand/place3"
                    },
                    {
                        "hash": "41f5ff104a1d3ab88c363fbe8d4a0614cb016ea4",
                        "name": "block/suspicious_sand/place4"
                    },
                    {
                        "hash": "bcc872aebdacf04a0c7e4e510e82c93f72a307da",
                        "name": "block/suspicious_sand/place5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.suspicious_sand.step": [
            null,
            {
                "field": "ig",
                "id": 474,
                "name": "block.suspicious_sand.step",
                "sounds": [
                    {
                        "hash": "55f06c5d247175cd1b819b53360f8c99f670a722",
                        "name": "block/suspicious_sand/step1"
                    },
                    {
                        "hash": "7bc0bbd5a259c1d2aacff9d3e07543a9d1caaaca",
                        "name": "block/suspicious_sand/step2"
                    },
                    {
                        "hash": "880d5e1ebb517f95a560b352ab28e22c28b5a8fa",
                        "name": "block/suspicious_sand/step3"
                    },
                    {
                        "hash": "7de922538314b6e3490bc3a4f3cb719e61393127",
                        "name": "block/suspicious_sand/step4"
                    },
                    {
                        "hash": "611f5163b6ba7c995d1ff9822830cb41fd9d140a",
                        "name": "block/suspicious_sand/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.sniffer.death": [
            null,
            {
                "field": "wm",
                "id": 1207,
                "name": "entity.sniffer.death",
                "sounds": [
                    {
                        "hash": "cfa6b5584bfefd0fe405e8e1e04f15191462af08",
                        "name": "mob/sniffer/death1"
                    },
                    {
                        "hash": "b8da4a5f4f72955b2b612826700653cba9c09328",
                        "name": "mob/sniffer/death2"
                    }
                ],
                "subtitle": "Sniffer dies",
                "subtitle_key": "subtitles.entity.sniffer.death"
            }
        ],
        "entity.sniffer.digging": [
            null,
            {
                "field": "wr",
                "id": 1212,
                "name": "entity.sniffer.digging",
                "sounds": [
                    {
                        "hash": "25923916867fa5aedf01d1f646c21b88c3dd69d0",
                        "name": "mob/sniffer/longdig1"
                    },
                    {
                        "hash": "5d2949b53422c2f41c75da6167c771adb6e34cfb",
                        "name": "mob/sniffer/longdig2"
                    }
                ],
                "subtitle": "Sniffer digs",
                "subtitle_key": "subtitles.entity.sniffer.digging"
            }
        ],
        "entity.sniffer.digging_stop": [
            null,
            {
                "field": "ws",
                "id": 1213,
                "name": "entity.sniffer.digging_stop",
                "sounds": [
                    {
                        "hash": "d7f180ff421b3ea55bb52f377829df80cb61950c",
                        "name": "mob/sniffer/digging_stop1"
                    },
                    {
                        "hash": "c60eb286744b20e699e8ae34a73862597e8e4c01",
                        "name": "mob/sniffer/digging_stop2"
                    }
                ],
                "subtitle": "Sniffer stands up",
                "subtitle_key": "subtitles.entity.sniffer.digging_stop"
            }
        ],
        "entity.sniffer.drop_seed": [
            null,
            {
                "field": "wn",
                "id": 1208,
                "name": "entity.sniffer.drop_seed",
                "sounds": [
                    {
                        "hash": "8f45b5faf6dfae2065846d26612f7552b73640dd",
                        "name": "random/pop",
                        "pitch": 0.6,
                        "volume": 0.8
                    },
                    {
                        "hash": "8f45b5faf6dfae2065846d26612f7552b73640dd",
                        "name": "random/pop",
                        "pitch": 0.7,
                        "volume": 0.8
                    },
                    {
                        "hash": "8f45b5faf6dfae2065846d26612f7552b73640dd",
                        "name": "random/pop",
                        "pitch": 0.8,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Sniffer drops seed",
                "subtitle_key": "subtitles.entity.sniffer.drop_seed"
            }
        ],
        "entity.sniffer.eat": [
            null,
            {
                "field": "wj",
                "id": 1204,
                "name": "entity.sniffer.eat",
                "sounds": [
                    {
                        "hash": "5b34ba0048947e1cfa8b4b8e31b8ade167147dfd",
                        "name": "mob/sniffer/eat1",
                        "volume": 0.7
                    },
                    {
                        "hash": "f2dcf0dc0dda489f5314a0d24fba0e2bfc0eb1ee",
                        "name": "mob/sniffer/eat2",
                        "volume": 0.7
                    },
                    {
                        "hash": "d395c8461dee5382928f55ce9ef4e405181b0689",
                        "name": "mob/sniffer/eat3",
                        "volume": 0.7
                    }
                ],
                "subtitle": "Sniffer eats",
                "subtitle_key": "subtitles.entity.sniffer.eat"
            }
        ],
        "entity.sniffer.happy": [
            null,
            {
                "field": "wt",
                "id": 1214,
                "name": "entity.sniffer.happy",
                "sounds": [
                    {
                        "hash": "08c69088600aee936eba5fbbf663fb03b7634a79",
                        "name": "mob/sniffer/happy1"
                    },
                    {
                        "hash": "173b1da54317eaa261d375225632c6d59288e34f",
                        "name": "mob/sniffer/happy2"
                    },
                    {
                        "hash": "4790c6495323b987a81dd689e37cbf43a26db405",
                        "name": "mob/sniffer/happy3"
                    },
                    {
                        "hash": "607f9cc9083bfa90f26995a7e22fe466a5ca9c44",
                        "name": "mob/sniffer/happy4"
                    },
                    {
                        "hash": "598e89c3a8b5049179e11e8501d90a44c89fa2b6",
                        "name": "mob/sniffer/happy5"
                    }
                ],
                "subtitle": "Sniffer delights",
                "subtitle_key": "subtitles.entity.sniffer.happy"
            }
        ],
        "entity.sniffer.hurt": [
            null,
            {
                "field": "wl",
                "id": 1206,
                "name": "entity.sniffer.hurt",
                "sounds": [
                    {
                        "hash": "742e0210dad423ad9da5535041dfd6561ede0e38",
                        "name": "mob/sniffer/hurt1"
                    },
                    {
                        "hash": "85ef21b977fe74d4eba376e2d95a4453d55a2149",
                        "name": "mob/sniffer/hurt2"
                    },
                    {
                        "hash": "ccb268a7b34662888ed45985e8b232d9409879e0",
                        "name": "mob/sniffer/hurt3"
                    }
                ],
                "subtitle": "Sniffer hurts",
                "subtitle_key": "subtitles.entity.sniffer.hurt"
            }
        ],
        "entity.sniffer.idle": [
            null,
            {
                "field": "wk",
                "id": 1205,
                "name": "entity.sniffer.idle",
                "sounds": [
                    {
                        "hash": "9d2eb3170a480cc94803ff3c6f68b87c1ffd5e0f",
                        "name": "mob/sniffer/idle1"
                    },
                    {
                        "hash": "204b51ed92fafc4fe90a275d012db53583a3671b",
                        "name": "mob/sniffer/idle2"
                    },
                    {
                        "hash": "ed9a80e163332bdbc928db7ec551d4a1c1a5283e",
                        "name": "mob/sniffer/idle3"
                    },
                    {
                        "hash": "3828914a60e52512a43117b31498528c19e5d37e",
                        "name": "mob/sniffer/idle4"
                    },
                    {
                        "hash": "7b3d4e56ae5ba12e8a89a85fe434752908706936",
                        "name": "mob/sniffer/idle5"
                    },
                    {
                        "hash": "0f7fd126dd60ebd66a2d4466502c223e4c0f4975",
                        "name": "mob/sniffer/idle6"
                    },
                    {
                        "hash": "0cc9405f93aa5b409e27cf2428c828e7d55edf74",
                        "name": "mob/sniffer/idle7"
                    },
                    {
                        "hash": "acec32e1c1fa5032a7f613b5388b8ba6b6439c84",
                        "name": "mob/sniffer/idle8"
                    },
                    {
                        "hash": "2349535d52c0008e452bc1007d32fd0dca5a985c",
                        "name": "mob/sniffer/idle9"
                    },
                    {
                        "hash": "860e9f0bd465ef7b412cc9be1a33025cc6b07050",
                        "name": "mob/sniffer/idle10"
                    },
                    {
                        "hash": "fefda515e0371929a93b598217f883ae23ae4185",
                        "name": "mob/sniffer/idle11"
                    }
                ],
                "subtitle": "Sniffer grunts",
                "subtitle_key": "subtitles.entity.sniffer.idle"
            }
        ],
        "entity.sniffer.scenting": [
            null,
            {
                "field": "wo",
                "id": 1209,
                "name": "entity.sniffer.scenting",
                "sounds": [
                    {
                        "hash": "e0720fede3f18534b8cd95c8d6441e3974bffe4e",
                        "name": "mob/sniffer/scenting1"
                    },
                    {
                        "hash": "882adf0c362f4307584acdc7cdc25c19a83a3386",
                        "name": "mob/sniffer/scenting2"
                    },
                    {
                        "hash": "f4a9e6cea5caeb3690669b230bf2a2a8d66aba76",
                        "name": "mob/sniffer/scenting3"
                    }
                ],
                "subtitle": "Sniffer scents",
                "subtitle_key": "subtitles.entity.sniffer.scenting"
            }
        ],
        "entity.sniffer.searching": [
            null,
            {
                "field": "wq",
                "id": 1211,
                "name": "entity.sniffer.searching",
                "sounds": [
                    {
                        "hash": "c2e26760b5d899bba02e6e2f29ce5ca4e87844b6",
                        "name": "mob/sniffer/searching1"
                    },
                    {
                        "hash": "c2e26760b5d899bba02e6e2f29ce5ca4e87844b6",
                        "name": "mob/sniffer/searching1",
                        "volume": 0.8
                    },
                    {
                        "hash": "be24e53e92f17787b16dbc019d300c204a41a967",
                        "name": "mob/sniffer/searching2"
                    },
                    {
                        "hash": "be24e53e92f17787b16dbc019d300c204a41a967",
                        "name": "mob/sniffer/searching2",
                        "volume": 0.8
                    },
                    {
                        "hash": "606487eb2de7bc4821b0016bda277e03890cb8b0",
                        "name": "mob/sniffer/searching3"
                    },
                    {
                        "hash": "606487eb2de7bc4821b0016bda277e03890cb8b0",
                        "name": "mob/sniffer/searching3",
                        "volume": 0.8
                    },
                    {
                        "hash": "1e947fb99bc5f2403724c239a8a7ad5e0f1369dd",
                        "name": "mob/sniffer/searching4"
                    },
                    {
                        "hash": "1e947fb99bc5f2403724c239a8a7ad5e0f1369dd",
                        "name": "mob/sniffer/searching4",
                        "volume": 0.8
                    },
                    {
                        "hash": "b48f11e52050efa71764d793122b98ac2d54ddea",
                        "name": "mob/sniffer/searching5"
                    },
                    {
                        "hash": "b48f11e52050efa71764d793122b98ac2d54ddea",
                        "name": "mob/sniffer/searching5",
                        "volume": 0.8
                    },
                    {
                        "hash": "b29af237376cb8030891da0af1d12e505012a393",
                        "name": "mob/sniffer/searching6"
                    },
                    {
                        "hash": "b29af237376cb8030891da0af1d12e505012a393",
                        "name": "mob/sniffer/searching6",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Sniffer searches",
                "subtitle_key": "subtitles.entity.sniffer.searching"
            }
        ],
        "entity.sniffer.sniffing": [
            null,
            {
                "field": "wp",
                "id": 1210,
                "name": "entity.sniffer.sniffing",
                "sounds": [
                    {
                        "hash": "a0862a1cc7d31dd37e33854f95958a9276d4fe0b",
                        "name": "mob/sniffer/sniffing1"
                    },
                    {
                        "hash": "e4702a4cb07def56ffa9da0c105c0241ad3bd826",
                        "name": "mob/sniffer/sniffing2"
                    },
                    {
                        "hash": "e1524bcf630bcc9e04f7bb9cf9c3eaf353634a0a",
                        "name": "mob/sniffer/sniffing3"
                    }
                ],
                "subtitle": "Sniffer sniffs",
                "subtitle_key": "subtitles.entity.sniffer.sniffing"
            }
        ],
        "entity.sniffer.step": [
            null,
            {
                "field": "wi",
                "id": 1203,
                "name": "entity.sniffer.step",
                "sounds": [
                    {
                        "hash": "4d56986efbd9f0c9f6c8a2c4916f17d863456d06",
                        "name": "mob/sniffer/step1"
                    },
                    {
                        "hash": "44361b4a737ed88adf39ed223388c2e5fa1d5e5c",
                        "name": "mob/sniffer/step2"
                    },
                    {
                        "hash": "8d83fef778b1c4a7df04355ced9638f4216a48c7",
                        "name": "mob/sniffer/step3"
                    },
                    {
                        "hash": "d47f18a67f2765ba4930469266429f1440b94772",
                        "name": "mob/sniffer/step4"
                    },
                    {
                        "hash": "ef3675766e2bfba3b8de4fb707d2d12baba6cb18",
                        "name": "mob/sniffer/step5"
                    },
                    {
                        "hash": "179bdc9c9436143f297d1338744bbe7d751c898a",
                        "name": "mob/sniffer/step6"
                    }
                ],
                "subtitle": "Sniffer steps",
                "subtitle_key": "subtitles.entity.sniffer.step"
            }
        ],
        "item.brush.brush_sand_completed": [
            null,
            {
                "field": "cl",
                "id": 167,
                "name": "item.brush.brush_sand_completed",
                "sounds": [
                    {
                        "hash": "7425e3e9082b34174bc803a0b5b639c45b9f6631",
                        "name": "item/brush/brush_completed1"
                    },
                    {
                        "hash": "d4cf3c6c0ba86fbeedda0460dd25dce4f4762ee5",
                        "name": "item/brush/brush_completed2"
                    },
                    {
                        "hash": "33bab73536ccde1205b5c77001b55f9289769e1f",
                        "name": "item/brush/brush_completed3"
                    },
                    {
                        "hash": "bfd094a7e9c3c6f3bda315596ae97de16c4bce15",
                        "name": "item/brush/brush_completed4"
                    },
                    {
                        "hash": "6c53b74f97c248f4a293da24a67bae27baf0b5fe",
                        "name": "item/brush/brush_completed5"
                    }
                ],
                "subtitle": "Brushing sand completed",
                "subtitle_key": "subtitles.item.brush.brush_sand_completed"
            }
        ],
        "item.brush.brushing": [
            null,
            {
                "field": "ck",
                "id": 166,
                "name": "item.brush.brushing",
                "sounds": [
                    {
                        "hash": "ffa8d698ddccefba63cb8236219ca17a369fbb91",
                        "name": "item/brush/brushing1",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "b28c3865582868f63f1efe6e6e78a28b7e3f9e3f",
                        "name": "item/brush/brushing2",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "cb5c412cf4108cfaa7b5642e6a34294d85efcf55",
                        "name": "item/brush/brushing3",
                        "pitch": 0.6,
                        "volume": 0.6
                    },
                    {
                        "hash": "992b7f42a7e4f3b55e64658c10619f55a2e3802e",
                        "name": "item/brush/brushing4",
                        "pitch": 0.6,
                        "volume": 0.6
                    }
                ],
                "subtitle": "Brushing",
                "subtitle_key": "subtitles.item.brush.brushing"
            }
        ],
        "minecraft:intentionally_empty": [
            null,
            {
                "field": "oZ",
                "id": 830,
                "name": "minecraft:intentionally_empty"
            }
        ],
        "music.overworld.cherry_grove": [
            null,
            {
                "field": "ov",
                "id": 800,
                "name": "music.overworld.cherry_grove"
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/goats_spawnable_on": [
            {
                "name": "goats_spawnable_on",
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:snow",
                    "minecraft:snow_block",
                    "minecraft:packed_ice",
                    "minecraft:gravel"
                ]
            },
            {
                "name": "goats_spawnable_on",
                "type": "blocks",
                "values": [
                    "minecraft:grass_block",
                    "minecraft:stone",
                    "minecraft:snow",
                    "minecraft:snow_block",
                    "minecraft:packed_ice",
                    "minecraft:gravel"
                ]
            }
        ],
        "blocks/smelts_to_glass": [
            null,
            {
                "name": "smelts_to_glass",
                "type": "blocks",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            }
        ],
        "damage_type/always_hurts_ender_dragons": [
            null,
            {
                "name": "always_hurts_ender_dragons",
                "type": "damage_type",
                "values": [
                    "minecraft:fireworks",
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "damage_type/always_most_significant_fall": [
            null,
            {
                "name": "always_most_significant_fall",
                "type": "damage_type",
                "values": [
                    "minecraft:out_of_world"
                ]
            }
        ],
        "damage_type/always_triggers_silverfish": [
            null,
            {
                "name": "always_triggers_silverfish",
                "type": "damage_type",
                "values": [
                    "minecraft:magic"
                ]
            }
        ],
        "damage_type/avoids_guardian_thorns": [
            null,
            {
                "name": "avoids_guardian_thorns",
                "type": "damage_type",
                "values": [
                    "minecraft:magic",
                    "minecraft:thorns",
                    "minecraft:fireworks",
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "damage_type/burns_armor_stands": [
            null,
            {
                "name": "burns_armor_stands",
                "type": "damage_type",
                "values": [
                    "minecraft:on_fire"
                ]
            }
        ],
        "damage_type/bypasses_armor": [
            null,
            {
                "name": "bypasses_armor",
                "type": "damage_type",
                "values": [
                    "minecraft:on_fire",
                    "minecraft:in_wall",
                    "minecraft:cramming",
                    "minecraft:drown",
                    "minecraft:fly_into_wall",
                    "minecraft:generic",
                    "minecraft:wither",
                    "minecraft:dragon_breath",
                    "minecraft:starve",
                    "minecraft:fall",
                    "minecraft:freeze",
                    "minecraft:stalagmite",
                    "minecraft:magic",
                    "minecraft:indirect_magic",
                    "minecraft:out_of_world",
                    "minecraft:sonic_boom"
                ]
            }
        ],
        "damage_type/bypasses_effects": [
            null,
            {
                "name": "bypasses_effects",
                "type": "damage_type",
                "values": [
                    "minecraft:starve"
                ]
            }
        ],
        "damage_type/bypasses_enchantments": [
            null,
            {
                "name": "bypasses_enchantments",
                "type": "damage_type",
                "values": [
                    "minecraft:sonic_boom"
                ]
            }
        ],
        "damage_type/bypasses_invulnerability": [
            null,
            {
                "name": "bypasses_invulnerability",
                "type": "damage_type",
                "values": [
                    "minecraft:out_of_world"
                ]
            }
        ],
        "damage_type/bypasses_resistance": [
            null,
            {
                "name": "bypasses_resistance",
                "type": "damage_type",
                "values": [
                    "minecraft:out_of_world"
                ]
            }
        ],
        "damage_type/bypasses_shield": [
            null,
            {
                "name": "bypasses_shield",
                "type": "damage_type",
                "values": [
                    "minecraft:on_fire",
                    "minecraft:in_wall",
                    "minecraft:cramming",
                    "minecraft:drown",
                    "minecraft:fly_into_wall",
                    "minecraft:generic",
                    "minecraft:wither",
                    "minecraft:dragon_breath",
                    "minecraft:starve",
                    "minecraft:fall",
                    "minecraft:freeze",
                    "minecraft:stalagmite",
                    "minecraft:magic",
                    "minecraft:indirect_magic",
                    "minecraft:out_of_world",
                    "minecraft:sonic_boom",
                    "minecraft:falling_anvil",
                    "minecraft:falling_stalactite"
                ]
            }
        ],
        "damage_type/damages_helmet": [
            null,
            {
                "name": "damages_helmet",
                "type": "damage_type",
                "values": [
                    "minecraft:falling_anvil",
                    "minecraft:falling_block",
                    "minecraft:falling_stalactite"
                ]
            }
        ],
        "damage_type/ignites_armor_stands": [
            null,
            {
                "name": "ignites_armor_stands",
                "type": "damage_type",
                "values": [
                    "minecraft:in_fire"
                ]
            }
        ],
        "damage_type/is_drowning": [
            null,
            {
                "name": "is_drowning",
                "type": "damage_type",
                "values": [
                    "minecraft:drown"
                ]
            }
        ],
        "damage_type/is_explosion": [
            null,
            {
                "name": "is_explosion",
                "type": "damage_type",
                "values": [
                    "minecraft:fireworks",
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "damage_type/is_fall": [
            null,
            {
                "name": "is_fall",
                "type": "damage_type",
                "values": [
                    "minecraft:fall",
                    "minecraft:stalagmite"
                ]
            }
        ],
        "damage_type/is_fire": [
            null,
            {
                "name": "is_fire",
                "type": "damage_type",
                "values": [
                    "minecraft:in_fire",
                    "minecraft:on_fire",
                    "minecraft:lava",
                    "minecraft:hot_floor",
                    "minecraft:unattributed_fireball",
                    "minecraft:fireball"
                ]
            }
        ],
        "damage_type/is_freezing": [
            null,
            {
                "name": "is_freezing",
                "type": "damage_type",
                "values": [
                    "minecraft:freeze"
                ]
            }
        ],
        "damage_type/is_lightning": [
            null,
            {
                "name": "is_lightning",
                "type": "damage_type",
                "values": [
                    "minecraft:lightning_bolt"
                ]
            }
        ],
        "damage_type/is_projectile": [
            null,
            {
                "name": "is_projectile",
                "type": "damage_type",
                "values": [
                    "minecraft:arrow",
                    "minecraft:trident",
                    "minecraft:mob_projectile",
                    "minecraft:unattributed_fireball",
                    "minecraft:fireball",
                    "minecraft:wither_skull",
                    "minecraft:thrown"
                ]
            }
        ],
        "damage_type/no_anger": [
            null,
            {
                "name": "no_anger",
                "type": "damage_type",
                "values": [
                    "minecraft:mob_attack_no_aggro"
                ]
            }
        ],
        "damage_type/no_impact": [
            null,
            {
                "name": "no_impact",
                "type": "damage_type",
                "values": [
                    "minecraft:drown"
                ]
            }
        ],
        "damage_type/witch_resistant_to": [
            null,
            {
                "name": "witch_resistant_to",
                "type": "damage_type",
                "values": [
                    "minecraft:magic",
                    "minecraft:indirect_magic",
                    "minecraft:sonic_boom",
                    "minecraft:thorns"
                ]
            }
        ],
        "damage_type/wither_immune_to": [
            null,
            {
                "name": "wither_immune_to",
                "type": "damage_type",
                "values": [
                    "minecraft:drown"
                ]
            }
        ],
        "entity_types/dismounts_underwater": [
            null,
            {
                "name": "dismounts_underwater",
                "type": "entity_types",
                "values": [
                    "minecraft:camel",
                    "minecraft:chicken",
                    "minecraft:donkey",
                    "minecraft:horse",
                    "minecraft:llama",
                    "minecraft:mule",
                    "minecraft:pig",
                    "minecraft:ravager",
                    "minecraft:spider",
                    "minecraft:strider",
                    "minecraft:trader_llama",
                    "minecraft:zombie_horse"
                ]
            }
        ],
        "entity_types/fall_damage_immune": [
            null,
            {
                "name": "fall_damage_immune",
                "type": "entity_types",
                "values": [
                    "minecraft:iron_golem",
                    "minecraft:snow_golem",
                    "minecraft:shulker",
                    "minecraft:allay",
                    "minecraft:bat",
                    "minecraft:bee",
                    "minecraft:blaze",
                    "minecraft:cat",
                    "minecraft:chicken",
                    "minecraft:ghast",
                    "minecraft:phantom",
                    "minecraft:magma_cube",
                    "minecraft:ocelot",
                    "minecraft:parrot",
                    "minecraft:wither"
                ]
            }
        ],
        "game_events/vibrations": [
            {
                "name": "vibrations",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:dispense_fail",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_interact",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:piston_contract",
                    "minecraft:piston_extend",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:flap"
                ]
            },
            {
                "name": "vibrations",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:dispense_fail",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:piston_contract",
                    "minecraft:piston_extend",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:flap"
                ]
            }
        ],
        "game_events/warden_can_listen": [
            {
                "name": "warden_can_listen",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:dispense_fail",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_interact",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:piston_contract",
                    "minecraft:piston_extend",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:shriek",
                    "minecraft:sculk_sensor_tendrils_clicking"
                ]
            },
            {
                "name": "warden_can_listen",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:dispense_fail",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:piston_contract",
                    "minecraft:piston_extend",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:shriek",
                    "minecraft:sculk_sensor_tendrils_clicking"
                ]
            }
        ],
        "items/axes": [
            null,
            {
                "name": "axes",
                "type": "items",
                "values": [
                    "minecraft:diamond_axe",
                    "minecraft:stone_axe",
                    "minecraft:golden_axe",
                    "minecraft:netherite_axe",
                    "minecraft:wooden_axe",
                    "minecraft:iron_axe"
                ]
            }
        ],
        "items/hoes": [
            null,
            {
                "name": "hoes",
                "type": "items",
                "values": [
                    "minecraft:diamond_hoe",
                    "minecraft:stone_hoe",
                    "minecraft:golden_hoe",
                    "minecraft:netherite_hoe",
                    "minecraft:wooden_hoe",
                    "minecraft:iron_hoe"
                ]
            }
        ],
        "items/pickaxes": [
            null,
            {
                "name": "pickaxes",
                "type": "items",
                "values": [
                    "minecraft:diamond_pickaxe",
                    "minecraft:stone_pickaxe",
                    "minecraft:golden_pickaxe",
                    "minecraft:netherite_pickaxe",
                    "minecraft:wooden_pickaxe",
                    "minecraft:iron_pickaxe"
                ]
            }
        ],
        "items/shovels": [
            null,
            {
                "name": "shovels",
                "type": "items",
                "values": [
                    "minecraft:diamond_shovel",
                    "minecraft:stone_shovel",
                    "minecraft:golden_shovel",
                    "minecraft:netherite_shovel",
                    "minecraft:wooden_shovel",
                    "minecraft:iron_shovel"
                ]
            }
        ],
        "items/smelts_to_glass": [
            null,
            {
                "name": "smelts_to_glass",
                "type": "items",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand"
                ]
            }
        ],
        "items/swords": [
            null,
            {
                "name": "swords",
                "type": "items",
                "values": [
                    "minecraft:diamond_sword",
                    "minecraft:stone_sword",
                    "minecraft:golden_sword",
                    "minecraft:netherite_sword",
                    "minecraft:wooden_sword",
                    "minecraft:iron_sword"
                ]
            }
        ],
        "items/tools": [
            null,
            {
                "name": "tools",
                "type": "items",
                "values": [
                    "minecraft:diamond_sword",
                    "minecraft:stone_sword",
                    "minecraft:golden_sword",
                    "minecraft:netherite_sword",
                    "minecraft:wooden_sword",
                    "minecraft:iron_sword",
                    "minecraft:diamond_axe",
                    "minecraft:stone_axe",
                    "minecraft:golden_axe",
                    "minecraft:netherite_axe",
                    "minecraft:wooden_axe",
                    "minecraft:iron_axe",
                    "minecraft:diamond_pickaxe",
                    "minecraft:stone_pickaxe",
                    "minecraft:golden_pickaxe",
                    "minecraft:netherite_pickaxe",
                    "minecraft:wooden_pickaxe",
                    "minecraft:iron_pickaxe",
                    "minecraft:diamond_shovel",
                    "minecraft:stone_shovel",
                    "minecraft:golden_shovel",
                    "minecraft:netherite_shovel",
                    "minecraft:wooden_shovel",
                    "minecraft:iron_shovel",
                    "minecraft:diamond_hoe",
                    "minecraft:stone_hoe",
                    "minecraft:golden_hoe",
                    "minecraft:netherite_hoe",
                    "minecraft:wooden_hoe",
                    "minecraft:iron_hoe",
                    "minecraft:trident"
                ]
            }
        ],
        "worldgen/biome/increased_fire_burnout": [
            null,
            {
                "name": "biome/increased_fire_burnout",
                "type": "worldgen",
                "values": [
                    "minecraft:bamboo_jungle",
                    "minecraft:mushroom_fields",
                    "minecraft:mangrove_swamp",
                    "minecraft:snowy_slopes",
                    "minecraft:frozen_peaks",
                    "minecraft:jagged_peaks",
                    "minecraft:swamp",
                    "minecraft:jungle"
                ]
            }
        ],
        "worldgen/biome/only_allows_snow_and_gold_rabbits": [
            {
                "name": "biome/only_allows_snow_and_gold_rabbits",
                "type": "worldgen",
                "values": [
                    "minecraft:desert"
                ]
            },
            null
        ],
        "worldgen/biome/snow_golem_melts": [
            null,
            {
                "name": "biome/snow_golem_melts",
                "type": "worldgen",
                "values": [
                    "minecraft:badlands",
                    "minecraft:basalt_deltas",
                    "minecraft:crimson_forest",
                    "minecraft:desert",
                    "minecraft:eroded_badlands",
                    "minecraft:nether_wastes",
                    "minecraft:savanna",
                    "minecraft:savanna_plateau",
                    "minecraft:soul_sand_valley",
                    "minecraft:warped_forest",
                    "minecraft:windswept_savanna",
                    "minecraft:wooded_badlands"
                ]
            }
        ],
        "worldgen/biome/spawns_gold_rabbits": [
            null,
            {
                "name": "biome/spawns_gold_rabbits",
                "type": "worldgen",
                "values": [
                    "minecraft:desert"
                ]
            }
        ],
        "worldgen/biome/spawns_snow_foxes": [
            null,
            {
                "name": "biome/spawns_snow_foxes",
                "type": "worldgen",
                "values": [
                    "minecraft:snowy_plains",
                    "minecraft:ice_spikes",
                    "minecraft:frozen_ocean",
                    "minecraft:snowy_taiga",
                    "minecraft:frozen_river",
                    "minecraft:snowy_beach",
                    "minecraft:frozen_peaks",
                    "minecraft:jagged_peaks",
                    "minecraft:snowy_slopes",
                    "minecraft:grove"
                ]
            }
        ],
        "worldgen/biome/spawns_white_rabbits": [
            null,
            {
                "name": "biome/spawns_white_rabbits",
                "type": "worldgen",
                "values": [
                    "minecraft:snowy_plains",
                    "minecraft:ice_spikes",
                    "minecraft:frozen_ocean",
                    "minecraft:snowy_taiga",
                    "minecraft:frozen_river",
                    "minecraft:snowy_beach",
                    "minecraft:frozen_peaks",
                    "minecraft:jagged_peaks",
                    "minecraft:snowy_slopes",
                    "minecraft:grove"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {
            "decorated_pot": [
                null,
                {
                    "blocks": [
                        "decorated_pot"
                    ],
                    "class": "czr",
                    "name": "decorated_pot"
                }
            ],
            "hanging_sign": [
                {
                    "blocks": [
                        "oak_hanging_sign",
                        "spruce_hanging_sign",
                        "birch_hanging_sign",
                        "acacia_hanging_sign",
                        "jungle_hanging_sign",
                        "dark_oak_hanging_sign",
                        "crimson_hanging_sign",
                        "warped_hanging_sign",
                        "mangrove_hanging_sign",
                        "bamboo_hanging_sign",
                        "oak_wall_hanging_sign",
                        "spruce_wall_hanging_sign",
                        "birch_wall_hanging_sign",
                        "acacia_wall_hanging_sign",
                        "jungle_wall_hanging_sign",
                        "dark_oak_wall_hanging_sign",
                        "mangrove_wall_hanging_sign",
                        "crimson_wall_hanging_sign",
                        "warped_wall_hanging_sign",
                        "bamboo_wall_hanging_sign"
                    ],
                    "class": "cxd",
                    "name": "hanging_sign"
                },
                {
                    "blocks": [
                        "oak_hanging_sign",
                        "spruce_hanging_sign",
                        "birch_hanging_sign",
                        "acacia_hanging_sign",
                        "cherry_hanging_sign",
                        "jungle_hanging_sign",
                        "dark_oak_hanging_sign",
                        "crimson_hanging_sign",
                        "warped_hanging_sign",
                        "mangrove_hanging_sign",
                        "bamboo_hanging_sign",
                        "oak_wall_hanging_sign",
                        "spruce_wall_hanging_sign",
                        "birch_wall_hanging_sign",
                        "acacia_wall_hanging_sign",
                        "cherry_wall_hanging_sign",
                        "jungle_wall_hanging_sign",
                        "dark_oak_wall_hanging_sign",
                        "mangrove_wall_hanging_sign",
                        "crimson_wall_hanging_sign",
                        "warped_wall_hanging_sign",
                        "bamboo_wall_hanging_sign"
                    ],
                    "class": "czy",
                    "name": "hanging_sign"
                }
            ],
            "sign": [
                {
                    "blocks": [
                        "oak_sign",
                        "spruce_sign",
                        "birch_sign",
                        "acacia_sign",
                        "jungle_sign",
                        "dark_oak_sign",
                        "mangrove_sign",
                        "bamboo_sign",
                        "oak_wall_sign",
                        "spruce_wall_sign",
                        "birch_wall_sign",
                        "acacia_wall_sign",
                        "jungle_wall_sign",
                        "dark_oak_wall_sign",
                        "mangrove_wall_sign",
                        "bamboo_wall_sign",
                        "crimson_sign",
                        "warped_sign",
                        "crimson_wall_sign",
                        "warped_wall_sign"
                    ],
                    "class": "cxp",
                    "name": "sign"
                },
                {
                    "blocks": [
                        "oak_sign",
                        "spruce_sign",
                        "birch_sign",
                        "acacia_sign",
                        "cherry_sign",
                        "jungle_sign",
                        "dark_oak_sign",
                        "mangrove_sign",
                        "bamboo_sign",
                        "oak_wall_sign",
                        "spruce_wall_sign",
                        "birch_wall_sign",
                        "acacia_wall_sign",
                        "cherry_wall_sign",
                        "jungle_wall_sign",
                        "dark_oak_wall_sign",
                        "mangrove_wall_sign",
                        "bamboo_wall_sign",
                        "crimson_sign",
                        "warped_sign",
                        "crimson_wall_sign",
                        "warped_wall_sign"
                    ],
                    "class": "dak",
                    "name": "sign"
                }
            ],
            "suspicious_sand": [
                null,
                {
                    "blocks": [
                        "suspicious_sand"
                    ],
                    "class": "dap",
                    "name": "suspicious_sand"
                }
            ]
        }
    },
    "version": {
        "data": [
            3218,
            3337
        ],
        "id": [
            "1.19.3",
            "1.19.4"
        ],
        "name": [
            "1.19.3",
            "1.19.4"
        ],
        "protocol": [
            761,
            762
        ]
    }
}