{
    "achievements": {},
    "blocks": {
        "block": {
            "acacia_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Acacia Hanging Sign",
                    "field": "cR",
                    "hardness": 1.0,
                    "max_state_id": 4997,
                    "min_state_id": 4934,
                    "num_states": 64,
                    "numeric_id": 199,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "acacia_hanging_sign"
                }
            ],
            "acacia_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Acacia Wall Hanging Sign",
                    "field": "db",
                    "hardness": 1.0,
                    "max_state_id": 5413,
                    "min_state_id": 5406,
                    "num_states": 8,
                    "numeric_id": 209,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "acacia_wall_hanging_sign"
                }
            ],
            "bamboo_block": [
                null,
                {
                    "class": "csy",
                    "display_name": "Block of Bamboo",
                    "field": "Z",
                    "hardness": 2.0,
                    "max_state_id": 147,
                    "min_state_id": 145,
                    "num_states": 3,
                    "numeric_id": 51,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "gv$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_block"
                }
            ],
            "bamboo_button": [
                null,
                {
                    "class": "cnb",
                    "display_name": "Bamboo Button",
                    "field": "gk",
                    "hardness": 0.5,
                    "max_state_id": 8570,
                    "min_state_id": 8547,
                    "num_states": 24,
                    "numeric_id": 374,
                    "resistance": 0.5,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "czf",
                            "field_name": "J",
                            "name": "face",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "FLOOR",
                                "WALL",
                                "CEILING"
                            ]
                        }
                    ],
                    "super": [
                        "cpf",
                        "cqi",
                        "cmt"
                    ],
                    "text_id": "bamboo_button"
                }
            ],
            "bamboo_door": [
                null,
                {
                    "class": "cos",
                    "display_name": "Bamboo Door",
                    "field": "jU",
                    "hardness": 3.0,
                    "max_state_id": 11722,
                    "min_state_id": 11659,
                    "num_states": 64,
                    "numeric_id": 566,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "czp",
                            "field_name": "e",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "UPPER",
                                "LOWER"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "czo",
                            "field_name": "c",
                            "name": "hinge",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "LEFT",
                                "RIGHT"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_door"
                }
            ],
            "bamboo_fence": [
                null,
                {
                    "class": "cpj",
                    "display_name": "Bamboo Fence",
                    "field": "jN",
                    "hardness": 2.0,
                    "max_state_id": 11274,
                    "min_state_id": 11243,
                    "num_states": 32,
                    "numeric_id": 559,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "north",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "west",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "c",
                            "name": "south",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "coi",
                        "cmt"
                    ],
                    "text_id": "bamboo_fence"
                }
            ],
            "bamboo_fence_gate": [
                null,
                {
                    "class": "cpk",
                    "display_name": "Bamboo Fence Gate",
                    "field": "jG",
                    "hardness": 2.0,
                    "max_state_id": 11050,
                    "min_state_id": 11019,
                    "num_states": 32,
                    "numeric_id": 552,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "c",
                            "name": "in_wall",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cqi",
                        "cmt"
                    ],
                    "text_id": "bamboo_fence_gate"
                }
            ],
            "bamboo_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Bamboo Hanging Sign",
                    "field": "cX",
                    "hardness": 1.0,
                    "max_state_id": 5381,
                    "min_state_id": 5318,
                    "num_states": 64,
                    "numeric_id": 205,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "bamboo_hanging_sign"
                }
            ],
            "bamboo_mosaic": [
                null,
                {
                    "class": "cmt",
                    "display_name": "Bamboo Mosaic",
                    "field": "v",
                    "hardness": 2.0,
                    "max_state_id": 23,
                    "min_state_id": 23,
                    "num_states": 1,
                    "numeric_id": 21,
                    "resistance": 3.0,
                    "states": [],
                    "super": [],
                    "text_id": "bamboo_mosaic"
                }
            ],
            "bamboo_mosaic_slab": [
                null,
                {
                    "class": "ctq",
                    "display_name": "Bamboo Mosaic Slab",
                    "field": "jh",
                    "hardness": 2.0,
                    "max_state_id": 10738,
                    "min_state_id": 10733,
                    "num_states": 6,
                    "numeric_id": 527,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "dab",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_mosaic_slab"
                }
            ],
            "bamboo_mosaic_stairs": [
                null,
                {
                    "class": "cug",
                    "display_name": "Bamboo Mosaic Stairs",
                    "field": "hA",
                    "max_state_id": 9887,
                    "min_state_id": 9808,
                    "num_states": 80,
                    "numeric_id": 442,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "czs",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "dac",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_mosaic_stairs"
                }
            ],
            "bamboo_planks": [
                null,
                {
                    "class": "cmt",
                    "display_name": "Bamboo Planks",
                    "field": "u",
                    "hardness": 2.0,
                    "max_state_id": 22,
                    "min_state_id": 22,
                    "num_states": 1,
                    "numeric_id": 20,
                    "resistance": 3.0,
                    "states": [],
                    "super": [],
                    "text_id": "bamboo_planks"
                }
            ],
            "bamboo_pressure_plate": [
                null,
                {
                    "class": "csj",
                    "display_name": "Bamboo Pressure Plate",
                    "field": "ds",
                    "hardness": 0.5,
                    "max_state_id": 5567,
                    "min_state_id": 5566,
                    "num_states": 2,
                    "numeric_id": 226,
                    "resistance": 0.5,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmi",
                        "cmt"
                    ],
                    "text_id": "bamboo_pressure_plate"
                }
            ],
            "bamboo_sign": [
                null,
                {
                    "block_entity": "sign",
                    "class": "cuh",
                    "display_name": "Bamboo Sign",
                    "field": "cB",
                    "hardness": 1.0,
                    "max_state_id": 4505,
                    "min_state_id": 4474,
                    "num_states": 32,
                    "numeric_id": 183,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "bamboo_sign"
                }
            ],
            "bamboo_slab": [
                null,
                {
                    "class": "ctq",
                    "display_name": "Bamboo Slab",
                    "field": "jg",
                    "hardness": 2.0,
                    "max_state_id": 10732,
                    "min_state_id": 10727,
                    "num_states": 6,
                    "numeric_id": 526,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "dab",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_slab"
                }
            ],
            "bamboo_stairs": [
                null,
                {
                    "class": "cug",
                    "display_name": "Bamboo Stairs",
                    "field": "hz",
                    "max_state_id": 9807,
                    "min_state_id": 9728,
                    "num_states": 80,
                    "numeric_id": 441,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "czs",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "dac",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "bamboo_stairs"
                }
            ],
            "bamboo_trapdoor": [
                null,
                {
                    "class": "cuy",
                    "display_name": "Bamboo Trapdoor",
                    "field": "er",
                    "hardness": 3.0,
                    "max_state_id": 6307,
                    "min_state_id": 6244,
                    "num_states": 64,
                    "numeric_id": 277,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "open",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "enum_class": "czs",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "c",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cqi",
                        "cmt"
                    ],
                    "text_id": "bamboo_trapdoor"
                }
            ],
            "bamboo_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Bamboo Wall Hanging Sign",
                    "field": "dh",
                    "hardness": 1.0,
                    "max_state_id": 5461,
                    "min_state_id": 5454,
                    "num_states": 8,
                    "numeric_id": 215,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "bamboo_wall_hanging_sign"
                }
            ],
            "bamboo_wall_sign": [
                null,
                {
                    "block_entity": "sign",
                    "class": "cvj",
                    "display_name": "Bamboo Wall Sign",
                    "field": "cN",
                    "hardness": 1.0,
                    "max_state_id": 4741,
                    "min_state_id": 4734,
                    "num_states": 8,
                    "numeric_id": 195,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "bamboo_wall_sign"
                }
            ],
            "birch_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Birch Hanging Sign",
                    "field": "cQ",
                    "hardness": 1.0,
                    "max_state_id": 4933,
                    "min_state_id": 4870,
                    "num_states": 64,
                    "numeric_id": 198,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "birch_hanging_sign"
                }
            ],
            "birch_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Birch Wall Hanging Sign",
                    "field": "da",
                    "hardness": 1.0,
                    "max_state_id": 5405,
                    "min_state_id": 5398,
                    "num_states": 8,
                    "numeric_id": 208,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "birch_wall_hanging_sign"
                }
            ],
            "chiseled_bookshelf": [
                null,
                {
                    "block_entity": "chiseled_bookshelf",
                    "class": "cnt",
                    "display_name": "Chiseled Bookshelf",
                    "field": "cc",
                    "hardness": 1.5,
                    "max_state_id": 2300,
                    "min_state_id": 2045,
                    "num_states": 256,
                    "numeric_id": 158,
                    "resistance": 1.5,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "aD",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "bp",
                            "name": "slot_0_occupied",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "bq",
                            "name": "slot_1_occupied",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "br",
                            "name": "slot_2_occupied",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "bs",
                            "name": "slot_3_occupied",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "bt",
                            "name": "slot_4_occupied",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "bu",
                            "name": "slot_5_occupied",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "chiseled_bookshelf"
                }
            ],
            "crimson_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Crimson Hanging Sign",
                    "field": "cU",
                    "hardness": 1.0,
                    "max_state_id": 5189,
                    "min_state_id": 5126,
                    "num_states": 64,
                    "numeric_id": 202,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "crimson_hanging_sign"
                }
            ],
            "crimson_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Crimson Wall Hanging Sign",
                    "field": "df",
                    "hardness": 1.0,
                    "max_state_id": 5445,
                    "min_state_id": 5438,
                    "num_states": 8,
                    "numeric_id": 213,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "crimson_wall_hanging_sign"
                }
            ],
            "dark_oak_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Dark Oak Hanging Sign",
                    "field": "cT",
                    "hardness": 1.0,
                    "max_state_id": 5125,
                    "min_state_id": 5062,
                    "num_states": 64,
                    "numeric_id": 201,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "dark_oak_hanging_sign"
                }
            ],
            "dark_oak_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Dark Oak Wall Hanging Sign",
                    "field": "dd",
                    "hardness": 1.0,
                    "max_state_id": 5429,
                    "min_state_id": 5422,
                    "num_states": 8,
                    "numeric_id": 211,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "dark_oak_wall_hanging_sign"
                }
            ],
            "jungle_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Jungle Hanging Sign",
                    "field": "cS",
                    "hardness": 1.0,
                    "max_state_id": 5061,
                    "min_state_id": 4998,
                    "num_states": 64,
                    "numeric_id": 200,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "jungle_hanging_sign"
                }
            ],
            "jungle_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Jungle Wall Hanging Sign",
                    "field": "dc",
                    "hardness": 1.0,
                    "max_state_id": 5421,
                    "min_state_id": 5414,
                    "num_states": 8,
                    "numeric_id": 210,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "jungle_wall_hanging_sign"
                }
            ],
            "mangrove_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Mangrove Hanging Sign",
                    "field": "cW",
                    "hardness": 1.0,
                    "max_state_id": 5317,
                    "min_state_id": 5254,
                    "num_states": 64,
                    "numeric_id": 204,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "mangrove_hanging_sign"
                }
            ],
            "mangrove_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Mangrove Wall Hanging Sign",
                    "field": "de",
                    "hardness": 1.0,
                    "max_state_id": 5437,
                    "min_state_id": 5430,
                    "num_states": 8,
                    "numeric_id": 212,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "mangrove_wall_hanging_sign"
                }
            ],
            "note_block": [
                {
                    "class": "cou",
                    "display_name": "Note Block",
                    "field": "aL",
                    "hardness": 0.8,
                    "max_state_id": 1278,
                    "min_state_id": 479,
                    "num_states": 800,
                    "numeric_id": 89,
                    "resistance": 0.8,
                    "states": [
                        {
                            "declared_in": "cwe",
                            "enum_class": "cwp",
                            "field_name": "a",
                            "name": "instrument",
                            "num_values": 16,
                            "type": "enum",
                            "values": [
                                "HARP",
                                "BASEDRUM",
                                "SNARE",
                                "HAT",
                                "BASS",
                                "FLUTE",
                                "BELL",
                                "GUITAR",
                                "CHIME",
                                "XYLOPHONE",
                                "IRON_XYLOPHONE",
                                "COW_BELL",
                                "DIDGERIDOO",
                                "BIT",
                                "BANJO",
                                "PLING"
                            ]
                        },
                        {
                            "declared_in": "cwe",
                            "field_name": "b",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cwe",
                            "field_name": "c",
                            "max": 24,
                            "min": 0,
                            "name": "note",
                            "num_values": 25,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cjt"
                    ],
                    "text_id": "note_block"
                },
                {
                    "class": "crw",
                    "display_name": "Note Block",
                    "field": "aP",
                    "hardness": 0.8,
                    "max_state_id": 1636,
                    "min_state_id": 487,
                    "num_states": 1150,
                    "numeric_id": 93,
                    "resistance": 0.8,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "czu",
                            "field_name": "a",
                            "name": "instrument",
                            "num_values": 23,
                            "type": "enum",
                            "values": [
                                "HARP",
                                "BASEDRUM",
                                "SNARE",
                                "HAT",
                                "BASS",
                                "FLUTE",
                                "BELL",
                                "GUITAR",
                                "CHIME",
                                "XYLOPHONE",
                                "IRON_XYLOPHONE",
                                "COW_BELL",
                                "DIDGERIDOO",
                                "BIT",
                                "BANJO",
                                "PLING",
                                "ZOMBIE",
                                "SKELETON",
                                "CREEPER",
                                "DRAGON",
                                "WITHER_SKELETON",
                                "PIGLIN",
                                "CUSTOM_HEAD"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "c",
                            "max": 24,
                            "min": 0,
                            "name": "note",
                            "num_values": 25,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "note_block"
                }
            ],
            "oak_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Oak Hanging Sign",
                    "field": "cO",
                    "hardness": 1.0,
                    "max_state_id": 4805,
                    "min_state_id": 4742,
                    "num_states": 64,
                    "numeric_id": 196,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "oak_hanging_sign"
                }
            ],
            "oak_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Oak Wall Hanging Sign",
                    "field": "cY",
                    "hardness": 1.0,
                    "max_state_id": 5389,
                    "min_state_id": 5382,
                    "num_states": 8,
                    "numeric_id": 206,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "oak_wall_hanging_sign"
                }
            ],
            "piglin_head": [
                null,
                {
                    "block_entity": "skull",
                    "class": "ctp",
                    "display_name": "Piglin Head",
                    "field": "gx",
                    "hardness": 1.0,
                    "max_state_id": 8706,
                    "min_state_id": 8691,
                    "num_states": 16,
                    "numeric_id": 387,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "clq",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "piglin_head"
                }
            ],
            "piglin_wall_head": [
                null,
                {
                    "block_entity": "skull",
                    "class": "crz",
                    "display_name": "Piglin Wall Head",
                    "field": "gy",
                    "hardness": 1.0,
                    "max_state_id": 8710,
                    "min_state_id": 8707,
                    "num_states": 4,
                    "numeric_id": 388,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "cvk",
                        "clq",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "piglin_wall_head"
                }
            ],
            "spawner": [
                {
                    "block_entity": "mob_spawner",
                    "class": "cqx",
                    "display_name": "Spawner",
                    "field": "ce",
                    "hardness": 5.0,
                    "max_state_id": 2207,
                    "min_state_id": 2207,
                    "num_states": 1,
                    "numeric_id": 160,
                    "resistance": 5.0,
                    "states": [],
                    "super": [
                        "cjg",
                        "cjt"
                    ],
                    "text_id": "spawner"
                },
                {
                    "block_entity": "mob_spawner",
                    "class": "cua",
                    "display_name": "Monster Spawner",
                    "field": "cj",
                    "hardness": 5.0,
                    "max_state_id": 2821,
                    "min_state_id": 2821,
                    "num_states": 1,
                    "numeric_id": 165,
                    "resistance": 5.0,
                    "states": [],
                    "super": [
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "spawner"
                }
            ],
            "spruce_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Spruce Hanging Sign",
                    "field": "cP",
                    "hardness": 1.0,
                    "max_state_id": 4869,
                    "min_state_id": 4806,
                    "num_states": 64,
                    "numeric_id": 197,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "spruce_hanging_sign"
                }
            ],
            "spruce_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Spruce Wall Hanging Sign",
                    "field": "cZ",
                    "hardness": 1.0,
                    "max_state_id": 5397,
                    "min_state_id": 5390,
                    "num_states": 8,
                    "numeric_id": 207,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "spruce_wall_hanging_sign"
                }
            ],
            "stripped_bamboo_block": [
                null,
                {
                    "class": "csy",
                    "display_name": "Block of Stripped Bamboo",
                    "field": "ah",
                    "hardness": 2.0,
                    "max_state_id": 171,
                    "min_state_id": 169,
                    "num_states": 3,
                    "numeric_id": 59,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "enum_class": "gv$a",
                            "field_name": "g",
                            "name": "axis",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "X",
                                "Y",
                                "Z"
                            ]
                        }
                    ],
                    "super": [
                        "cmt"
                    ],
                    "text_id": "stripped_bamboo_block"
                }
            ],
            "warped_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cnp",
                    "display_name": "Warped Hanging Sign",
                    "field": "cV",
                    "hardness": 1.0,
                    "max_state_id": 5253,
                    "min_state_id": 5190,
                    "num_states": 64,
                    "numeric_id": 203,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "b",
                            "name": "attached",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "warped_hanging_sign"
                }
            ],
            "warped_wall_hanging_sign": [
                null,
                {
                    "block_entity": "hanging_sign",
                    "class": "cvi",
                    "display_name": "Warped Wall Hanging Sign",
                    "field": "dg",
                    "hardness": 1.0,
                    "max_state_id": 5453,
                    "min_state_id": 5446,
                    "num_states": 8,
                    "numeric_id": 214,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "czj",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "czj",
                            "field_name": "e",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "ctn",
                        "cmg",
                        "cmt"
                    ],
                    "text_id": "warped_wall_hanging_sign"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {
            "19": [
                {
                    "class": "aak$1",
                    "field": "u",
                    "id": 19,
                    "instructions": [
                        {
                            "field": "hm.bK.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "bni"
                },
                null
            ],
            "21": [
                {
                    "class": "aak$1",
                    "field": "p",
                    "id": 21,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "type": "java/util/Optional<Lhb;>"
                },
                {
                    "class": "abo$1",
                    "field": "w",
                    "id": 21,
                    "instructions": [
                        {
                            "field": "iw.aj.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "bpz"
                }
            ],
            "22": [
                {
                    "class": "aak$1",
                    "field": "w",
                    "id": 22,
                    "instructions": [
                        {
                            "field": "None.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "hc<Lbqr;>"
                },
                {
                    "class": "abo$1",
                    "field": "q",
                    "id": 22,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "type": "java/util/Optional<Lgy;>"
                }
            ],
            "23": [
                null,
                {
                    "class": "abo$1",
                    "field": "x",
                    "id": 23,
                    "instructions": [
                        {
                            "field": "None.getId(value)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "type": "gz<Lbte;>"
                }
            ],
            "BlockPos": [
                {
                    "class": "aak$1",
                    "field": "l",
                    "id": 9,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "name": "BlockPos",
                    "type": "gt"
                },
                {
                    "class": "abo$1",
                    "field": "m",
                    "id": 10,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "name": "BlockPos",
                    "type": "gp"
                }
            ],
            "Boolean": [
                {
                    "class": "aak$1",
                    "field": "i",
                    "id": 7,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "name": "Boolean",
                    "type": "java/lang/Boolean"
                },
                {
                    "class": "abo$1",
                    "field": "j",
                    "id": 8,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "name": "Boolean",
                    "type": "java/lang/Boolean"
                }
            ],
            "Chat": [
                {
                    "class": "aak$1",
                    "field": "e",
                    "id": 4,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "name": "Chat",
                    "type": "rq"
                },
                {
                    "class": "abo$1",
                    "field": "f",
                    "id": 5,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "name": "Chat",
                    "type": "ss"
                }
            ],
            "Facing": [
                {
                    "class": "aak$1",
                    "field": "n",
                    "id": 11,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Facing",
                    "type": "gy"
                },
                {
                    "class": "abo$1",
                    "field": "o",
                    "id": 12,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Facing",
                    "type": "gv"
                }
            ],
            "Float": [
                {
                    "class": "aak$1",
                    "field": "c",
                    "id": 2,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Float",
                    "type": "java/lang/Float"
                },
                {
                    "class": "abo$1",
                    "field": "d",
                    "id": 3,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Float",
                    "type": "java/lang/Float"
                }
            ],
            "Long": [
                null,
                {
                    "class": "abo$1",
                    "field": "c",
                    "id": 2,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "name": "Long",
                    "type": "java/lang/Long"
                }
            ],
            "NBT": [
                {
                    "class": "aal$5",
                    "field": "q",
                    "id": 14,
                    "instructions": [
                        {
                            "field": "(pj)value",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "name": "NBT",
                    "type": "pj"
                },
                {
                    "class": "abp$5",
                    "field": "r",
                    "id": 15,
                    "instructions": [
                        {
                            "field": "(qp)value",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "name": "NBT",
                    "type": "qp"
                }
            ],
            "OptBlockPos": [
                {
                    "class": "aak$1",
                    "field": "m",
                    "id": 10,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptBlockPos",
                    "type": "java/util/Optional<Lgt;>"
                },
                {
                    "class": "abo$1",
                    "field": "n",
                    "id": 11,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptBlockPos",
                    "type": "java/util/Optional<Lgp;>"
                }
            ],
            "OptBlockState": [
                {
                    "class": "aal$2",
                    "field": "h",
                    "id": 13,
                    "instructions": [
                        {
                            "condition": "((Optional)value).isPresent()",
                            "instructions": [
                                {
                                    "field": "cjt.i(((cvo)((Optional)value).get()))",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "name": "OptBlockState",
                    "type": "java/util/Optional<Lcvo;>"
                },
                {
                    "class": "abp$2",
                    "field": "i",
                    "id": 14,
                    "instructions": [
                        {
                            "condition": "((Optional)value).isPresent()",
                            "instructions": [
                                {
                                    "field": "cmt.i(((cyt)((Optional)value).get()))",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "name": "OptBlockState",
                    "type": "java/util/Optional<Lcyt;>"
                }
            ],
            "OptChat": [
                {
                    "class": "aak$1",
                    "field": "f",
                    "id": 5,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptChat",
                    "type": "java/util/Optional<Lrq;>"
                },
                {
                    "class": "abo$1",
                    "field": "g",
                    "id": 6,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptChat",
                    "type": "java/util/Optional<Lss;>"
                }
            ],
            "OptUUID": [
                {
                    "class": "aak$1",
                    "field": "o",
                    "id": 12,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptUUID",
                    "type": "java/util/Optional<Ljava/util/UUID;>"
                },
                {
                    "class": "abo$1",
                    "field": "p",
                    "id": 13,
                    "instructions": [
                        {
                            "field": "value.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "value.isPresent()",
                            "instructions": [
                                {
                                    "field": "value.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "OptUUID",
                    "type": "java/util/Optional<Ljava/util/UUID;>"
                }
            ],
            "OptVarInt": [
                {
                    "class": "aal$7",
                    "field": "s",
                    "id": 17,
                    "instructions": [
                        {
                            "field": "((OptionalInt)value).orElse(-1) + 1",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "OptVarInt",
                    "type": "java/util/OptionalInt"
                },
                {
                    "class": "abp$7",
                    "field": "t",
                    "id": 18,
                    "instructions": [
                        {
                            "field": "((OptionalInt)value).orElse(-1) + 1",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "OptVarInt",
                    "type": "java/util/OptionalInt"
                }
            ],
            "Particle": [
                {
                    "class": "aal$3",
                    "field": "j",
                    "id": 15,
                    "instructions": [
                        {
                            "field": "hm.aa.getId(((im)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "(im)value",
                            "method": "a(Lqx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "im",
                            "type": "interface"
                        }
                    ],
                    "name": "Particle",
                    "type": "im"
                },
                {
                    "class": "abp$3",
                    "field": "k",
                    "id": 16,
                    "instructions": [
                        {
                            "field": "iw.k.getId(((io)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "(io)value",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "io",
                            "type": "interface"
                        }
                    ],
                    "name": "Particle",
                    "type": "io"
                }
            ],
            "Pose": [
                {
                    "class": "aak$1",
                    "field": "t",
                    "id": 18,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Pose",
                    "type": "bco"
                },
                {
                    "class": "abo$1",
                    "field": "u",
                    "id": 19,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "name": "Pose",
                    "type": "bes"
                }
            ],
            "Rotations": [
                {
                    "class": "aal$4",
                    "field": "k",
                    "id": 8,
                    "instructions": [
                        {
                            "field": "((hp)value).b()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "((hp)value).c()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "((hp)value).d()",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Rotations",
                    "type": "hp"
                },
                {
                    "class": "abp$4",
                    "field": "l",
                    "id": 9,
                    "instructions": [
                        {
                            "field": "((hr)value).b()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "((hr)value).c()",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "((hr)value).d()",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "name": "Rotations",
                    "type": "hr"
                }
            ],
            "Slot": [
                {
                    "class": "aal$1",
                    "field": "g",
                    "id": 6,
                    "instructions": [
                        {
                            "field": "(cax)value",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "name": "Slot",
                    "type": "cax"
                },
                {
                    "class": "abp$1",
                    "field": "h",
                    "id": 7,
                    "instructions": [
                        {
                            "field": "(cdt)value",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "name": "Slot",
                    "type": "cdt"
                }
            ],
            "String": [
                {
                    "class": "aak$1",
                    "field": "d",
                    "id": 3,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "name": "String",
                    "type": "java/lang/String"
                },
                {
                    "class": "abo$1",
                    "field": "e",
                    "id": 4,
                    "instructions": [
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "name": "String",
                    "type": "java/lang/String"
                }
            ],
            "VillagerData": [
                {
                    "class": "aal$6",
                    "field": "r",
                    "id": 16,
                    "instructions": [
                        {
                            "field": "hm.ao.getId(((btq)value).a())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "hm.ap.getId(((btq)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "((btq)value).c()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "VillagerData",
                    "type": "btq"
                },
                {
                    "class": "abp$6",
                    "field": "s",
                    "id": 17,
                    "instructions": [
                        {
                            "field": "iw.y.getId(((bwd)value).a())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.z.getId(((bwd)value).b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "((bwd)value).c()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "name": "VillagerData",
                    "type": "bwd"
                }
            ]
        },
        "entity": {
            "allay": [
                {
                    "class": "boi",
                    "display_name": "Allay",
                    "field": "b",
                    "height": 0.6,
                    "id": 0,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "boi",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": true,
                                    "field": "ch",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "allay",
                    "width": 0.35
                },
                {
                    "class": "bqs",
                    "display_name": "Allay",
                    "field": "b",
                    "height": 0.6,
                    "id": 0,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bqs",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": true,
                                    "field": "ch",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "allay",
                    "width": 0.35
                }
            ],
            "area_effect_cloud": [
                {
                    "class": "bbm",
                    "display_name": "Area Effect Cloud",
                    "field": "c",
                    "height": 0.5,
                    "id": 1,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bbm",
                            "data": [
                                {
                                    "default": 0.5,
                                    "field": "d",
                                    "index": 8,
                                    "serializer": "Float",
                                    "serializer_id": 2
                                },
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "f",
                                    "index": 10,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "ao",
                                    "index": 11,
                                    "serializer": "Particle",
                                    "serializer_id": 15
                                }
                            ]
                        }
                    ],
                    "name": "area_effect_cloud",
                    "width": 6.0
                },
                {
                    "class": "bdq",
                    "display_name": "Area Effect Cloud",
                    "field": "c",
                    "height": 0.5,
                    "id": 1,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bdq",
                            "data": [
                                {
                                    "default": 3.0,
                                    "field": "f",
                                    "index": 8,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 10,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "aq",
                                    "index": 11,
                                    "serializer": "Particle",
                                    "serializer_id": 16
                                }
                            ]
                        }
                    ],
                    "name": "area_effect_cloud",
                    "width": 6.0
                }
            ],
            "armor_stand": [
                {
                    "class": "bql",
                    "display_name": "Armor Stand",
                    "field": "d",
                    "height": 1.975,
                    "id": 2,
                    "metadata": [
                        {
                            "class": "bcc",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "n"
                                },
                                {
                                    "mask": 4,
                                    "method": "q"
                                },
                                {
                                    "mask": 8,
                                    "method": "r"
                                },
                                {
                                    "mask": 16,
                                    "method": "t"
                                }
                            ],
                            "class": "bql",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bG",
                                    "index": 15,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "bH",
                                    "index": 16,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "bI",
                                    "index": 17,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "bJ",
                                    "index": 18,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "bK",
                                    "index": 19,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "bL",
                                    "index": 20,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "bM",
                                    "index": 21,
                                    "serializer": "Rotations",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "armor_stand",
                    "width": 0.5
                },
                {
                    "class": "bsy",
                    "display_name": "Armor Stand",
                    "field": "d",
                    "height": 1.975,
                    "id": 2,
                    "metadata": [
                        {
                            "class": "beg",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "m"
                                },
                                {
                                    "mask": 4,
                                    "method": "p"
                                },
                                {
                                    "mask": 8,
                                    "method": "r"
                                },
                                {
                                    "mask": 16,
                                    "method": "t"
                                }
                            ],
                            "class": "bsy",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bG",
                                    "index": 15,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "bH",
                                    "index": 16,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                },
                                {
                                    "field": "bI",
                                    "index": 17,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                },
                                {
                                    "field": "bJ",
                                    "index": 18,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                },
                                {
                                    "field": "bK",
                                    "index": 19,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                },
                                {
                                    "field": "bL",
                                    "index": 20,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                },
                                {
                                    "field": "bM",
                                    "index": 21,
                                    "serializer": "Rotations",
                                    "serializer_id": 9
                                }
                            ]
                        }
                    ],
                    "name": "armor_stand",
                    "width": 0.5
                }
            ],
            "axolotl": [
                {
                    "class": "bol",
                    "display_name": "Axolotl",
                    "field": "f",
                    "height": 0.42,
                    "id": 4,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bol",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cf",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "ch",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "axolotl",
                    "width": 0.75
                },
                {
                    "class": "bqv",
                    "display_name": "Axolotl",
                    "field": "f",
                    "height": 0.42,
                    "id": 4,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqv",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ce",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "axolotl",
                    "width": 0.75
                }
            ],
            "boat": [
                {
                    "class": "bvv",
                    "display_name": "Boat",
                    "field": "j",
                    "height": 0.5625,
                    "id": 8,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bvv",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1,
                                    "field": "ao",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0.0,
                                    "field": "ap",
                                    "index": 10,
                                    "serializer": "Float",
                                    "serializer_id": 2
                                },
                                {
                                    "field": "aq",
                                    "index": 11,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ar",
                                    "index": 12,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "as",
                                    "index": 13,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "at",
                                    "index": 14,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "boat",
                    "width": 1.375
                },
                {
                    "class": "byi",
                    "display_name": "Boat",
                    "field": "j",
                    "height": 0.5625,
                    "id": 8,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "byi",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1,
                                    "field": "ao",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0.0,
                                    "field": "ap",
                                    "index": 10,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "field": "aq",
                                    "index": 11,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ar",
                                    "index": 12,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "as",
                                    "index": 13,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "at",
                                    "index": 14,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "boat",
                    "width": 1.375
                }
            ],
            "camel": [
                null,
                {
                    "class": "bra",
                    "display_name": "Camel",
                    "field": "m",
                    "height": 2.375,
                    "id": 11,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bra",
                            "data": [
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": -52,
                                    "field": "cb",
                                    "index": 20,
                                    "serializer": "Long",
                                    "serializer_id": 2
                                }
                            ]
                        }
                    ],
                    "name": "camel",
                    "width": 1.7
                }
            ],
            "cat": [
                {
                    "class": "bnh",
                    "display_name": "Cat",
                    "field": "l",
                    "height": 0.7,
                    "id": 10,
                    "metadata": [
                        {
                            "class": "bcw",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "bnh",
                            "data": [
                                {
                                    "field": "ce",
                                    "index": 19,
                                    "serializer": 19,
                                    "serializer_id": 19
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 20,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "ch",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "cat",
                    "width": 0.6
                },
                {
                    "class": "bpr",
                    "display_name": "Cat",
                    "field": "l",
                    "height": 0.7,
                    "id": 10,
                    "metadata": [
                        {
                            "class": "bfb",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "bpr",
                            "data": [
                                {
                                    "field": "ce",
                                    "index": 19,
                                    "serializer": 20,
                                    "serializer_id": 20
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 20,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "ch",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "cat",
                    "width": 0.6
                }
            ],
            "cod": [
                {
                    "class": "bnk",
                    "display_name": "Cod",
                    "field": "o",
                    "height": 0.3,
                    "id": 13,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnb",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "cod",
                    "width": 0.5
                },
                {
                    "class": "bpu",
                    "display_name": "Cod",
                    "field": "p",
                    "height": 0.3,
                    "id": 14,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpl",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "cod",
                    "width": 0.5
                }
            ],
            "command_block_minecart": [
                {
                    "class": "bwb",
                    "display_name": "Minecart with Command Block",
                    "field": "ae",
                    "height": 0.7,
                    "id": 55,
                    "metadata": [
                        {
                            "class": "bvt",
                            "entity": "~abstract_minecart"
                        },
                        {
                            "bitfields": [],
                            "class": "bwb",
                            "data": [
                                {
                                    "default": "",
                                    "field": "c",
                                    "index": 14,
                                    "serializer": "String",
                                    "serializer_id": 3
                                },
                                {
                                    "field": "d",
                                    "index": 15,
                                    "serializer": "Chat",
                                    "serializer_id": 4
                                }
                            ]
                        }
                    ],
                    "name": "command_block_minecart",
                    "width": 0.98
                },
                {
                    "class": "byo",
                    "display_name": "Minecart with Command Block",
                    "field": "af",
                    "height": 0.7,
                    "id": 56,
                    "metadata": [
                        {
                            "class": "byg",
                            "entity": "~abstract_minecart"
                        },
                        {
                            "bitfields": [],
                            "class": "byo",
                            "data": [
                                {
                                    "default": "",
                                    "field": "c",
                                    "index": 14,
                                    "serializer": "String",
                                    "serializer_id": 4
                                },
                                {
                                    "field": "d",
                                    "index": 15,
                                    "serializer": "Chat",
                                    "serializer_id": 5
                                }
                            ]
                        }
                    ],
                    "name": "command_block_minecart",
                    "width": 0.98
                }
            ],
            "creeper": [
                {
                    "class": "brc",
                    "display_name": "Creeper",
                    "field": "q",
                    "height": 1.7,
                    "id": 15,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "brc",
                            "data": [
                                {
                                    "default": -1,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "creeper",
                    "width": 0.6
                },
                {
                    "class": "btp",
                    "display_name": "Creeper",
                    "field": "r",
                    "height": 1.7,
                    "id": 16,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "btp",
                            "data": [
                                {
                                    "default": -1,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "creeper",
                    "width": 0.6
                }
            ],
            "dolphin": [
                {
                    "class": "bnm",
                    "display_name": "Dolphin",
                    "field": "r",
                    "height": 0.6,
                    "id": 16,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnm",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "BlockPos",
                                    "serializer_id": 9
                                },
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 2400,
                                    "field": "bX",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "dolphin",
                    "width": 0.9
                },
                {
                    "class": "bpw",
                    "display_name": "Dolphin",
                    "field": "s",
                    "height": 0.6,
                    "id": 17,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpw",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "BlockPos",
                                    "serializer_id": 10
                                },
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 2400,
                                    "field": "bX",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "dolphin",
                    "width": 0.9
                }
            ],
            "donkey": [
                {
                    "class": "bpb",
                    "display_name": "Donkey",
                    "field": "s",
                    "height": 1.5,
                    "id": 17,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "boz",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cn",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "donkey",
                    "width": 1.39648
                },
                {
                    "class": "bro",
                    "display_name": "Donkey",
                    "field": "t",
                    "height": 1.5,
                    "id": 18,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "donkey",
                    "width": 1.39648
                }
            ],
            "egg": [
                {
                    "class": "bvc",
                    "display_name": "Thrown Egg",
                    "field": "aQ",
                    "height": 0.25,
                    "id": 93,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "egg",
                    "width": 0.25
                },
                {
                    "class": "bxp",
                    "display_name": "Thrown Egg",
                    "field": "aR",
                    "height": 0.25,
                    "id": 94,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxn",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "egg",
                    "width": 0.25
                }
            ],
            "end_crystal": [
                {
                    "class": "bpo",
                    "display_name": "End Crystal",
                    "field": "w",
                    "height": 2.0,
                    "id": 21,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bpo",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "OptBlockPos",
                                    "serializer_id": 10
                                },
                                {
                                    "default": true,
                                    "field": "d",
                                    "index": 9,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "end_crystal",
                    "width": 2.0
                },
                {
                    "class": "bsb",
                    "display_name": "End Crystal",
                    "field": "x",
                    "height": 2.0,
                    "id": 22,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bsb",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "OptBlockPos",
                                    "serializer_id": 11
                                },
                                {
                                    "default": true,
                                    "field": "d",
                                    "index": 9,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "end_crystal",
                    "width": 2.0
                }
            ],
            "ender_pearl": [
                {
                    "class": "bvd",
                    "display_name": "Thrown Ender Pearl",
                    "field": "aR",
                    "height": 0.25,
                    "id": 94,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "ender_pearl",
                    "width": 0.25
                },
                {
                    "class": "bxq",
                    "display_name": "Thrown Ender Pearl",
                    "field": "aS",
                    "height": 0.25,
                    "id": 95,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxn",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "ender_pearl",
                    "width": 0.25
                }
            ],
            "enderman": [
                {
                    "class": "brg",
                    "display_name": "Enderman",
                    "field": "y",
                    "height": 2.9,
                    "id": 23,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "brg",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "bY",
                                    "index": 16,
                                    "serializer": "OptBlockState",
                                    "serializer_id": 13
                                },
                                {
                                    "default": false,
                                    "field": "bZ",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "enderman",
                    "width": 0.6
                },
                {
                    "class": "btt",
                    "display_name": "Enderman",
                    "field": "z",
                    "height": 2.9,
                    "id": 24,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "btt",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "bY",
                                    "index": 16,
                                    "serializer": "OptBlockState",
                                    "serializer_id": 14
                                },
                                {
                                    "default": false,
                                    "field": "bZ",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "enderman",
                    "width": 0.6
                }
            ],
            "evoker": [
                {
                    "class": "brj",
                    "display_name": "Evoker",
                    "field": "A",
                    "height": 1.95,
                    "id": 25,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bsa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "evoker",
                    "width": 0.6
                },
                {
                    "class": "btw",
                    "display_name": "Evoker",
                    "field": "B",
                    "height": 1.95,
                    "id": 26,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bun",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "evoker",
                    "width": 0.6
                }
            ],
            "experience_bottle": [
                {
                    "class": "bve",
                    "display_name": "Thrown Bottle o' Enchanting",
                    "field": "aS",
                    "height": 0.25,
                    "id": 95,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "experience_bottle",
                    "width": 0.25
                },
                {
                    "class": "bxr",
                    "display_name": "Thrown Bottle o' Enchanting",
                    "field": "aT",
                    "height": 0.25,
                    "id": 96,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxn",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "experience_bottle",
                    "width": 0.25
                }
            ],
            "eye_of_ender": [
                {
                    "class": "bun",
                    "display_name": "Eye of Ender",
                    "field": "D",
                    "height": 0.25,
                    "id": 28,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bun",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "eye_of_ender",
                    "width": 0.25
                },
                {
                    "class": "bxa",
                    "display_name": "Eye of Ender",
                    "field": "E",
                    "height": 0.25,
                    "id": 29,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxa",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "eye_of_ender",
                    "width": 0.25
                }
            ],
            "falling_block": [
                {
                    "class": "bqu",
                    "display_name": "Falling Block",
                    "field": "E",
                    "height": 0.98,
                    "id": 29,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bqu",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "BlockPos",
                                    "serializer_id": 9
                                }
                            ]
                        }
                    ],
                    "name": "falling_block",
                    "width": 0.98
                },
                {
                    "class": "bth",
                    "display_name": "Falling Block",
                    "field": "F",
                    "height": 0.98,
                    "id": 30,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bth",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "BlockPos",
                                    "serializer_id": 10
                                }
                            ]
                        }
                    ],
                    "name": "falling_block",
                    "width": 0.98
                }
            ],
            "fireball": [
                {
                    "class": "bus",
                    "display_name": "Fireball",
                    "field": "V",
                    "height": 1.0,
                    "id": 46,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "buo",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "fireball",
                    "width": 1.0
                },
                {
                    "class": "bxf",
                    "display_name": "Fireball",
                    "field": "W",
                    "height": 1.0,
                    "id": 47,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxb",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "fireball",
                    "width": 1.0
                }
            ],
            "firework_rocket": [
                {
                    "class": "bup",
                    "display_name": "Firework Rocket",
                    "field": "F",
                    "height": 0.25,
                    "id": 30,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bup",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                },
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 9,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 17
                                },
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 10,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "firework_rocket",
                    "width": 0.25
                },
                {
                    "class": "bxc",
                    "display_name": "Firework Rocket",
                    "field": "G",
                    "height": 0.25,
                    "id": 31,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxc",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                },
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 9,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 18
                                },
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 10,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "firework_rocket",
                    "width": 0.25
                }
            ],
            "fishing_bobber": [
                {
                    "class": "buq",
                    "display_name": "Fishing Bobber",
                    "field": "bo",
                    "height": 0.25,
                    "id": 117,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "buq",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "fishing_bobber",
                    "width": 0.25
                },
                {
                    "class": "bxd",
                    "display_name": "Fishing Bobber",
                    "field": "bp",
                    "height": 0.25,
                    "id": 118,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxd",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "fishing_bobber",
                    "width": 0.25
                }
            ],
            "fox": [
                {
                    "class": "bno",
                    "display_name": "Fox",
                    "field": "G",
                    "height": 0.7,
                    "id": 31,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "fJ"
                                },
                                {
                                    "mask": 64,
                                    "method": "fK"
                                },
                                {
                                    "mask": 32,
                                    "method": "fj"
                                },
                                {
                                    "mask": 16,
                                    "method": "fL"
                                },
                                {
                                    "mask": 4,
                                    "method": "bQ"
                                },
                                {
                                    "mask": 8,
                                    "method": "fT"
                                }
                            ],
                            "class": "bno",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "ch",
                                    "index": 19,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                },
                                {
                                    "default": "Empty",
                                    "field": "ci",
                                    "index": 20,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        }
                    ],
                    "name": "fox",
                    "width": 0.6
                },
                {
                    "class": "bpy",
                    "display_name": "Fox",
                    "field": "H",
                    "height": 0.7,
                    "id": 32,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "fM"
                                },
                                {
                                    "mask": 64,
                                    "method": "fN"
                                },
                                {
                                    "mask": 32,
                                    "method": "fp"
                                },
                                {
                                    "mask": 16,
                                    "method": "fO"
                                },
                                {
                                    "mask": 4,
                                    "method": "bT"
                                },
                                {
                                    "mask": 8,
                                    "method": "fW"
                                }
                            ],
                            "class": "bpy",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "ch",
                                    "index": 19,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                },
                                {
                                    "default": "Empty",
                                    "field": "ci",
                                    "index": 20,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "fox",
                    "width": 0.6
                }
            ],
            "frog": [
                {
                    "class": "boq",
                    "display_name": "Frog",
                    "field": "H",
                    "height": 0.5,
                    "id": 32,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "boq",
                            "data": [
                                {
                                    "field": "ci",
                                    "index": 17,
                                    "serializer": 20,
                                    "serializer_id": 20
                                },
                                {
                                    "default": "Empty",
                                    "field": "cj",
                                    "index": 18,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 17
                                }
                            ]
                        }
                    ],
                    "name": "frog",
                    "width": 0.5
                },
                {
                    "class": "brd",
                    "display_name": "Frog",
                    "field": "I",
                    "height": 0.5,
                    "id": 33,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "brd",
                            "data": [
                                {
                                    "field": "ci",
                                    "index": 17,
                                    "serializer": 21,
                                    "serializer_id": 21
                                },
                                {
                                    "default": "Empty",
                                    "field": "cj",
                                    "index": 18,
                                    "serializer": "OptVarInt",
                                    "serializer_id": 18
                                }
                            ]
                        }
                    ],
                    "name": "frog",
                    "width": 0.5
                }
            ],
            "furnace_minecart": [
                {
                    "class": "bwc",
                    "display_name": "Minecart with Furnace",
                    "field": "af",
                    "height": 0.7,
                    "id": 56,
                    "metadata": [
                        {
                            "class": "bvt",
                            "entity": "~abstract_minecart"
                        },
                        {
                            "bitfields": [],
                            "class": "bwc",
                            "data": [
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 14,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "furnace_minecart",
                    "width": 0.98
                },
                {
                    "class": "byp",
                    "display_name": "Minecart with Furnace",
                    "field": "ag",
                    "height": 0.7,
                    "id": 57,
                    "metadata": [
                        {
                            "class": "byg",
                            "entity": "~abstract_minecart"
                        },
                        {
                            "bitfields": [],
                            "class": "byp",
                            "data": [
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 14,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "furnace_minecart",
                    "width": 0.98
                }
            ],
            "ghast": [
                {
                    "class": "brk",
                    "display_name": "Ghast",
                    "field": "I",
                    "height": 4.0,
                    "id": 33,
                    "metadata": [
                        {
                            "class": "bce",
                            "entity": "~abstract_insentient"
                        },
                        {
                            "bitfields": [],
                            "class": "brk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "ghast",
                    "width": 4.0
                },
                {
                    "class": "btx",
                    "display_name": "Ghast",
                    "field": "J",
                    "height": 4.0,
                    "id": 34,
                    "metadata": [
                        {
                            "class": "bei",
                            "entity": "~abstract_insentient"
                        },
                        {
                            "bitfields": [],
                            "class": "btx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "ghast",
                    "width": 4.0
                }
            ],
            "goat": [
                {
                    "class": "bow",
                    "display_name": "Goat",
                    "field": "M",
                    "height": 1.3,
                    "id": 37,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bow",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": true,
                                    "field": "ch",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": true,
                                    "field": "ci",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "goat",
                    "width": 0.9
                },
                {
                    "class": "brj",
                    "display_name": "Goat",
                    "field": "N",
                    "height": 1.3,
                    "id": 38,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "brj",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cg",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": true,
                                    "field": "ch",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": true,
                                    "field": "ci",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "goat",
                    "width": 0.9
                }
            ],
            "guardian": [
                {
                    "class": "brm",
                    "display_name": "Guardian",
                    "field": "N",
                    "height": 0.85,
                    "id": 38,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "guardian",
                    "width": 0.85
                },
                {
                    "class": "btz",
                    "display_name": "Guardian",
                    "field": "O",
                    "height": 0.85,
                    "id": 39,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "btz",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "guardian",
                    "width": 0.85
                }
            ],
            "hoglin": [
                {
                    "class": "bsm",
                    "display_name": "Hoglin",
                    "field": "O",
                    "height": 1.4,
                    "id": 39,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bsm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "hoglin",
                    "width": 1.39648
                },
                {
                    "class": "buz",
                    "display_name": "Hoglin",
                    "field": "P",
                    "height": 1.4,
                    "id": 40,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "buz",
                            "data": [
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "hoglin",
                    "width": 1.39648
                }
            ],
            "horse": [
                {
                    "class": "bpc",
                    "display_name": "Horse",
                    "field": "P",
                    "height": 1.6,
                    "id": 40,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bpc",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cn",
                                    "index": 19,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "horse",
                    "width": 1.39648
                },
                {
                    "class": "brp",
                    "display_name": "Horse",
                    "field": "Q",
                    "height": 1.6,
                    "id": 41,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brp",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "horse",
                    "width": 1.39648
                }
            ],
            "illusioner": [
                {
                    "class": "bro",
                    "display_name": "Illusioner",
                    "field": "R",
                    "height": 1.95,
                    "id": 42,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bsa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "illusioner",
                    "width": 0.6
                },
                {
                    "class": "bub",
                    "display_name": "Illusioner",
                    "field": "S",
                    "height": 1.95,
                    "id": 43,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bun",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "illusioner",
                    "width": 0.6
                }
            ],
            "item": [
                {
                    "class": "bqv",
                    "display_name": "Item",
                    "field": "T",
                    "height": 0.25,
                    "id": 44,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bqv",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "item",
                    "width": 0.25
                },
                {
                    "class": "bti",
                    "display_name": "Item",
                    "field": "U",
                    "height": 0.25,
                    "id": 45,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bti",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "item",
                    "width": 0.25
                }
            ],
            "item_frame": [
                {
                    "class": "bqo",
                    "display_name": "Item Frame",
                    "field": "U",
                    "height": 0.5,
                    "id": 45,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bqo",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                },
                                {
                                    "default": 0,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "item_frame",
                    "width": 0.5
                },
                {
                    "class": "btb",
                    "display_name": "Item Frame",
                    "field": "V",
                    "height": 0.5,
                    "id": 46,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "btb",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "item_frame",
                    "width": 0.5
                }
            ],
            "llama": [
                {
                    "class": "bpd",
                    "display_name": "Llama",
                    "field": "Y",
                    "height": 1.87,
                    "id": 49,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "boz",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cn",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bpd",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cq",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "cr",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cs",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "llama",
                    "width": 0.9
                },
                {
                    "class": "brq",
                    "display_name": "Llama",
                    "field": "Z",
                    "height": 1.87,
                    "id": 50,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brq",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "cc",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "llama",
                    "width": 0.9
                }
            ],
            "mooshroom": [
                {
                    "class": "bnr",
                    "display_name": "Mooshroom",
                    "field": "ak",
                    "height": 1.4,
                    "id": 61,
                    "metadata": [
                        {
                            "class": "bnl",
                            "entity": "cow"
                        },
                        {
                            "bitfields": [],
                            "class": "bnr",
                            "data": [
                                {
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "String",
                                    "serializer_id": 3
                                }
                            ]
                        }
                    ],
                    "name": "mooshroom",
                    "width": 0.9
                },
                {
                    "class": "bqb",
                    "display_name": "Mooshroom",
                    "field": "al",
                    "height": 1.4,
                    "id": 62,
                    "metadata": [
                        {
                            "class": "bpv",
                            "entity": "cow"
                        },
                        {
                            "bitfields": [],
                            "class": "bqb",
                            "data": [
                                {
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "String",
                                    "serializer_id": 4
                                }
                            ]
                        }
                    ],
                    "name": "mooshroom",
                    "width": 0.9
                }
            ],
            "mule": [
                {
                    "class": "bpf",
                    "display_name": "Mule",
                    "field": "aj",
                    "height": 1.6,
                    "id": 60,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "boz",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cn",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "mule",
                    "width": 1.39648
                },
                {
                    "class": "brs",
                    "display_name": "Mule",
                    "field": "ak",
                    "height": 1.6,
                    "id": 61,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brm",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "mule",
                    "width": 1.39648
                }
            ],
            "ocelot": [
                {
                    "class": "bns",
                    "display_name": "Ocelot",
                    "field": "al",
                    "height": 0.7,
                    "id": 62,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bns",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cc",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "ocelot",
                    "width": 0.6
                },
                {
                    "class": "bqc",
                    "display_name": "Ocelot",
                    "field": "am",
                    "height": 0.7,
                    "id": 63,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqc",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cc",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "ocelot",
                    "width": 0.6
                }
            ],
            "painting": [
                {
                    "class": "bqq",
                    "display_name": "Painting",
                    "field": "am",
                    "height": 0.5,
                    "id": 63,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bqq",
                            "data": [
                                {
                                    "field": "e",
                                    "index": 8,
                                    "serializer": 22,
                                    "serializer_id": 22
                                }
                            ]
                        }
                    ],
                    "name": "painting",
                    "width": 0.5
                },
                {
                    "class": "btd",
                    "display_name": "Painting",
                    "field": "an",
                    "height": 0.5,
                    "id": 64,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "btd",
                            "data": [
                                {
                                    "field": "e",
                                    "index": 8,
                                    "serializer": 23,
                                    "serializer_id": 23
                                }
                            ]
                        }
                    ],
                    "name": "painting",
                    "width": 0.5
                }
            ],
            "pig": [
                {
                    "class": "bnv",
                    "display_name": "Pig",
                    "field": "aq",
                    "height": 0.9,
                    "id": 67,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bnv",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "bY",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "pig",
                    "width": 0.9
                },
                {
                    "class": "bqf",
                    "display_name": "Pig",
                    "field": "ar",
                    "height": 0.9,
                    "id": 68,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqf",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "bY",
                                    "index": 18,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "pig",
                    "width": 0.9
                }
            ],
            "piglin": [
                {
                    "class": "bss",
                    "display_name": "Piglin",
                    "field": "ar",
                    "height": 1.95,
                    "id": 68,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bsr",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bss",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bY",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "bZ",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "piglin",
                    "width": 0.6
                },
                {
                    "class": "bvf",
                    "display_name": "Piglin",
                    "field": "as",
                    "height": 1.95,
                    "id": 69,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bve",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bvf",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bZ",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "ca",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "piglin",
                    "width": 0.6
                }
            ],
            "piglin_brute": [
                {
                    "class": "bsv",
                    "display_name": "Piglin Brute",
                    "field": "as",
                    "height": 1.95,
                    "id": 69,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bsr",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "piglin_brute",
                    "width": 0.6
                },
                {
                    "class": "bvi",
                    "display_name": "Piglin Brute",
                    "field": "at",
                    "height": 1.95,
                    "id": 70,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bve",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "piglin_brute",
                    "width": 0.6
                }
            ],
            "pillager": [
                {
                    "class": "brt",
                    "display_name": "Pillager",
                    "field": "at",
                    "height": 1.95,
                    "id": 70,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "brt",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "pillager",
                    "width": 0.6
                },
                {
                    "class": "bug",
                    "display_name": "Pillager",
                    "field": "au",
                    "height": 1.95,
                    "id": 71,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bug",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "pillager",
                    "width": 0.6
                }
            ],
            "player": [
                {
                    "class": "buc",
                    "display_name": "Player",
                    "field": "bn",
                    "height": 1.8,
                    "id": 116,
                    "metadata": [
                        {
                            "class": "bcc",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [],
                            "class": "buc",
                            "data": [
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 15,
                                    "serializer": "Float",
                                    "serializer_id": 2
                                },
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bO",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 1,
                                    "field": "bP",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bQ",
                                    "index": 19,
                                    "serializer": "NBT",
                                    "serializer_id": 14
                                },
                                {
                                    "default": "Empty",
                                    "field": "bR",
                                    "index": 20,
                                    "serializer": "NBT",
                                    "serializer_id": 14
                                }
                            ]
                        }
                    ],
                    "name": "player",
                    "serializable": "false",
                    "width": 0.6
                },
                {
                    "class": "bwp",
                    "display_name": "Player",
                    "field": "bo",
                    "height": 1.8,
                    "id": 117,
                    "metadata": [
                        {
                            "class": "beg",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [],
                            "class": "bwp",
                            "data": [
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 15,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bO",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 1,
                                    "field": "bP",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bQ",
                                    "index": 19,
                                    "serializer": "NBT",
                                    "serializer_id": 15
                                },
                                {
                                    "default": "Empty",
                                    "field": "bR",
                                    "index": 20,
                                    "serializer": "NBT",
                                    "serializer_id": 15
                                }
                            ]
                        }
                    ],
                    "name": "player",
                    "serializable": "false",
                    "width": 0.6
                }
            ],
            "polar_bear": [
                {
                    "class": "bnw",
                    "display_name": "Polar Bear",
                    "field": "au",
                    "height": 1.4,
                    "id": 71,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bnw",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "polar_bear",
                    "width": 1.4
                },
                {
                    "class": "bqg",
                    "display_name": "Polar Bear",
                    "field": "av",
                    "height": 1.4,
                    "id": 72,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqg",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "polar_bear",
                    "width": 1.4
                }
            ],
            "potion": [
                {
                    "class": "bvf",
                    "display_name": "Potion",
                    "field": "aT",
                    "height": 0.25,
                    "id": 96,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "potion",
                    "width": 0.25
                },
                {
                    "class": "bxs",
                    "display_name": "Potion",
                    "field": "aU",
                    "height": 0.25,
                    "id": 97,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxn",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "potion",
                    "width": 0.25
                }
            ],
            "pufferfish": [
                {
                    "class": "bnx",
                    "display_name": "Pufferfish",
                    "field": "aw",
                    "height": 0.7,
                    "id": 73,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnb",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bnx",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "pufferfish",
                    "width": 0.7
                },
                {
                    "class": "bqh",
                    "display_name": "Pufferfish",
                    "field": "ax",
                    "height": 0.7,
                    "id": 74,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpl",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bqh",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "pufferfish",
                    "width": 0.7
                }
            ],
            "rabbit": [
                {
                    "class": "bny",
                    "display_name": "Rabbit",
                    "field": "ax",
                    "height": 0.5,
                    "id": 74,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bny",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cm",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "rabbit",
                    "width": 0.4
                },
                {
                    "class": "bqi",
                    "display_name": "Rabbit",
                    "field": "ay",
                    "height": 0.5,
                    "id": 75,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqi",
                            "data": [
                                {
                                    "field": "cf",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "rabbit",
                    "width": 0.4
                }
            ],
            "ravager": [
                {
                    "class": "brv",
                    "display_name": "Ravager",
                    "field": "ay",
                    "height": 2.2,
                    "id": 75,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "ravager",
                    "width": 1.95
                },
                {
                    "class": "bui",
                    "display_name": "Ravager",
                    "field": "az",
                    "height": 2.2,
                    "id": 76,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "ravager",
                    "width": 1.95
                }
            ],
            "salmon": [
                {
                    "class": "bnz",
                    "display_name": "Salmon",
                    "field": "az",
                    "height": 0.4,
                    "id": 76,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnb",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "salmon",
                    "width": 0.7
                },
                {
                    "class": "bqj",
                    "display_name": "Salmon",
                    "field": "aA",
                    "height": 0.4,
                    "id": 77,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpl",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "salmon",
                    "width": 0.7
                }
            ],
            "shulker": [
                {
                    "class": "brw",
                    "display_name": "Shulker",
                    "field": "aB",
                    "height": 1.0,
                    "id": 78,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "brw",
                            "data": [
                                {
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Facing",
                                    "serializer_id": 11
                                },
                                {
                                    "default": 0,
                                    "field": "c",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 16,
                                    "field": "d",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "shulker",
                    "width": 1.0
                },
                {
                    "class": "buj",
                    "display_name": "Shulker",
                    "field": "aC",
                    "height": 1.0,
                    "id": 79,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "buj",
                            "data": [
                                {
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Facing",
                                    "serializer_id": 12
                                },
                                {
                                    "default": 0,
                                    "field": "c",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 16,
                                    "field": "d",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "shulker",
                    "width": 1.0
                }
            ],
            "skeleton": [
                {
                    "class": "bry",
                    "display_name": "Skeleton",
                    "field": "aE",
                    "height": 1.99,
                    "id": 81,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bry",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "skeleton",
                    "width": 0.6
                },
                {
                    "class": "bul",
                    "display_name": "Skeleton",
                    "field": "aF",
                    "height": 1.99,
                    "id": 82,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bul",
                            "data": [
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "skeleton",
                    "width": 0.6
                }
            ],
            "skeleton_horse": [
                {
                    "class": "bpg",
                    "display_name": "Skeleton Horse",
                    "field": "aF",
                    "height": 1.6,
                    "id": 82,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        }
                    ],
                    "name": "skeleton_horse",
                    "width": 1.39648
                },
                {
                    "class": "brt",
                    "display_name": "Skeleton Horse",
                    "field": "aG",
                    "height": 1.6,
                    "id": 83,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "skeleton_horse",
                    "width": 1.39648
                }
            ],
            "small_fireball": [
                {
                    "class": "bux",
                    "display_name": "Small Fireball",
                    "field": "aH",
                    "height": 0.3125,
                    "id": 84,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "buo",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "small_fireball",
                    "width": 0.3125
                },
                {
                    "class": "bxk",
                    "display_name": "Small Fireball",
                    "field": "aI",
                    "height": 0.3125,
                    "id": 85,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxb",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "small_fireball",
                    "width": 0.3125
                }
            ],
            "snowball": [
                {
                    "class": "buy",
                    "display_name": "Snowball",
                    "field": "aJ",
                    "height": 0.25,
                    "id": 86,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bva",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 6
                                }
                            ]
                        }
                    ],
                    "name": "snowball",
                    "width": 0.25
                },
                {
                    "class": "bxl",
                    "display_name": "Snowball",
                    "field": "aK",
                    "height": 0.25,
                    "id": 87,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxn",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "b",
                                    "index": 8,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "snowball",
                    "width": 0.25
                }
            ],
            "spawner_minecart": [
                {
                    "class": "bwe",
                    "display_name": "Minecart with Spawner",
                    "field": "ah",
                    "height": 0.7,
                    "id": 58,
                    "metadata": [
                        {
                            "class": "bvt",
                            "entity": "~abstract_minecart"
                        }
                    ],
                    "name": "spawner_minecart",
                    "width": 0.98
                },
                {
                    "class": "byr",
                    "display_name": "Minecart with Monster Spawner",
                    "field": "ai",
                    "height": 0.7,
                    "id": 59,
                    "metadata": [
                        {
                            "class": "byg",
                            "entity": "~abstract_minecart"
                        }
                    ],
                    "name": "spawner_minecart",
                    "width": 0.98
                }
            ],
            "strider": [
                {
                    "class": "bsd",
                    "display_name": "Strider",
                    "field": "aO",
                    "height": 1.7,
                    "id": 91,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bsd",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ce",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "strider",
                    "width": 0.9
                },
                {
                    "class": "buq",
                    "display_name": "Strider",
                    "field": "aP",
                    "height": 1.7,
                    "id": 92,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "buq",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ce",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "strider",
                    "width": 0.9
                }
            ],
            "tadpole": [
                {
                    "class": "bot",
                    "display_name": "Tadpole",
                    "field": "aP",
                    "id": 92,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnb",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "tadpole"
                },
                {
                    "class": "brg",
                    "display_name": "Tadpole",
                    "field": "aQ",
                    "id": 93,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpl",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "tadpole"
                }
            ],
            "trident": [
                {
                    "class": "bvg",
                    "display_name": "Trident",
                    "field": "aU",
                    "height": 0.5,
                    "id": 97,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "q"
                                },
                                {
                                    "mask": 4,
                                    "method": "r"
                                },
                                {
                                    "mask": 2,
                                    "method": "u"
                                }
                            ],
                            "class": "bui",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 0,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bvg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 10,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 11,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "trident",
                    "width": 0.5
                },
                {
                    "class": "bxt",
                    "display_name": "Trident",
                    "field": "aV",
                    "height": 0.5,
                    "id": 98,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 1,
                                    "method": "p"
                                },
                                {
                                    "mask": 4,
                                    "method": "r"
                                },
                                {
                                    "mask": 2,
                                    "method": "u"
                                }
                            ],
                            "class": "bwv",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 8,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 0,
                                    "field": "ap",
                                    "index": 9,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bxt",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "ao",
                                    "index": 10,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 11,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "trident",
                    "width": 0.5
                }
            ],
            "tropical_fish": [
                {
                    "class": "boe",
                    "display_name": "Tropical Fish",
                    "field": "aW",
                    "height": 0.4,
                    "id": 99,
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bnb",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "boe",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "tropical_fish",
                    "width": 0.5
                },
                {
                    "class": "bqo",
                    "display_name": "Tropical Fish",
                    "field": "aX",
                    "height": 0.4,
                    "id": 100,
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bpl",
                            "data": [
                                {
                                    "default": false,
                                    "field": "b",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bqo",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "d",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "tropical_fish",
                    "width": 0.5
                }
            ],
            "turtle": [
                {
                    "class": "bof",
                    "display_name": "Turtle",
                    "field": "aX",
                    "height": 0.4,
                    "id": 100,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bof",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "ca",
                                    "index": 17,
                                    "serializer": "BlockPos",
                                    "serializer_id": 9
                                },
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "cc",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "cd",
                                    "index": 20,
                                    "serializer": "BlockPos",
                                    "serializer_id": 9
                                },
                                {
                                    "default": false,
                                    "field": "ce",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 22,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "turtle",
                    "width": 1.2
                },
                {
                    "class": "bqp",
                    "display_name": "Turtle",
                    "field": "aY",
                    "height": 0.4,
                    "id": 101,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bqp",
                            "data": [
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "ca",
                                    "index": 17,
                                    "serializer": "BlockPos",
                                    "serializer_id": 10
                                },
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cc",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": "(0, 0, 0)",
                                    "field": "cd",
                                    "index": 20,
                                    "serializer": "BlockPos",
                                    "serializer_id": 10
                                },
                                {
                                    "default": false,
                                    "field": "ce",
                                    "index": 21,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "cf",
                                    "index": 22,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "turtle",
                    "width": 1.2
                }
            ],
            "villager": [
                {
                    "class": "btp",
                    "display_name": "Villager",
                    "field": "aZ",
                    "height": 1.95,
                    "id": 102,
                    "metadata": [
                        {
                            "class": "bbk",
                            "entity": "~abstract_ageable"
                        },
                        {
                            "bitfields": [],
                            "class": "btk",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bZ",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "btp",
                            "data": [
                                {
                                    "field": "ce",
                                    "index": 18,
                                    "serializer": "VillagerData",
                                    "serializer_id": 16
                                }
                            ]
                        }
                    ],
                    "name": "villager",
                    "width": 0.6
                },
                {
                    "class": "bwc",
                    "display_name": "Villager",
                    "field": "ba",
                    "height": 1.95,
                    "id": 103,
                    "metadata": [
                        {
                            "class": "bdo",
                            "entity": "~abstract_ageable"
                        },
                        {
                            "bitfields": [],
                            "class": "bvx",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bZ",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bwc",
                            "data": [
                                {
                                    "field": "ce",
                                    "index": 18,
                                    "serializer": "VillagerData",
                                    "serializer_id": 17
                                }
                            ]
                        }
                    ],
                    "name": "villager",
                    "width": 0.6
                }
            ],
            "vindicator": [
                {
                    "class": "bsf",
                    "display_name": "Vindicator",
                    "field": "ba",
                    "height": 1.95,
                    "id": 103,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "vindicator",
                    "width": 0.6
                },
                {
                    "class": "bus",
                    "display_name": "Vindicator",
                    "field": "bb",
                    "height": 1.95,
                    "id": 104,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "vindicator",
                    "width": 0.6
                }
            ],
            "witch": [
                {
                    "class": "bsg",
                    "display_name": "Witch",
                    "field": "bd",
                    "height": 1.95,
                    "id": 106,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bvk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bsg",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "witch",
                    "width": 0.6
                },
                {
                    "class": "but",
                    "display_name": "Witch",
                    "field": "be",
                    "height": 1.95,
                    "id": 107,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bxx",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "but",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "witch",
                    "width": 0.6
                }
            ],
            "wither_skull": [
                {
                    "class": "bvh",
                    "display_name": "Wither Skull",
                    "field": "bg",
                    "height": 0.3125,
                    "id": 109,
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bvh",
                            "data": [
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "wither_skull",
                    "width": 0.3125
                },
                {
                    "class": "bxu",
                    "display_name": "Wither Skull",
                    "field": "bh",
                    "height": 0.3125,
                    "id": 110,
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bxu",
                            "data": [
                                {
                                    "default": false,
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "wither_skull",
                    "width": 0.3125
                }
            ],
            "wolf": [
                {
                    "class": "boh",
                    "display_name": "Wolf",
                    "field": "bh",
                    "height": 0.85,
                    "id": 110,
                    "metadata": [
                        {
                            "class": "bcw",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "boh",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "cc",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "wolf",
                    "width": 0.6
                },
                {
                    "class": "bqr",
                    "display_name": "Wolf",
                    "field": "bi",
                    "height": 0.85,
                    "id": 111,
                    "metadata": [
                        {
                            "class": "bfb",
                            "entity": "~abstract_tameable"
                        },
                        {
                            "bitfields": [],
                            "class": "bqr",
                            "data": [
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "cc",
                                    "index": 20,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "cd",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "wolf",
                    "width": 0.6
                }
            ],
            "zoglin": [
                {
                    "class": "bsi",
                    "display_name": "Zoglin",
                    "field": "bi",
                    "height": 1.4,
                    "id": 111,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bsi",
                            "data": [
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "zoglin",
                    "width": 1.39648
                },
                {
                    "class": "buv",
                    "display_name": "Zoglin",
                    "field": "bj",
                    "height": 1.4,
                    "id": 112,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "buv",
                            "data": [
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "zoglin",
                    "width": 1.39648
                }
            ],
            "zombie": [
                {
                    "class": "bsj",
                    "display_name": "Zombie",
                    "field": "bj",
                    "height": 1.95,
                    "id": 112,
                    "metadata": [
                        {
                            "class": "brq",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "bsj",
                            "data": [
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "ca",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "cb",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "zombie",
                    "width": 0.6
                },
                {
                    "class": "buw",
                    "display_name": "Zombie",
                    "field": "bk",
                    "height": 1.95,
                    "id": 113,
                    "metadata": [
                        {
                            "class": "bud",
                            "entity": "~abstract_monster"
                        },
                        {
                            "bitfields": [],
                            "class": "buw",
                            "data": [
                                {
                                    "default": false,
                                    "field": "d",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "zombie",
                    "width": 0.6
                }
            ],
            "zombie_horse": [
                {
                    "class": "bpk",
                    "display_name": "Zombie Horse",
                    "field": "bk",
                    "height": 1.6,
                    "id": 113,
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "fS"
                                },
                                {
                                    "mask": 16,
                                    "method": "fV"
                                },
                                {
                                    "mask": 32,
                                    "method": "fW"
                                },
                                {
                                    "mask": 8,
                                    "method": "fX"
                                },
                                {
                                    "mask": 4,
                                    "method": "d"
                                }
                            ],
                            "class": "bpa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cp",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cq",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        }
                    ],
                    "name": "zombie_horse",
                    "width": 1.39648
                },
                {
                    "class": "brx",
                    "display_name": "Zombie Horse",
                    "field": "bl",
                    "height": 1.6,
                    "id": 114,
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 2,
                                    "method": "gc"
                                },
                                {
                                    "mask": 16,
                                    "method": "gg"
                                },
                                {
                                    "mask": 32,
                                    "method": "gh"
                                },
                                {
                                    "mask": 8,
                                    "method": "gi"
                                },
                                {
                                    "mask": 4,
                                    "method": "g"
                                }
                            ],
                            "class": "brn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "cb",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "cc",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "zombie_horse",
                    "width": 1.39648
                }
            ],
            "zombie_villager": [
                {
                    "class": "bsk",
                    "display_name": "Zombie Villager",
                    "field": "bl",
                    "height": 1.95,
                    "id": 114,
                    "metadata": [
                        {
                            "class": "bsj",
                            "entity": "zombie"
                        },
                        {
                            "bitfields": [],
                            "class": "bsk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "d",
                                    "index": 20,
                                    "serializer": "VillagerData",
                                    "serializer_id": 16
                                }
                            ]
                        }
                    ],
                    "name": "zombie_villager",
                    "width": 0.6
                },
                {
                    "class": "bux",
                    "display_name": "Zombie Villager",
                    "field": "bm",
                    "height": 1.95,
                    "id": 115,
                    "metadata": [
                        {
                            "class": "buw",
                            "entity": "zombie"
                        },
                        {
                            "bitfields": [],
                            "class": "bux",
                            "data": [
                                {
                                    "default": false,
                                    "field": "c",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "d",
                                    "index": 20,
                                    "serializer": "VillagerData",
                                    "serializer_id": 17
                                }
                            ]
                        }
                    ],
                    "name": "zombie_villager",
                    "width": 0.6
                }
            ],
            "~abstract_ageable": [
                {
                    "class": "bbk",
                    "metadata": [
                        {
                            "class": "bcl",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bbk",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_ageable"
                },
                {
                    "class": "bdo",
                    "metadata": [
                        {
                            "class": "bep",
                            "entity": "~abstract_creature"
                        },
                        {
                            "bitfields": [],
                            "class": "bdo",
                            "data": [
                                {
                                    "default": false,
                                    "field": "bX",
                                    "index": 16,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_ageable"
                }
            ],
            "~abstract_entity": [
                {
                    "class": "bbn",
                    "metadata": [
                        {
                            "bitfields": [
                                {
                                    "class": "bbn",
                                    "mask": 1,
                                    "method": "bH"
                                },
                                {
                                    "class": "bbn",
                                    "mask": 2,
                                    "method": "bL"
                                },
                                {
                                    "class": "bbn",
                                    "mask": 8,
                                    "method": "bR"
                                },
                                {
                                    "class": "bbn",
                                    "mask": 16,
                                    "method": "bS"
                                },
                                {
                                    "class": "bbn",
                                    "mask": 64,
                                    "method": "bW"
                                },
                                {
                                    "class": "bbn",
                                    "mask": 32,
                                    "method": "bX"
                                },
                                {
                                    "class": "bcc",
                                    "mask": 128,
                                    "method": "fc"
                                }
                            ],
                            "class": "bbn",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "Z",
                                    "index": 0,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "aL",
                                    "index": 1,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "aM",
                                    "index": 2,
                                    "serializer": "OptChat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": false,
                                    "field": "aN",
                                    "index": 3,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "aO",
                                    "index": 4,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "aP",
                                    "index": 5,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "ad",
                                    "index": 6,
                                    "serializer": "Pose",
                                    "serializer_id": 18
                                },
                                {
                                    "default": 0,
                                    "field": "aQ",
                                    "index": 7,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_entity"
                },
                {
                    "class": "bdr",
                    "metadata": [
                        {
                            "bitfields": [
                                {
                                    "class": "bdr",
                                    "mask": 1,
                                    "method": "bK"
                                },
                                {
                                    "class": "bdr",
                                    "mask": 2,
                                    "method": "bO"
                                },
                                {
                                    "class": "bdr",
                                    "mask": 8,
                                    "method": "bU"
                                },
                                {
                                    "class": "bdr",
                                    "mask": 16,
                                    "method": "bV"
                                },
                                {
                                    "class": "bdr",
                                    "mask": 64,
                                    "method": "bZ"
                                },
                                {
                                    "class": "bdr",
                                    "mask": 32,
                                    "method": "ca"
                                },
                                {
                                    "class": "beg",
                                    "mask": 128,
                                    "method": "fi"
                                }
                            ],
                            "class": "bdr",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "Z",
                                    "index": 0,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "aL",
                                    "index": 1,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "aM",
                                    "index": 2,
                                    "serializer": "OptChat",
                                    "serializer_id": 6
                                },
                                {
                                    "default": false,
                                    "field": "aN",
                                    "index": 3,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "aO",
                                    "index": 4,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": false,
                                    "field": "aP",
                                    "index": 5,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "field": "ad",
                                    "index": 6,
                                    "serializer": "Pose",
                                    "serializer_id": 19
                                },
                                {
                                    "default": 0,
                                    "field": "aQ",
                                    "index": 7,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_entity"
                }
            ],
            "~abstract_living": [
                {
                    "class": "bcc",
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 4,
                                    "method": "eO"
                                },
                                {
                                    "mask": 1,
                                    "method": "eT"
                                }
                            ],
                            "class": "bcc",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "aB",
                                    "index": 8,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 1.0,
                                    "field": "bK",
                                    "index": 9,
                                    "serializer": "Float",
                                    "serializer_id": 2
                                },
                                {
                                    "default": 0,
                                    "field": "bL",
                                    "index": 10,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "bM",
                                    "index": 11,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": 0,
                                    "field": "bN",
                                    "index": 12,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bO",
                                    "index": 13,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "bP",
                                    "index": 14,
                                    "serializer": "OptBlockPos",
                                    "serializer_id": 10
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_living"
                },
                {
                    "class": "beg",
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 4,
                                    "method": "eU"
                                },
                                {
                                    "mask": 1,
                                    "method": "eZ"
                                }
                            ],
                            "class": "beg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "aB",
                                    "index": 8,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 1.0,
                                    "field": "bK",
                                    "index": 9,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0,
                                    "field": "bL",
                                    "index": 10,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "bM",
                                    "index": 11,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                },
                                {
                                    "default": 0,
                                    "field": "bN",
                                    "index": 12,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bO",
                                    "index": 13,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "bP",
                                    "index": 14,
                                    "serializer": "OptBlockPos",
                                    "serializer_id": 11
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_living"
                }
            ],
            "~abstract_minecart": [
                {
                    "class": "bvt",
                    "metadata": [
                        {
                            "class": "bbn",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bvt",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1,
                                    "field": "d",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 10,
                                    "serializer": "Float",
                                    "serializer_id": 2
                                },
                                {
                                    "field": "f",
                                    "index": 11,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 6,
                                    "field": "ao",
                                    "index": 12,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 13,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_minecart"
                },
                {
                    "class": "byg",
                    "metadata": [
                        {
                            "class": "bdr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "byg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "c",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1,
                                    "field": "d",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 10,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "field": "f",
                                    "index": 11,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 6,
                                    "field": "ao",
                                    "index": 12,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 13,
                                    "serializer": "Boolean",
                                    "serializer_id": 8
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_minecart"
                }
            ],
            "~abstract_tameable": [
                {
                    "class": "bcw",
                    "metadata": [
                        {
                            "class": "bne",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 4,
                                    "method": "q"
                                },
                                {
                                    "mask": 1,
                                    "method": "fJ"
                                }
                            ],
                            "class": "bcw",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bY",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 12
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_tameable"
                },
                {
                    "class": "bfb",
                    "metadata": [
                        {
                            "class": "bpo",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [
                                {
                                    "mask": 4,
                                    "method": "p"
                                },
                                {
                                    "mask": 1,
                                    "method": "fM"
                                }
                            ],
                            "class": "bfb",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bX",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bY",
                                    "index": 18,
                                    "serializer": "OptUUID",
                                    "serializer_id": 13
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_tameable"
                }
            ]
        }
    },
    "items": {
        "item": {
            "acacia_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Acacia Hanging Sign",
                    "field": "pd",
                    "max_stack_size": 16,
                    "numeric_id": 835,
                    "text_id": "acacia_hanging_sign"
                }
            ],
            "bamboo_block": [
                null,
                {
                    "display_name": "Block of Bamboo",
                    "field": "bn",
                    "max_stack_size": 64,
                    "numeric_id": 117,
                    "text_id": "bamboo_block"
                }
            ],
            "bamboo_button": [
                null,
                {
                    "display_name": "Bamboo Button",
                    "field": "lB",
                    "max_stack_size": 64,
                    "numeric_id": 651,
                    "text_id": "bamboo_button"
                }
            ],
            "bamboo_chest_raft": [
                null,
                {
                    "class": "cbs",
                    "display_name": "Bamboo Raft with Chest",
                    "field": "na",
                    "max_stack_size": 1,
                    "numeric_id": 728,
                    "text_id": "bamboo_chest_raft"
                }
            ],
            "bamboo_door": [
                null,
                {
                    "class": "cck",
                    "display_name": "Bamboo Door",
                    "field": "ma",
                    "max_stack_size": 64,
                    "numeric_id": 676,
                    "text_id": "bamboo_door"
                }
            ],
            "bamboo_fence": [
                null,
                {
                    "display_name": "Bamboo Fence",
                    "field": "ew",
                    "max_stack_size": 64,
                    "numeric_id": 282,
                    "text_id": "bamboo_fence"
                }
            ],
            "bamboo_fence_gate": [
                null,
                {
                    "display_name": "Bamboo Fence Gate",
                    "field": "mv",
                    "max_stack_size": 64,
                    "numeric_id": 697,
                    "text_id": "bamboo_fence_gate"
                }
            ],
            "bamboo_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Bamboo Hanging Sign",
                    "field": "pg",
                    "max_stack_size": 16,
                    "numeric_id": 838,
                    "text_id": "bamboo_hanging_sign"
                }
            ],
            "bamboo_mosaic": [
                null,
                {
                    "display_name": "Bamboo Mosaic",
                    "field": "H",
                    "max_stack_size": 64,
                    "numeric_id": 33,
                    "text_id": "bamboo_mosaic"
                }
            ],
            "bamboo_mosaic_slab": [
                null,
                {
                    "display_name": "Bamboo Mosaic Slab",
                    "field": "ds",
                    "max_stack_size": 64,
                    "numeric_id": 226,
                    "text_id": "bamboo_mosaic_slab"
                }
            ],
            "bamboo_mosaic_stairs": [
                null,
                {
                    "display_name": "Bamboo Mosaic Stairs",
                    "field": "fQ",
                    "max_stack_size": 64,
                    "numeric_id": 354,
                    "text_id": "bamboo_mosaic_stairs"
                }
            ],
            "bamboo_planks": [
                null,
                {
                    "display_name": "Bamboo Planks",
                    "field": "E",
                    "max_stack_size": 64,
                    "numeric_id": 30,
                    "text_id": "bamboo_planks"
                }
            ],
            "bamboo_pressure_plate": [
                null,
                {
                    "display_name": "Bamboo Pressure Plate",
                    "field": "lP",
                    "max_stack_size": 64,
                    "numeric_id": 665,
                    "text_id": "bamboo_pressure_plate"
                }
            ],
            "bamboo_raft": [
                null,
                {
                    "class": "cbs",
                    "display_name": "Bamboo Raft",
                    "field": "mZ",
                    "max_stack_size": 1,
                    "numeric_id": 727,
                    "text_id": "bamboo_raft"
                }
            ],
            "bamboo_sign": [
                null,
                {
                    "class": "ces",
                    "display_name": "Bamboo Sign",
                    "field": "oW",
                    "max_stack_size": 16,
                    "numeric_id": 828,
                    "text_id": "bamboo_sign"
                }
            ],
            "bamboo_slab": [
                null,
                {
                    "display_name": "Bamboo Slab",
                    "field": "dr",
                    "max_stack_size": 64,
                    "numeric_id": 225,
                    "text_id": "bamboo_slab"
                }
            ],
            "bamboo_stairs": [
                null,
                {
                    "display_name": "Bamboo Stairs",
                    "field": "fP",
                    "max_stack_size": 64,
                    "numeric_id": 353,
                    "text_id": "bamboo_stairs"
                }
            ],
            "bamboo_trapdoor": [
                null,
                {
                    "display_name": "Bamboo Trapdoor",
                    "field": "ml",
                    "max_stack_size": 64,
                    "numeric_id": 687,
                    "text_id": "bamboo_trapdoor"
                }
            ],
            "birch_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Birch Hanging Sign",
                    "field": "pb",
                    "max_stack_size": 16,
                    "numeric_id": 833,
                    "text_id": "birch_hanging_sign"
                }
            ],
            "camel_spawn_egg": [
                null,
                {
                    "class": "cew",
                    "display_name": "Camel Spawn Egg",
                    "field": "rk",
                    "max_stack_size": 64,
                    "numeric_id": 946,
                    "text_id": "camel_spawn_egg"
                }
            ],
            "chiseled_bookshelf": [
                null,
                {
                    "display_name": "Chiseled Bookshelf",
                    "field": "dS",
                    "max_stack_size": 64,
                    "numeric_id": 252,
                    "text_id": "chiseled_bookshelf"
                }
            ],
            "crimson_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Crimson Hanging Sign",
                    "field": "ph",
                    "max_stack_size": 16,
                    "numeric_id": 839,
                    "text_id": "crimson_hanging_sign"
                }
            ],
            "dark_oak_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Dark Oak Hanging Sign",
                    "field": "pe",
                    "max_stack_size": 16,
                    "numeric_id": 836,
                    "text_id": "dark_oak_hanging_sign"
                }
            ],
            "ender_dragon_spawn_egg": [
                null,
                {
                    "class": "cew",
                    "display_name": "Ender Dragon Spawn Egg",
                    "field": "ru",
                    "max_stack_size": 64,
                    "numeric_id": 956,
                    "text_id": "ender_dragon_spawn_egg"
                }
            ],
            "iron_golem_spawn_egg": [
                null,
                {
                    "class": "cew",
                    "display_name": "Iron Golem Spawn Egg",
                    "field": "rH",
                    "max_stack_size": 64,
                    "numeric_id": 969,
                    "text_id": "iron_golem_spawn_egg"
                }
            ],
            "jungle_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Jungle Hanging Sign",
                    "field": "pc",
                    "max_stack_size": 16,
                    "numeric_id": 834,
                    "text_id": "jungle_hanging_sign"
                }
            ],
            "mangrove_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Mangrove Hanging Sign",
                    "field": "pf",
                    "max_stack_size": 16,
                    "numeric_id": 837,
                    "text_id": "mangrove_hanging_sign"
                }
            ],
            "oak_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Oak Hanging Sign",
                    "field": "oZ",
                    "max_stack_size": 16,
                    "numeric_id": 831,
                    "text_id": "oak_hanging_sign"
                }
            ],
            "piglin_head": [
                null,
                {
                    "class": "cfa",
                    "display_name": "Piglin Head",
                    "field": "sV",
                    "max_stack_size": 64,
                    "numeric_id": 1035,
                    "text_id": "piglin_head"
                }
            ],
            "snow_golem_spawn_egg": [
                null,
                {
                    "class": "cew",
                    "display_name": "Snow Golem Spawn Egg",
                    "field": "sf",
                    "max_stack_size": 64,
                    "numeric_id": 993,
                    "text_id": "snow_golem_spawn_egg"
                }
            ],
            "spawner": [
                {
                    "class": "byx",
                    "display_name": "Spawner",
                    "field": "dV",
                    "max_stack_size": 64,
                    "numeric_id": 255,
                    "text_id": "spawner"
                },
                {
                    "display_name": "Monster Spawner",
                    "field": "ec",
                    "max_stack_size": 64,
                    "numeric_id": 262,
                    "text_id": "spawner"
                }
            ],
            "spruce_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Spruce Hanging Sign",
                    "field": "pa",
                    "max_stack_size": 16,
                    "numeric_id": 832,
                    "text_id": "spruce_hanging_sign"
                }
            ],
            "stripped_bamboo_block": [
                null,
                {
                    "display_name": "Block of Stripped Bamboo",
                    "field": "bG",
                    "max_stack_size": 64,
                    "numeric_id": 136,
                    "text_id": "stripped_bamboo_block"
                }
            ],
            "warped_hanging_sign": [
                null,
                {
                    "class": "cdh",
                    "display_name": "Warped Hanging Sign",
                    "field": "pi",
                    "max_stack_size": 16,
                    "numeric_id": 840,
                    "text_id": "warped_hanging_sign"
                }
            ],
            "wither_spawn_egg": [
                null,
                {
                    "class": "cew",
                    "display_name": "Wither Spawn Egg",
                    "field": "su",
                    "max_stack_size": 64,
                    "numeric_id": 1008,
                    "text_id": "wither_spawn_egg"
                }
            ]
        }
    },
    "language": {
        "advancements": {
            "husbandry.make_a_sign_glow.description": [
                "Make the text of a Sign glow",
                "Make the text of any kind of sign glow"
            ]
        },
        "argument": {
            "gamemode.invalid": [
                null,
                "Unknown gamemode: %s"
            ],
            "resource.invalid_type": [
                null,
                "Element '%s' has wrong type '%s' (expected '%s')"
            ],
            "resource.not_found": [
                null,
                "Can't find element '%s' of type '%s'"
            ],
            "resource_tag.invalid_type": [
                null,
                "Tag '%s' has wrong type '%s' (expected '%s')"
            ],
            "resource_tag.not_found": [
                null,
                "Can't find tag '%s' of type '%s'"
            ]
        },
        "arguments": {
            "nbtpath.too_deep": [
                null,
                "Resulting NBT too deeply nested"
            ],
            "nbtpath.too_large": [
                null,
                "Resulting NBT too large"
            ]
        },
        "attribute": {
            "unknown": [
                "Unknown attribute",
                null
            ]
        },
        "block": {
            "minecraft.acacia_hanging_sign": [
                null,
                "Acacia Hanging Sign"
            ],
            "minecraft.acacia_wall_hanging_sign": [
                null,
                "Acacia Wall Hanging Sign"
            ],
            "minecraft.bamboo_block": [
                null,
                "Block of Bamboo"
            ],
            "minecraft.bamboo_button": [
                null,
                "Bamboo Button"
            ],
            "minecraft.bamboo_door": [
                null,
                "Bamboo Door"
            ],
            "minecraft.bamboo_fence": [
                null,
                "Bamboo Fence"
            ],
            "minecraft.bamboo_fence_gate": [
                null,
                "Bamboo Fence Gate"
            ],
            "minecraft.bamboo_hanging_sign": [
                null,
                "Bamboo Hanging Sign"
            ],
            "minecraft.bamboo_mosaic": [
                null,
                "Bamboo Mosaic"
            ],
            "minecraft.bamboo_mosaic_slab": [
                null,
                "Bamboo Mosaic Slab"
            ],
            "minecraft.bamboo_mosaic_stairs": [
                null,
                "Bamboo Mosaic Stairs"
            ],
            "minecraft.bamboo_planks": [
                null,
                "Bamboo Planks"
            ],
            "minecraft.bamboo_pressure_plate": [
                null,
                "Bamboo Pressure Plate"
            ],
            "minecraft.bamboo_sign": [
                null,
                "Bamboo Sign"
            ],
            "minecraft.bamboo_slab": [
                null,
                "Bamboo Slab"
            ],
            "minecraft.bamboo_stairs": [
                null,
                "Bamboo Stairs"
            ],
            "minecraft.bamboo_trapdoor": [
                null,
                "Bamboo Trapdoor"
            ],
            "minecraft.bamboo_wall_hanging_sign": [
                null,
                "Bamboo Wall Hanging Sign"
            ],
            "minecraft.bamboo_wall_sign": [
                null,
                "Bamboo Wall Sign"
            ],
            "minecraft.birch_hanging_sign": [
                null,
                "Birch Hanging Sign"
            ],
            "minecraft.birch_wall_hanging_sign": [
                null,
                "Birch Wall Hanging Sign"
            ],
            "minecraft.chiseled_bookshelf": [
                null,
                "Chiseled Bookshelf"
            ],
            "minecraft.crimson_hanging_sign": [
                null,
                "Crimson Hanging Sign"
            ],
            "minecraft.crimson_wall_hanging_sign": [
                null,
                "Crimson Wall Hanging Sign"
            ],
            "minecraft.dark_oak_hanging_sign": [
                null,
                "Dark Oak Hanging Sign"
            ],
            "minecraft.dark_oak_wall_hanging_sign": [
                null,
                "Dark Oak Wall Hanging Sign"
            ],
            "minecraft.jungle_hanging_sign": [
                null,
                "Jungle Hanging Sign"
            ],
            "minecraft.jungle_wall_hanging_sign": [
                null,
                "Jungle Wall Hanging Sign"
            ],
            "minecraft.mangrove_hanging_sign": [
                null,
                "Mangrove Hanging Sign"
            ],
            "minecraft.mangrove_wall_hanging_sign": [
                null,
                "Mangrove Wall Hanging Sign"
            ],
            "minecraft.oak_hanging_sign": [
                null,
                "Oak Hanging Sign"
            ],
            "minecraft.oak_wall_hanging_sign": [
                null,
                "Oak Wall Hanging Sign"
            ],
            "minecraft.piglin_head": [
                null,
                "Piglin Head"
            ],
            "minecraft.piglin_wall_head": [
                null,
                "Piglin Wall Head"
            ],
            "minecraft.spawner": [
                "Spawner",
                "Monster Spawner"
            ],
            "minecraft.spawner.desc1": [
                null,
                "Interact with Spawn Egg:"
            ],
            "minecraft.spawner.desc2": [
                null,
                "Sets Mob Type"
            ],
            "minecraft.spruce_hanging_sign": [
                null,
                "Spruce Hanging Sign"
            ],
            "minecraft.spruce_wall_hanging_sign": [
                null,
                "Spruce Wall Hanging Sign"
            ],
            "minecraft.stripped_bamboo_block": [
                null,
                "Block of Stripped Bamboo"
            ],
            "minecraft.warped_hanging_sign": [
                null,
                "Warped Hanging Sign"
            ],
            "minecraft.warped_wall_hanging_sign": [
                null,
                "Warped Wall Hanging Sign"
            ]
        },
        "chat": {
            "deleted_marker": [
                null,
                "This chat message has been deleted by the server."
            ],
            "disabled.chain_broken": [
                null,
                "Chat disabled due to broken chain. Please try reconnecting."
            ],
            "disabled.missingProfileKey": [
                null,
                "Chat disabled due to missing profile public key. Please try reconnecting."
            ],
            "filtered": [
                null,
                "Filtered by the server."
            ],
            "previewInput": [
                "Press [%s] to preview",
                null
            ],
            "tag.filtered": [
                "This message has been filtered by the server.",
                null
            ],
            "tag.modified": [
                "This message has been modified by the server.",
                "Message modified by the server. Original:"
            ],
            "tag.modified.original": [
                "Original text: %s",
                null
            ],
            "tag.not_secure": [
                "This message is not secure, which means that it might have been modified by the server",
                "Unverified message. Cannot be reported."
            ],
            "tag.system": [
                null,
                "Server message. Cannot be reported."
            ],
            "tag.system_single_player": [
                null,
                "Server message."
            ]
        },
        "chatPreview": [
            {
                "warning.check": "Do not notify again for this server",
                "warning.content": "Chat Preview allows the server to see your messages before they are sent to other players. This allows a server to send you a preview of your chat messages with custom modifications and styling applied.\n\nThe Chat Preview behavior can be changed in your Chat Settings. Current setting is: [%s]",
                "warning.title": "This server uses Chat Preview",
                "warning.toast": "This server uses Chat Preview and can see your messages before they are sent to other players. You can turn this off in Chat Settings.",
                "warning.toast.title": "Chat Preview is enabled"
            },
            null
        ],
        "commands": {
            "datapack.enable.failed.no_flags": [
                null,
                "Pack '%s' cannot be enabled, since required flags are not enabled in this world: %s!"
            ],
            "fillbiome.success": [
                null,
                "Biomes set between %s, %s, %s and %s, %s, %s"
            ],
            "fillbiome.success.count": [
                null,
                "%s biome entries set between %s, %s, %s and %s, %s, %s"
            ],
            "fillbiome.toobig": [
                null,
                "Too many blocks in the specified volume (maximum %s, specified %s)"
            ],
            "locate.biome.invalid": [
                "There is no biome with type \"%s\"",
                null
            ],
            "locate.poi.invalid": [
                "There is no point of interest with type \"%s\"",
                null
            ]
        },
        "dataPack": {
            "bundle.description": [
                null,
                "Enables experimental Bundle item"
            ],
            "update_1_20.description": [
                null,
                "New features and content for Minecraft 1.20"
            ],
            "vanilla.name": [
                null,
                "Default"
            ]
        },
        "effect": {
            "effectNotFound": [
                "Unknown effect: %s",
                null
            ]
        },
        "enchantment": {
            "unknown": [
                "Unknown enchantment: %s",
                null
            ]
        },
        "entity": {
            "minecraft.camel": [
                null,
                "Camel"
            ],
            "minecraft.spawner_minecart": [
                "Minecart with Spawner",
                "Minecart with Monster Spawner"
            ],
            "notFound": [
                "Unknown entity: %s",
                null
            ],
            "not_summonable": [
                null,
                "Can't summon entity of type %s"
            ]
        },
        "gamerule": {
            "blockExplosionDropDecay": [
                null,
                "In block interaction explosions, some blocks won't drop their loot"
            ],
            "blockExplosionDropDecay.description": [
                null,
                "Some of the drops from blocks destroyed by explosions caused by block interactions are lost in the explosion."
            ],
            "globalSoundEvents": [
                null,
                "Global sound events"
            ],
            "globalSoundEvents.description": [
                null,
                "When certain game events happen, like a boss spawning, the sound is heard everywhere."
            ],
            "lavaSourceConversion": [
                null,
                "Lava converts to source"
            ],
            "lavaSourceConversion.description": [
                null,
                "When flowing lava is surrounded on two sides by lava sources it converts into a source."
            ],
            "mobExplosionDropDecay": [
                null,
                "In mob explosions, some blocks won't drop their loot"
            ],
            "mobExplosionDropDecay.description": [
                null,
                "Some of the drops from blocks destroyed by explosions caused by mobs are lost in the explosion."
            ],
            "snowAccumulationHeight": [
                null,
                "Snow accumulation height"
            ],
            "snowAccumulationHeight.description": [
                null,
                "When it snows, layers of snow form on the ground up to at most this number of layers."
            ],
            "tntExplosionDropDecay": [
                null,
                "In TNT explosions, some blocks won't drop their loot"
            ],
            "tntExplosionDropDecay.description": [
                null,
                "Some of the drops from blocks destroyed by explosions caused by TNT are lost in the explosion."
            ],
            "waterSourceConversion": [
                null,
                "Water converts to source"
            ],
            "waterSourceConversion.description": [
                null,
                "When flowing water is surrounded on two sides by water sources it converts into a source."
            ]
        },
        "gui": {
            "chatReport.comments": [
                "Comments edit box",
                "Comments"
            ],
            "chatReport.discard.draft": [
                null,
                "Save as Draft"
            ],
            "chatReport.draft.content": [
                null,
                "Would you like to continue editing the existing report or discard it and create a new one?"
            ],
            "chatReport.draft.discard": [
                null,
                "Discard"
            ],
            "chatReport.draft.edit": [
                null,
                "Continue Editing"
            ],
            "chatReport.draft.quittotitle.content": [
                null,
                "Would you like to continue editing it or discard it?"
            ],
            "chatReport.draft.quittotitle.title": [
                null,
                "You have a draft chat report that will be lost if you quit"
            ],
            "chatReport.draft.title": [
                null,
                "Edit draft chat report?"
            ],
            "chatSelection.fold": [
                "%s unrelated messages hidden",
                "%s message(s) hidden"
            ],
            "chatSelection.join": [
                null,
                "%s joined the chat"
            ]
        },
        "hanging_sign": [
            null,
            {
                "edit": "Edit Hanging Sign Message"
            }
        ],
        "item": {
            "disabled": [
                null,
                "Disabled item"
            ],
            "minecraft.bamboo_chest_raft": [
                null,
                "Bamboo Raft with Chest"
            ],
            "minecraft.bamboo_raft": [
                null,
                "Bamboo Raft"
            ],
            "minecraft.camel_spawn_egg": [
                null,
                "Camel Spawn Egg"
            ],
            "minecraft.ender_dragon_spawn_egg": [
                null,
                "Ender Dragon Spawn Egg"
            ],
            "minecraft.iron_golem_spawn_egg": [
                null,
                "Iron Golem Spawn Egg"
            ],
            "minecraft.snow_golem_spawn_egg": [
                null,
                "Snow Golem Spawn Egg"
            ],
            "minecraft.wither_spawn_egg": [
                null,
                "Wither Spawn Egg"
            ]
        },
        "itemGroup": {
            "brewing": [
                "Brewing",
                null
            ],
            "coloredBlocks": [
                null,
                "Colored Blocks"
            ],
            "consumables": [
                null,
                "Consumables"
            ],
            "crafting": [
                null,
                "Crafting"
            ],
            "decorations": [
                "Decoration Blocks",
                null
            ],
            "food": [
                "Foodstuffs",
                null
            ],
            "foodAndDrink": [
                null,
                "Food & Drinks"
            ],
            "functional": [
                null,
                "Functional Blocks"
            ],
            "ingredients": [
                null,
                "Ingredients"
            ],
            "materials": [
                "Materials",
                null
            ],
            "misc": [
                "Miscellaneous",
                null
            ],
            "natural": [
                null,
                "Natural Blocks"
            ],
            "op": [
                null,
                "Operator Utilities"
            ],
            "redstone": [
                "Redstone",
                "Redstone Blocks"
            ],
            "spawnEggs": [
                null,
                "Spawn Eggs"
            ],
            "tools": [
                "Tools",
                "Tools & Utilities"
            ],
            "transportation": [
                "Transportation",
                null
            ]
        },
        "lanServer": {
            "port": [
                null,
                "Port Number"
            ],
            "port.invalid": [
                null,
                "Not a valid port.\nLeave the edit box empty or enter a number between 1024 and 65535."
            ],
            "port.invalid.new": [
                null,
                "Not a valid port.\nLeave the edit box empty or enter a number between %s and %s."
            ],
            "port.unavailable": [
                null,
                "Port not available.\nLeave the edit box empty or enter a different number between 1024 and 65535."
            ],
            "port.unavailable.new": [
                null,
                "Port not available.\nLeave the edit box empty or enter a different number between %s and %s."
            ]
        },
        "mco": [
            null,
            {
                "account.privacy.info": "Read more about Mojang and privacy laws",
                "account.privacyinfo": "Mojang implements certain procedures to help protect children and their privacy including complying with the Children\u2019s Online Privacy Protection Act (COPPA) and General Data Protection Regulation (GDPR).\n\nYou may need to obtain parental consent before accessing your Realms account.\n\nIf you have an older Minecraft account (you log in with your username), you need to migrate the account to a Mojang account in order to access Realms.",
                "account.update": "Update account",
                "activity.noactivity": "No activity for the past %s days",
                "activity.title": "Player activity",
                "backup.button.download": "Download latest",
                "backup.button.reset": "Reset world",
                "backup.button.restore": "Restore",
                "backup.button.upload": "Upload world",
                "backup.changes.tooltip": "Changes",
                "backup.generate.world": "Generate world",
                "backup.nobackups": "This realm doesn't have any backups currently.",
                "backup.restoring": "Restoring your realm",
                "brokenworld.download": "Download",
                "brokenworld.downloaded": "Downloaded",
                "brokenworld.message.line1": "Please reset or select another world.",
                "brokenworld.message.line2": "You can also choose to download the world to singleplayer.",
                "brokenworld.minigame.title": "This minigame is no longer supported",
                "brokenworld.nonowner.error": "Please wait for the realm owner to reset the world",
                "brokenworld.nonowner.title": "World is out of date",
                "brokenworld.play": "Play",
                "brokenworld.reset": "Reset",
                "brokenworld.title": "Your current world is no longer supported",
                "client.incompatible.msg.line1": "Your client is not compatible with Realms.",
                "client.incompatible.msg.line2": "Please use the most recent version of Minecraft.",
                "client.incompatible.msg.line3": "Realms is not compatible with snapshot versions.",
                "client.incompatible.title": "Client incompatible!",
                "configure.current.minigame": "Current",
                "configure.world.activityfeed.disabled": "Player feed temporarily disabled",
                "configure.world.backup": "World backups",
                "configure.world.buttons.activity": "Player activity",
                "configure.world.buttons.close": "Close realm",
                "configure.world.buttons.delete": "Delete",
                "configure.world.buttons.done": "Done",
                "configure.world.buttons.edit": "Settings",
                "configure.world.buttons.invite": "Invite player",
                "configure.world.buttons.moreoptions": "More options",
                "configure.world.buttons.open": "Open realm",
                "configure.world.buttons.options": "World options",
                "configure.world.buttons.players": "Players",
                "configure.world.buttons.resetworld": "Reset world",
                "configure.world.buttons.settings": "Settings",
                "configure.world.buttons.subscription": "Subscription",
                "configure.world.buttons.switchminigame": "Switch minigame",
                "configure.world.close.question.line1": "Your realm will become unavailable.",
                "configure.world.close.question.line2": "Are you sure you want to continue?",
                "configure.world.closing": "Closing the realm...",
                "configure.world.commandBlocks": "Command blocks",
                "configure.world.delete.button": "Delete realm",
                "configure.world.delete.question.line1": "Your realm will be permanently deleted",
                "configure.world.delete.question.line2": "Are you sure you want to continue?",
                "configure.world.description": "Realm description",
                "configure.world.edit.slot.name": "World name",
                "configure.world.edit.subscreen.adventuremap": "Some settings are disabled since your current world is an adventure",
                "configure.world.edit.subscreen.experience": "Some settings are disabled since your current world is an experience",
                "configure.world.edit.subscreen.inspiration": "Some settings are disabled since your current world is an inspiration",
                "configure.world.forceGameMode": "Force game mode",
                "configure.world.invite.narration": "You have %s new invites",
                "configure.world.invite.profile.name": "Name",
                "configure.world.invited": "Invited",
                "configure.world.invites.normal.tooltip": "Normal user",
                "configure.world.invites.ops.tooltip": "Operator",
                "configure.world.invites.remove.tooltip": "Remove",
                "configure.world.leave.question.line1": "If you leave this realm you won't see it unless you are invited again",
                "configure.world.leave.question.line2": "Are you sure you want to continue?",
                "configure.world.location": "Location",
                "configure.world.name": "Realm name",
                "configure.world.opening": "Opening the realm...",
                "configure.world.players.error": "A player with the provided name does not exist",
                "configure.world.players.title": "Players",
                "configure.world.pvp": "PVP",
                "configure.world.reset.question.line1": "Your world will be regenerated and your current world will be lost",
                "configure.world.reset.question.line2": "Are you sure you want to continue?",
                "configure.world.resourcepack.question.line1": "You need a custom resource pack to play on this realm",
                "configure.world.resourcepack.question.line2": "Do you want to download it and play?",
                "configure.world.restore.download.question.line1": "The world will be downloaded and added to your single player worlds.",
                "configure.world.restore.download.question.line2": "Do you want to continue?",
                "configure.world.restore.question.line1": "Your world will be restored to date '%s' (%s)",
                "configure.world.restore.question.line2": "Are you sure you want to continue?",
                "configure.world.settings.title": "Settings",
                "configure.world.slot": "World %s",
                "configure.world.slot.empty": "Empty",
                "configure.world.slot.switch.question.line1": "Your realm will be switched to another world",
                "configure.world.slot.switch.question.line2": "Are you sure you want to continue?",
                "configure.world.slot.tooltip": "Switch to world",
                "configure.world.slot.tooltip.active": "Join",
                "configure.world.slot.tooltip.minigame": "Switch to minigame",
                "configure.world.spawnAnimals": "Spawn animals",
                "configure.world.spawnMonsters": "Spawn monsters",
                "configure.world.spawnNPCs": "Spawn NPCs",
                "configure.world.spawnProtection": "Spawn protection",
                "configure.world.spawn_toggle.message": "Turning this option off will REMOVE ALL existing entities of that type",
                "configure.world.spawn_toggle.message.npc": "Turning this option off will REMOVE ALL existing entities of that type, like Villagers",
                "configure.world.spawn_toggle.title": "Warning!",
                "configure.world.status": "Status",
                "configure.world.subscription.day": "day",
                "configure.world.subscription.days": "days",
                "configure.world.subscription.expired": "Expired",
                "configure.world.subscription.extend": "Extend subscription",
                "configure.world.subscription.less_than_a_day": "Less than a day",
                "configure.world.subscription.month": "month",
                "configure.world.subscription.months": "months",
                "configure.world.subscription.recurring.daysleft": "Renewed automatically in",
                "configure.world.subscription.start": "Start date",
                "configure.world.subscription.timeleft": "Time left",
                "configure.world.subscription.title": "Your subscription",
                "configure.world.subscription.unknown": "Unknown",
                "configure.world.switch.slot": "Create world",
                "configure.world.switch.slot.subtitle": "This world is empty, choose how to create your world",
                "configure.world.title": "Configure realm:",
                "configure.world.uninvite.question": "Are you sure that you want to uninvite",
                "configure.worlds.title": "Worlds",
                "connect.authorizing": "Logging in...",
                "connect.connecting": "Connecting to the realm...",
                "connect.failed": "Failed to connect to the realm",
                "connect.success": "Done",
                "create.world": "Create",
                "create.world.error": "You must enter a name!",
                "create.world.reset.title": "Creating world...",
                "create.world.skip": "Skip",
                "create.world.subtitle": "Optionally, select what world to put on your new realm",
                "create.world.wait": "Creating the realm...",
                "download.cancelled": "Download cancelled",
                "download.confirmation.line1": "The world you are going to download is larger than %s",
                "download.confirmation.line2": "You won't be able to upload this world to your realm again",
                "download.done": "Download done",
                "download.downloading": "Downloading",
                "download.extracting": "Extracting",
                "download.failed": "Download failed",
                "download.preparing": "Preparing download",
                "download.title": "Downloading latest world",
                "error.invalid.session.message": "Please try restarting Minecraft",
                "error.invalid.session.title": "Invalid session",
                "errorMessage.6001": "Client outdated",
                "errorMessage.6002": "Terms of service not accepted",
                "errorMessage.6003": "Download limit reached",
                "errorMessage.6004": "Upload limit reached",
                "errorMessage.connectionFailure": "An error occurred, please try again later.",
                "errorMessage.serviceBusy": "Realms is busy at the moment.\nPlease try connecting to your Realm again in a couple of minutes.",
                "gui.button": "Button",
                "gui.ok": "Ok",
                "invites.button.accept": "Accept",
                "invites.button.reject": "Reject",
                "invites.nopending": "No pending invites!",
                "invites.pending": "New invites!",
                "invites.title": "Pending Invites",
                "minigame.world.changeButton": "Select another minigame",
                "minigame.world.info.line1": "This will temporarily replace your world with a minigame!",
                "minigame.world.info.line2": "You can later return to your original world without losing anything.",
                "minigame.world.noSelection": "Please make a selection",
                "minigame.world.restore": "Ending minigame...",
                "minigame.world.restore.question.line1": "The minigame will end and your realm will be restored.",
                "minigame.world.restore.question.line2": "Are you sure you want to continue?",
                "minigame.world.selected": "Selected minigame:",
                "minigame.world.slot.screen.title": "Switching world...",
                "minigame.world.startButton": "Switch",
                "minigame.world.starting.screen.title": "Starting minigame...",
                "minigame.world.stopButton": "End minigame",
                "minigame.world.switch.new": "Select another minigame?",
                "minigame.world.switch.title": "Switch minigame",
                "minigame.world.title": "Switch realm to minigame",
                "news": "Realms news",
                "reset.world.adventure": "Adventures",
                "reset.world.experience": "Experiences",
                "reset.world.generate": "New world",
                "reset.world.inspiration": "Inspiration",
                "reset.world.resetting.screen.title": "Resetting world...",
                "reset.world.seed": "Seed (Optional)",
                "reset.world.template": "World templates",
                "reset.world.title": "Reset world",
                "reset.world.upload": "Upload world",
                "reset.world.warning": "This will replace the current world of your realm",
                "selectServer.buy": "Buy a realm!",
                "selectServer.close": "Close",
                "selectServer.closed": "Closed realm",
                "selectServer.closeserver": "Close realm",
                "selectServer.configure": "Configure",
                "selectServer.configureRealm": "Configure realm",
                "selectServer.create": "Create realm",
                "selectServer.expired": "Expired realm",
                "selectServer.expiredList": "Your subscription has expired",
                "selectServer.expiredRenew": "Renew",
                "selectServer.expiredSubscribe": "Subscribe",
                "selectServer.expiredTrial": "Your trial has ended",
                "selectServer.expires.day": "Expires in a day",
                "selectServer.expires.days": "Expires in %s days",
                "selectServer.expires.soon": "Expires soon",
                "selectServer.leave": "Leave realm",
                "selectServer.mapOnlySupportedForVersion": "This map is unsupported in %s",
                "selectServer.minigame": "Minigame:",
                "selectServer.minigameNotSupportedInVersion": "Can't play this minigame in %s",
                "selectServer.note": "Note:",
                "selectServer.open": "Open realm",
                "selectServer.openserver": "Open realm",
                "selectServer.play": "Play",
                "selectServer.popup": "Realms is a safe, simple way to enjoy an online Minecraft world with up to ten friends at a time.   It supports loads of minigames and plenty of custom worlds! Only the owner of the realm needs to pay.",
                "selectServer.purchase": "Add Realm",
                "selectServer.trial": "Get a trial!",
                "selectServer.uninitialized": "Click to start your new realm!",
                "template.button.publisher": "Publisher",
                "template.button.select": "Select",
                "template.button.trailer": "Trailer",
                "template.default.name": "World template",
                "template.info.tooltip": "Publisher website",
                "template.name": "Template",
                "template.select.failure": "We couldn't retrieve the list of content for this category.\nPlease check your internet connection, or try again later.",
                "template.select.narrate.authors": "Authors: %s",
                "template.select.narrate.version": "version %s",
                "template.select.none": "Oops, it looks like this content category is currently empty.\nPlease check back later for new content, or if you're a creator,\n%s.",
                "template.select.none.linkTitle": "consider submitting something yourself",
                "template.title": "World templates",
                "template.title.minigame": "Minigames",
                "template.trailer.tooltip": "Map trailer",
                "terms.buttons.agree": "Agree",
                "terms.buttons.disagree": "Don't agree",
                "terms.sentence.1": "I agree to the Minecraft Realms",
                "terms.sentence.2": "Terms of Service",
                "terms.title": "Realms Terms of Service",
                "trial.message.line1": "Want to get your own realm?",
                "trial.message.line2": "Click here for more info!",
                "upload.button.name": "Upload",
                "upload.cancelled": "Upload cancelled",
                "upload.close.failure": "Could not close your realm, please try again later",
                "upload.done": "Upload done",
                "upload.failed": "Upload failed! (%s)",
                "upload.hardcore": "Hardcore worlds can't be uploaded!",
                "upload.preparing": "Preparing your world",
                "upload.select.world.none": "No singleplayer worlds found!",
                "upload.select.world.subtitle": "Please select a singleplayer world to upload",
                "upload.select.world.title": "Upload world",
                "upload.size.failure.line1": "'%s' is too big!",
                "upload.size.failure.line2": "It is %s. The maximum allowed size is %s.",
                "upload.uploading": "Uploading '%s'",
                "upload.verifying": "Verifying your world"
            }
        ],
        "multiplayer": {
            "disconnect.missing_public_key": [
                "Missing profile public key.\nThis server requires secure profiles.",
                null
            ]
        },
        "options": {
            "accessibility.panorama_speed": [
                null,
                "Panorama Scroll Speed"
            ],
            "chatPreview": [
                "Chat Preview",
                null
            ],
            "chatPreview.confirm": [
                "When Sending",
                null
            ],
            "chatPreview.live": [
                "While Typing",
                null
            ],
            "chatPreview.tooltip.confirm": [
                "If a server uses Chat Previews: A chat preview is only generated when attempting to send a message that does not have a preview or is waiting for a preview.\nSending the message requires confirmation.",
                null
            ],
            "chatPreview.tooltip.live": [
                "If a server uses Chat Previews: Any modifications applied to your chat messages by a server will be dynamically sent for previewing as the chat message is typed.",
                null
            ],
            "chatPreview.tooltip.off": [
                "Any modifications applied to your chat messages by a server will not be previewed and will be treated as insecure.",
                null
            ],
            "operatorItemsTab": [
                null,
                "Operator Items Tab"
            ],
            "telemetry": [
                null,
                "Telemetry Data"
            ],
            "telemetry.button": [
                null,
                "Data Collection"
            ],
            "telemetry.button.tooltip": [
                null,
                "\"%s\" includes only the required data.\n\"%s\" includes optional, as well as the required data."
            ],
            "telemetry.state.all": [
                null,
                "All"
            ],
            "telemetry.state.minimal": [
                null,
                "Minimal"
            ],
            "telemetry.state.none": [
                null,
                "None"
            ]
        },
        "pack": {
            "source.feature": [
                null,
                "feature"
            ]
        },
        "resourcePack": {
            "programmer_art.name": [
                null,
                "Programmer Art"
            ],
            "vanilla.description": [
                "The default resources for Minecraft",
                "The default look and feel of Minecraft"
            ],
            "vanilla.name": [
                null,
                "Default"
            ]
        },
        "selectWorld": {
            "backupEraseCache": [
                "Erase cached data",
                "Erase Cached Data"
            ],
            "experimental": [
                null,
                "Experimental"
            ],
            "experimental.details": [
                null,
                "Details"
            ],
            "experimental.details.entry": [
                null,
                "Required experimental features: %s"
            ],
            "experimental.details.title": [
                null,
                "Experimental feature requirements"
            ],
            "experimental.message": [
                null,
                "Be careful!\nSome of the selected packs require features that are still under development. Your world might crash, break or not work with future updates."
            ],
            "experimental.title": [
                null,
                "Experimental Features Warning"
            ],
            "import_worldgen_settings.deprecated.question": [
                "Some features used are deprecated and will stop working in the future. Do you wish to proceed?",
                null
            ],
            "import_worldgen_settings.deprecated.title": [
                "Warning! These settings are using deprecated features",
                null
            ],
            "import_worldgen_settings.experimental.question": [
                "These settings are experimental and could one day stop working. Do you wish to proceed?",
                null
            ],
            "import_worldgen_settings.experimental.title": [
                "Warning! These settings are using experimental features",
                null
            ],
            "warning.deprecated.question": [
                null,
                "Some features used are deprecated and will stop working in the future. Do you wish to proceed?"
            ],
            "warning.deprecated.title": [
                null,
                "Warning! These settings are using deprecated features"
            ],
            "warning.experimental.question": [
                null,
                "These settings are experimental and could one day stop working. Do you wish to proceed?"
            ],
            "warning.experimental.title": [
                null,
                "Warning! These settings are using experimental features"
            ]
        },
        "structure_block": {
            "mode_info.data": [
                "Data mode - Game Logic Marker",
                "Data Mode - Game Logic Marker"
            ],
            "mode_info.load": [
                "Load mode - Load from File",
                "Load Mode - Load from File"
            ]
        },
        "subtitles": {
            "chiseled_bookshelf.insert": [
                null,
                "Book placed"
            ],
            "chiseled_bookshelf.insert_enchanted": [
                null,
                "Enchanted book placed"
            ],
            "chiseled_bookshelf.take": [
                null,
                "Book taken"
            ],
            "chiseled_bookshelf.take_enchanted": [
                null,
                "Enchanted book taken"
            ],
            "entity.camel.ambient": [
                null,
                "Camel grunts"
            ],
            "entity.camel.dash": [
                null,
                "Camel yeets"
            ],
            "entity.camel.dash_ready": [
                null,
                "Camel recovers"
            ],
            "entity.camel.death": [
                null,
                "Camel dies"
            ],
            "entity.camel.eat": [
                null,
                "Camel eats"
            ],
            "entity.camel.hurt": [
                null,
                "Camel hurts"
            ],
            "entity.camel.saddle": [
                null,
                "Saddle equips"
            ],
            "entity.camel.sit": [
                null,
                "Camel sits down"
            ],
            "entity.camel.stand": [
                null,
                "Camel stands up"
            ],
            "entity.camel.step": [
                null,
                "Camel steps"
            ],
            "entity.camel.step_sand": [
                null,
                "Camel sands"
            ],
            "entity.enderman.scream": [
                null,
                "Enderman screams"
            ],
            "entity.tadpole.grow_up": [
                null,
                "Tadpole grows up"
            ]
        },
        "telemetry": [
            null,
            {
                "event.optional": "%s (Optional)",
                "event.performance_metrics.description": "Knowing the overall performance profile of Minecraft helps us tune and optimize the game for a wide range of machine specifications and operating systems. \nGame version is included to help us compare the performance profile for new versions of Minecraft.",
                "event.performance_metrics.title": "Performance Metrics",
                "event.required": "%s (Required)",
                "event.world_load_times.description": "It\u2019s important for us to understand how long it takes to join a world, and how that changes over time. For example, when we add new features or do larger technical changes, we need to see what impact that had on load times.",
                "event.world_load_times.title": "World Load Times",
                "event.world_loaded.description": "Knowing how players play Minecraft (such as Game Mode, client or server modded, and game version) allows us to focus game updates to improve the areas that players care about most.\nThe World Loaded event is paired with the World Unloaded event to calculate how long the play session has lasted.",
                "event.world_loaded.title": "World Loaded",
                "event.world_unloaded.description": "This event is paired with the World Loaded event to calculate how long the world session has lasted.\nThe duration (in seconds and ticks) is measured when a world session has ended (quitting to title, disconnecting from a server).",
                "event.world_unloaded.title": "World Unloaded",
                "property.client_id.title": "Client ID",
                "property.client_modded.title": "Client Modded",
                "property.dedicated_memory_kb.title": "Dedicated Memory (kB)",
                "property.event_timestamp_utc.title": "Event Timestamp (UTC)",
                "property.frame_rate_samples.title": "Frame Rate Samples (FPS)",
                "property.game_mode.title": "Game Mode",
                "property.game_version.title": "Game Version",
                "property.minecraft_session_id.title": "Minecraft Session ID",
                "property.new_world.title": "New World",
                "property.number_of_samples.title": "Sample Count",
                "property.operating_system.title": "Operating System",
                "property.opt_in.title": "Opt-In",
                "property.platform.title": "Platform",
                "property.render_distance.title": "Render Distance",
                "property.render_time_samples.title": "Render Time Samples",
                "property.seconds_since_load.title": "Time Since Load (Seconds)",
                "property.server_modded.title": "Server Modded",
                "property.server_type.title": "Server Type",
                "property.ticks_since_load.title": "Time Since Load (Ticks)",
                "property.used_memory_samples.title": "Used Random Access Memory",
                "property.user_id.title": "User ID",
                "property.world_load_time_ms.title": "World Load Time (Milliseconds)",
                "property.world_session_id.title": "World Session ID"
            }
        ],
        "telemetry_info": [
            null,
            {
                "button.give_feedback": "Give Feedback",
                "button.show_data": "Open My Data",
                "property_title": "Included Data",
                "screen.description": "Collecting this data helps us improve Minecraft by guiding us in directions that are relevant to our players.\nYou can also send in additional feedback to help us keep improving Minecraft.",
                "screen.title": "Telemetry Data Collection"
            }
        ]
    },
    "packets": {
        "packet": {
            "LOGIN_SERVERBOUND_00": [
                {
                    "class": "zx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "16",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().b.toEpochMilli()",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "b.get().c.getEncoded().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get().c.getEncoded()",
                                    "operation": "write",
                                    "type": "byte[]"
                                },
                                {
                                    "field": "b.get().d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get().d",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c.isPresent()",
                            "instructions": [
                                {
                                    "field": "c.get()",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "abb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "16",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "LOGIN_SERVERBOUND_01": [
                {
                    "class": "zy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "a.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "b.isLeft()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isLeft()",
                            "instructions": [
                                {
                                    "field": "b.left().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.left()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "b.right().b",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "b.right().c.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.right().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "abc.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "a.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "PLAY_CLIENTBOUND_0C": [
                {
                    "class": "ts.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ux.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "tt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "su.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0E": [
                {
                    "class": "tu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "rs.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "uz$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lsd;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "uz$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0F": [
                {
                    "class": "tv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tv$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lqx;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "tv$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "va.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "tw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cdt",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "tx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cax",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "ty.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "tz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ve.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "iw.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "ua.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "hm.Y.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "ub.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "uc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "ud.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "ue.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a.b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "uf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "ug.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "aoc.b(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "uh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "(float)a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)b",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "ami.b(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "ami.b(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "ami.b(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gt",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "ui.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "uj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "uk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "ul.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "um.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vr$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "iw.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "uo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "un$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "hm.ab.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "up.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "iw.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "io",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "uq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "hm.aa.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lqx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "im",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "ur.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ace",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hq.a.encode(f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "ut.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cgu.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aba",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hn.c.encode(f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dur",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "uu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "drd",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ciu",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "uv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cfv",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wa$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "uw$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wa$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "uw$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wa$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "uw$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "ux.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "uy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.r.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "uz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "hm.ah.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "va.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "vb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "vc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "vd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "td$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == sv$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "ve.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a.a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.a != null",
                            "instructions": [
                                {
                                    "field": "a.a.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.a.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "a.b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b.b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "vf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a.c.a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.c.a != null",
                            "instructions": [
                                {
                                    "field": "a.c.a.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.c.a.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "a.c.b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.d.b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.d.b",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "a.e.b.b()",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "((this.a.e.b.a()) ? this.a.e.b.c() : null)",
                            "var": "var2"
                        },
                        {
                            "field": "var2 != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "var2 != null",
                            "instructions": [
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "a.e.c.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "a.e.d",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "a.e.e.c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.e.e.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "itv.b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "a.f.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.f.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.f.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "a.g.e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a.g.e == rt$a.c",
                            "instructions": [
                                {
                                    "field": "a.g.d.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.g.d.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "vg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wn$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((wn$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lsd;Lwn$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "wn$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vj$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "a",
                                    "method": "a(Lqx;Lvj$b;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "vj$a",
                                    "type": "abstract"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "wp$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "vl$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "caq.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((als$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == wq$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "acf",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "bxw.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aka$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "abb",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == vm$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "abb",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "vn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "vo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "hm.U.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "vp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cjt.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cgu.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i.isPresent()",
                            "instructions": [
                                {
                                    "field": "i.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "i.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "vr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(long)((cmt.i(d[var2]) << 0xc) | c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(long)((cjt.i(d[var2]) << 0xc) | c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.get()",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "vw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "wc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((abq$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "abp.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lsd;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "abo",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "wh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bdw)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cdt)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "wl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bbs)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cax)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "xt.b(h)",
                            "instructions": [
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((xt$b)k.orElseThrow(xt::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "xt.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != acv$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "wq.b(h)",
                            "instructions": [
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((wq$b)k.orElseThrow(wq::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "wq.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != abq$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ya.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iw.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "iw.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "hm.S.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "hm.S.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acf, ac$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ah>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acf, ae>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "yj$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iw.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bfh",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_67": [
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<abb, af$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ak>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "abb",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<abb, ah>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, al>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_68": [
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xg$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "hm.ak.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bdb",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "iw.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bdk$a.a.encode(i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_69": [
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "hm.U.getId(f)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "j != null",
                            "instructions": [
                                {
                                    "field": "bbg$a.a.encode(j)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cgo",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "iw.t.b(itv.X_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.X_()",
                                    "method": "a(Lsd;Lcgo;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cgq",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6A": [
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cdp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "hm.aj.b(itv.U_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.U_()",
                                    "method": "a(Lqx;Lcdp;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cdr",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ace, amu$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<acf, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6B": [
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<aba, alc$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<abb, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                null
            ],
            "PLAY_SERVERBOUND_03": [
                {
                    "class": "xr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a.a.c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.a.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "itv.b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "a.b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.b.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.b.get().a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "a.b.get().b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.b.get().b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_04": [
                {
                    "class": "xs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "dv$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "length": "16",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f.a.c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.a.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "itv.b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f.b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "f.b.isPresent()",
                            "instructions": [
                                {
                                    "field": "f.b.get().a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "f.b.get().b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.b.get().b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ds$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "length": "16",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.b.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.b",
                            "length": "20",
                            "operation": "write",
                            "type": "bitset"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_05": [
                {
                    "class": "xt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f.a.c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.a.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "itv.b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f.b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "f.b.isPresent()",
                            "instructions": [
                                {
                                    "field": "f.b.get().a",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "field": "f.b.get().b.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.b.get().b.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "e.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.b",
                            "length": "20",
                            "operation": "write",
                            "type": "bitset"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_06": [
                {
                    "class": "xu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_07": [
                {
                    "class": "xv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "za.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_08": [
                {
                    "class": "xw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_09": [
                {
                    "class": "xx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zc.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0A": [
                {
                    "class": "xy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zd.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cdt>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0B": [
                {
                    "class": "xz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cax>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ze.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0C": [
                {
                    "class": "ya.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0D": [
                {
                    "class": "yb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zg.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0E": [
                {
                    "class": "yc.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zh.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0F": [
                {
                    "class": "yd.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zi.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lsd;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "zi$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_10": [
                {
                    "class": "ye.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lqx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "ye$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_11": [
                {
                    "class": "yf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_12": [
                {
                    "class": "yg.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_13": [
                {
                    "class": "yh.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zm$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_14": [
                {
                    "class": "yi$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zm$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_15": [
                {
                    "class": "yi$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zm$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_16": [
                {
                    "class": "yi$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zm$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_17": [
                {
                    "class": "yi$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_18": [
                {
                    "class": "yj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_19": [
                {
                    "class": "yk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1A": [
                {
                    "class": "yl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1B": [
                {
                    "class": "ym.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1C": [
                {
                    "class": "yn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1D": [
                {
                    "class": "yo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1E": [
                {
                    "class": "yp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1F": [
                {
                    "class": "yq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_20": [
                {
                    "class": "yr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a.a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.b.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "a.b.c.getEncoded().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.c.getEncoded()",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "a.b.d.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a.b.d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "recipes": {
        "blue_ice": [
            [
                {
                    "id": "minecraft:blue_ice",
                    "makes": {
                        "count": 1,
                        "name": "blue_ice",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "packed_ice",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            },
                            {
                                "name": "packed_ice",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:blue_ice",
                    "ingredients": [
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        },
                        {
                            "name": "packed_ice",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "blue_ice",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ],
        "hay_block": [
            [
                {
                    "id": "minecraft:hay_block",
                    "makes": {
                        "count": 1,
                        "name": "hay_block",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "wheat",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            },
                            {
                                "name": "wheat",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:hay_block",
                    "ingredients": [
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        },
                        {
                            "name": "wheat",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "hay_block",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ],
        "melon": [
            [
                {
                    "id": "minecraft:melon",
                    "makes": {
                        "count": 1,
                        "name": "melon",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "MMM",
                            "MMM",
                            "MMM"
                        ],
                        "subs": {
                            "M": {
                                "name": "melon_slice",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            },
                            {
                                "name": "melon_slice",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:melon",
                    "ingredients": [
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        },
                        {
                            "name": "melon_slice",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "melon",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ],
        "music_disc_5": [
            [
                {
                    "id": "minecraft:music_disc_5",
                    "makes": {
                        "count": 1,
                        "name": "music_disc_5",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "SSS",
                            "SSS",
                            "SSS"
                        ],
                        "subs": {
                            "S": {
                                "name": "disc_fragment_5",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            },
                            {
                                "name": "disc_fragment_5",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:music_disc_5",
                    "ingredients": [
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        },
                        {
                            "name": "disc_fragment_5",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "music_disc_5",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ],
        "nether_wart_block": [
            [
                {
                    "id": "minecraft:nether_wart_block",
                    "makes": {
                        "count": 1,
                        "name": "nether_wart_block",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "nether_wart",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            },
                            {
                                "name": "nether_wart",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:nether_wart_block",
                    "ingredients": [
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        },
                        {
                            "name": "nether_wart",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "nether_wart_block",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ],
        "prismarine_bricks": [
            [
                {
                    "id": "minecraft:prismarine_bricks",
                    "makes": {
                        "count": 1,
                        "name": "prismarine_bricks",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "SSS",
                            "SSS",
                            "SSS"
                        ],
                        "subs": {
                            "S": {
                                "name": "prismarine_shard",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            },
                            {
                                "name": "prismarine_shard",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:prismarine_bricks",
                    "ingredients": [
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        },
                        {
                            "name": "prismarine_shard",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "prismarine_bricks",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ]
        ]
    },
    "sounds": {
        "block.bamboo_wood.break": [
            null,
            {
                "field": "aT",
                "id": 97,
                "name": "block.bamboo_wood.break",
                "sounds": [
                    {
                        "hash": "1fff9fe2769f81cbc68d1e4e44b8b69002d31cf6",
                        "name": "block/bamboo_wood/break1",
                        "volume": 0.9
                    },
                    {
                        "hash": "e6f6b746ca5bae7bac07bc0607c1244417cab846",
                        "name": "block/bamboo_wood/break2",
                        "volume": 0.9
                    },
                    {
                        "hash": "7ee1ddfd1f42fd5b06d8cbdb9213c72e575b2594",
                        "name": "block/bamboo_wood/break3",
                        "volume": 0.9
                    },
                    {
                        "hash": "5d8ce0540e1958840cb4d753443f8221d1bdaf1a",
                        "name": "block/bamboo_wood/break4",
                        "volume": 0.9
                    },
                    {
                        "hash": "51646cd9bdfc091ec589875f1da8786c85ebff79",
                        "name": "block/bamboo_wood/break5",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.bamboo_wood.fall": [
            null,
            {
                "field": "aU",
                "id": 98,
                "name": "block.bamboo_wood.fall",
                "sounds": [
                    {
                        "hash": "21c7c1403ddc62ebf24deca09f92c4b317c88182",
                        "name": "block/bamboo_wood/step1"
                    },
                    {
                        "hash": "de2a2d344850841901eb41880afc9604c65e819d",
                        "name": "block/bamboo_wood/step2"
                    },
                    {
                        "hash": "065a6eea7962b091faccbaffad8d34f9394779d3",
                        "name": "block/bamboo_wood/step3"
                    },
                    {
                        "hash": "e45861e74bd0a811c6056b68742d8cb80f19c995",
                        "name": "block/bamboo_wood/step4"
                    },
                    {
                        "hash": "5fd3f987b3721ae098042845d2f7712512633bc8",
                        "name": "block/bamboo_wood/step5"
                    },
                    {
                        "hash": "eb1a3915737d1366866bfa53b5f29a1630636915",
                        "name": "block/bamboo_wood/step6"
                    }
                ]
            }
        ],
        "block.bamboo_wood.hit": [
            null,
            {
                "field": "aV",
                "id": 99,
                "name": "block.bamboo_wood.hit",
                "sounds": [
                    {
                        "hash": "21c7c1403ddc62ebf24deca09f92c4b317c88182",
                        "name": "block/bamboo_wood/step1",
                        "volume": 0.9
                    },
                    {
                        "hash": "de2a2d344850841901eb41880afc9604c65e819d",
                        "name": "block/bamboo_wood/step2",
                        "volume": 0.9
                    },
                    {
                        "hash": "065a6eea7962b091faccbaffad8d34f9394779d3",
                        "name": "block/bamboo_wood/step3",
                        "volume": 0.9
                    },
                    {
                        "hash": "e45861e74bd0a811c6056b68742d8cb80f19c995",
                        "name": "block/bamboo_wood/step4",
                        "volume": 0.9
                    },
                    {
                        "hash": "5fd3f987b3721ae098042845d2f7712512633bc8",
                        "name": "block/bamboo_wood/step5",
                        "volume": 0.9
                    },
                    {
                        "hash": "eb1a3915737d1366866bfa53b5f29a1630636915",
                        "name": "block/bamboo_wood/step6",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.bamboo_wood.place": [
            null,
            {
                "field": "aW",
                "id": 100,
                "name": "block.bamboo_wood.place",
                "sounds": [
                    {
                        "hash": "1fff9fe2769f81cbc68d1e4e44b8b69002d31cf6",
                        "name": "block/bamboo_wood/break1",
                        "volume": 0.9
                    },
                    {
                        "hash": "e6f6b746ca5bae7bac07bc0607c1244417cab846",
                        "name": "block/bamboo_wood/break2",
                        "volume": 0.9
                    },
                    {
                        "hash": "7ee1ddfd1f42fd5b06d8cbdb9213c72e575b2594",
                        "name": "block/bamboo_wood/break3",
                        "volume": 0.9
                    },
                    {
                        "hash": "5d8ce0540e1958840cb4d753443f8221d1bdaf1a",
                        "name": "block/bamboo_wood/break4",
                        "volume": 0.9
                    },
                    {
                        "hash": "51646cd9bdfc091ec589875f1da8786c85ebff79",
                        "name": "block/bamboo_wood/break5",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.bamboo_wood.step": [
            null,
            {
                "field": "aX",
                "id": 101,
                "name": "block.bamboo_wood.step",
                "sounds": [
                    {
                        "hash": "21c7c1403ddc62ebf24deca09f92c4b317c88182",
                        "name": "block/bamboo_wood/step1"
                    },
                    {
                        "hash": "de2a2d344850841901eb41880afc9604c65e819d",
                        "name": "block/bamboo_wood/step2"
                    },
                    {
                        "hash": "065a6eea7962b091faccbaffad8d34f9394779d3",
                        "name": "block/bamboo_wood/step3"
                    },
                    {
                        "hash": "e45861e74bd0a811c6056b68742d8cb80f19c995",
                        "name": "block/bamboo_wood/step4"
                    },
                    {
                        "hash": "5fd3f987b3721ae098042845d2f7712512633bc8",
                        "name": "block/bamboo_wood/step5"
                    },
                    {
                        "hash": "eb1a3915737d1366866bfa53b5f29a1630636915",
                        "name": "block/bamboo_wood/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.bamboo_wood_button.click_off": [
            null,
            {
                "field": "bc",
                "id": 106,
                "name": "block.bamboo_wood_button.click_off",
                "sounds": [
                    {
                        "hash": "a0d8a6bb5ee5b1ed724c930ba0fcf4b33633a5f5",
                        "name": "block/bamboo_wood_button/bamboo_wood_button",
                        "pitch": 0.5,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.bamboo_wood_button.click_on": [
            null,
            {
                "field": "bd",
                "id": 107,
                "name": "block.bamboo_wood_button.click_on",
                "sounds": [
                    {
                        "hash": "a0d8a6bb5ee5b1ed724c930ba0fcf4b33633a5f5",
                        "name": "block/bamboo_wood_button/bamboo_wood_button",
                        "pitch": 0.6,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.bamboo_wood_door.close": [
            null,
            {
                "field": "aY",
                "id": 102,
                "name": "block.bamboo_wood_door.close",
                "sounds": [
                    {
                        "hash": "03a9d41d398c7f8f0314a856982c94901279474d",
                        "name": "block/bamboo_wood_door/toggle1",
                        "volume": 0.9
                    },
                    {
                        "hash": "7efe23d9b72b22045a45104e64696dc26d7a0868",
                        "name": "block/bamboo_wood_door/toggle2",
                        "volume": 0.9
                    },
                    {
                        "hash": "199192a54b00af0f694cd069ceecee9394660c44",
                        "name": "block/bamboo_wood_door/toggle3",
                        "volume": 0.9
                    },
                    {
                        "hash": "c8118021f93a6fad75cbb84525d9c621aeaa0c0d",
                        "name": "block/bamboo_wood_door/toggle4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.bamboo_wood_door.open": [
            null,
            {
                "field": "aZ",
                "id": 103,
                "name": "block.bamboo_wood_door.open",
                "sounds": [
                    {
                        "hash": "03a9d41d398c7f8f0314a856982c94901279474d",
                        "name": "block/bamboo_wood_door/toggle1",
                        "volume": 0.9
                    },
                    {
                        "hash": "7efe23d9b72b22045a45104e64696dc26d7a0868",
                        "name": "block/bamboo_wood_door/toggle2",
                        "volume": 0.9
                    },
                    {
                        "hash": "199192a54b00af0f694cd069ceecee9394660c44",
                        "name": "block/bamboo_wood_door/toggle3",
                        "volume": 0.9
                    },
                    {
                        "hash": "c8118021f93a6fad75cbb84525d9c621aeaa0c0d",
                        "name": "block/bamboo_wood_door/toggle4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.bamboo_wood_fence_gate.close": [
            null,
            {
                "field": "bg",
                "id": 110,
                "name": "block.bamboo_wood_fence_gate.close",
                "sounds": [
                    {
                        "hash": "5aeca4ea83856cb034b6e3a5e3e89ba8f8d51b20",
                        "name": "block/bamboo_wood_fence/toggle1",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "a3bc38acc39bc46a60e898198fed9a72e558357b",
                        "name": "block/bamboo_wood_fence/toggle2",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "cf86f59e613b14c6613ae3ded2cee54ea3a9fee5",
                        "name": "block/bamboo_wood_fence/toggle3",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "ac01c4ca5d02703c0f1c450fbc976aa12324804f",
                        "name": "block/bamboo_wood_fence/toggle4",
                        "pitch": 1.1,
                        "volume": 0.9
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.bamboo_wood_fence_gate.open": [
            null,
            {
                "field": "bh",
                "id": 111,
                "name": "block.bamboo_wood_fence_gate.open",
                "sounds": [
                    {
                        "hash": "5aeca4ea83856cb034b6e3a5e3e89ba8f8d51b20",
                        "name": "block/bamboo_wood_fence/toggle1",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "a3bc38acc39bc46a60e898198fed9a72e558357b",
                        "name": "block/bamboo_wood_fence/toggle2",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "cf86f59e613b14c6613ae3ded2cee54ea3a9fee5",
                        "name": "block/bamboo_wood_fence/toggle3",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "hash": "ac01c4ca5d02703c0f1c450fbc976aa12324804f",
                        "name": "block/bamboo_wood_fence/toggle4",
                        "pitch": 1.1,
                        "volume": 0.9
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.bamboo_wood_hanging_sign.break": [
            null,
            {
                "field": "jH",
                "id": 553,
                "name": "block.bamboo_wood_hanging_sign.break",
                "sounds": [
                    {
                        "hash": "bd58021f2a66566eaa169d5847a47e334b6ed62e",
                        "name": "block/bamboo_wood_hanging_sign/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "542e425cc25aca4e3be5ab3c55c64f55a4ea0faf",
                        "name": "block/bamboo_wood_hanging_sign/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1fa5512b2716f07b61dce51fb478b550f862e82a",
                        "name": "block/bamboo_wood_hanging_sign/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "0ddd6d05032fb79fcaab212baffc2df7d862a81f",
                        "name": "block/bamboo_wood_hanging_sign/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.bamboo_wood_hanging_sign.fall": [
            null,
            {
                "field": "jI",
                "id": 554,
                "name": "block.bamboo_wood_hanging_sign.fall",
                "sounds": [
                    {
                        "hash": "153ba5b4a11fce37475b859dacae266d1366c8f4",
                        "name": "block/bamboo_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "61ece0b224e4ee791e0c980368fb2c8c884502a1",
                        "name": "block/bamboo_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "678f2973656a3677ceda6dd1a7a627009e7826fa",
                        "name": "block/bamboo_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "8464cd8b4512c7770ba0145d28ad96a4b6e2a420",
                        "name": "block/bamboo_wood_hanging_sign/step4"
                    }
                ]
            }
        ],
        "block.bamboo_wood_hanging_sign.hit": [
            null,
            {
                "field": "jJ",
                "id": 555,
                "name": "block.bamboo_wood_hanging_sign.hit",
                "sounds": [
                    {
                        "hash": "153ba5b4a11fce37475b859dacae266d1366c8f4",
                        "name": "block/bamboo_wood_hanging_sign/step1",
                        "pitch": 1.1,
                        "volume": 0.7
                    },
                    {
                        "hash": "61ece0b224e4ee791e0c980368fb2c8c884502a1",
                        "name": "block/bamboo_wood_hanging_sign/step2",
                        "pitch": 1.1,
                        "volume": 0.7
                    },
                    {
                        "hash": "678f2973656a3677ceda6dd1a7a627009e7826fa",
                        "name": "block/bamboo_wood_hanging_sign/step3",
                        "pitch": 1.1,
                        "volume": 0.7
                    },
                    {
                        "hash": "8464cd8b4512c7770ba0145d28ad96a4b6e2a420",
                        "name": "block/bamboo_wood_hanging_sign/step4",
                        "pitch": 1.1,
                        "volume": 0.7
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.bamboo_wood_hanging_sign.place": [
            null,
            {
                "field": "jK",
                "id": 556,
                "name": "block.bamboo_wood_hanging_sign.place",
                "sounds": [
                    {
                        "hash": "bd58021f2a66566eaa169d5847a47e334b6ed62e",
                        "name": "block/bamboo_wood_hanging_sign/break1",
                        "volume": 0.8
                    },
                    {
                        "hash": "542e425cc25aca4e3be5ab3c55c64f55a4ea0faf",
                        "name": "block/bamboo_wood_hanging_sign/break2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1fa5512b2716f07b61dce51fb478b550f862e82a",
                        "name": "block/bamboo_wood_hanging_sign/break3",
                        "volume": 0.8
                    },
                    {
                        "hash": "0ddd6d05032fb79fcaab212baffc2df7d862a81f",
                        "name": "block/bamboo_wood_hanging_sign/break4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.bamboo_wood_hanging_sign.step": [
            null,
            {
                "field": "jG",
                "id": 552,
                "name": "block.bamboo_wood_hanging_sign.step",
                "sounds": [
                    {
                        "hash": "153ba5b4a11fce37475b859dacae266d1366c8f4",
                        "name": "block/bamboo_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "61ece0b224e4ee791e0c980368fb2c8c884502a1",
                        "name": "block/bamboo_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "678f2973656a3677ceda6dd1a7a627009e7826fa",
                        "name": "block/bamboo_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "8464cd8b4512c7770ba0145d28ad96a4b6e2a420",
                        "name": "block/bamboo_wood_hanging_sign/step4"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.bamboo_wood_pressure_plate.click_off": [
            null,
            {
                "field": "be",
                "id": 108,
                "name": "block.bamboo_wood_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.7,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.bamboo_wood_pressure_plate.click_on": [
            null,
            {
                "field": "bf",
                "id": 109,
                "name": "block.bamboo_wood_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.8,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.bamboo_wood_trapdoor.close": [
            null,
            {
                "field": "ba",
                "id": 104,
                "name": "block.bamboo_wood_trapdoor.close",
                "sounds": [
                    {
                        "hash": "f5d11e6fbcf2f6c7a9cfcfb2a1fa8bd04a8b6a09",
                        "name": "block/bamboo_wood_trapdoor/toggle1"
                    },
                    {
                        "hash": "f952435fe498a16b50688fd485ee4122b15db98b",
                        "name": "block/bamboo_wood_trapdoor/toggle2"
                    },
                    {
                        "hash": "041f0695d89cb8ae810e6fa8c968828c7b6f14f2",
                        "name": "block/bamboo_wood_trapdoor/toggle3"
                    },
                    {
                        "hash": "cf35358b1ef2b2a2cca95d4fe12ff449333bad45",
                        "name": "block/bamboo_wood_trapdoor/toggle4"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.bamboo_wood_trapdoor.open": [
            null,
            {
                "field": "bb",
                "id": 105,
                "name": "block.bamboo_wood_trapdoor.open",
                "sounds": [
                    {
                        "hash": "f5d11e6fbcf2f6c7a9cfcfb2a1fa8bd04a8b6a09",
                        "name": "block/bamboo_wood_trapdoor/toggle1"
                    },
                    {
                        "hash": "f952435fe498a16b50688fd485ee4122b15db98b",
                        "name": "block/bamboo_wood_trapdoor/toggle2"
                    },
                    {
                        "hash": "041f0695d89cb8ae810e6fa8c968828c7b6f14f2",
                        "name": "block/bamboo_wood_trapdoor/toggle3"
                    },
                    {
                        "hash": "cf35358b1ef2b2a2cca95d4fe12ff449333bad45",
                        "name": "block/bamboo_wood_trapdoor/toggle4"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.chest.close": [
            {
                "field": "cX",
                "id": 205,
                "name": "block.chest.close",
                "sounds": [
                    {
                        "hash": "eddb25d126a93fd0dd26e0dd9ac1c0ef094b79f6",
                        "name": "block/chest/close"
                    },
                    {
                        "hash": "8524cf7e2b56d165a1ff6e3a219d3d8c406e90b3",
                        "name": "block/chest/close2"
                    },
                    {
                        "hash": "19786806146a50a06d8dbd36a033aefbb8fefd8a",
                        "name": "block/chest/close3"
                    }
                ],
                "subtitle": "Chest closes",
                "subtitle_key": "subtitles.block.chest.close"
            },
            {
                "field": "dx",
                "id": 231,
                "name": "block.chest.close",
                "sounds": [
                    {
                        "hash": "eddb25d126a93fd0dd26e0dd9ac1c0ef094b79f6",
                        "name": "block/chest/close1"
                    },
                    {
                        "hash": "8524cf7e2b56d165a1ff6e3a219d3d8c406e90b3",
                        "name": "block/chest/close2"
                    },
                    {
                        "hash": "19786806146a50a06d8dbd36a033aefbb8fefd8a",
                        "name": "block/chest/close3"
                    }
                ],
                "subtitle": "Chest closes",
                "subtitle_key": "subtitles.block.chest.close"
            }
        ],
        "block.chest.locked": [
            {
                "field": "cY",
                "id": 206,
                "name": "block.chest.locked",
                "sounds": [
                    {
                        "hash": "871634413de37a092d0e5fe7844a37917c27bbf2",
                        "name": "block/wooden_door/close"
                    },
                    {
                        "hash": "4ed1f29f3e1378811f7fcc49db743400b8e3284f",
                        "name": "block/wooden_door/open"
                    }
                ],
                "subtitle": "Chest locked",
                "subtitle_key": "subtitles.block.chest.locked"
            },
            {
                "field": "dy",
                "id": 232,
                "name": "block.chest.locked",
                "sounds": [
                    {
                        "hash": "871634413de37a092d0e5fe7844a37917c27bbf2",
                        "name": "block/chest/close_locked"
                    },
                    {
                        "hash": "4ed1f29f3e1378811f7fcc49db743400b8e3284f",
                        "name": "block/chest/open_locked"
                    }
                ],
                "subtitle": "Chest locked",
                "subtitle_key": "subtitles.block.chest.locked"
            }
        ],
        "block.chiseled_bookshelf.break": [
            null,
            {
                "field": "dF",
                "id": 239,
                "name": "block.chiseled_bookshelf.break",
                "sounds": [
                    {
                        "hash": "220e698dd673ceccb25cc9e7428fb2ab76c01ddb",
                        "name": "block/chiseled_bookshelf/break1"
                    },
                    {
                        "hash": "8e5a70a320c58d1ff09270c13b0fa9d5b776f272",
                        "name": "block/chiseled_bookshelf/break2"
                    },
                    {
                        "hash": "97c5a5b02bdf99e4b3d478423b85491f49876c68",
                        "name": "block/chiseled_bookshelf/break3"
                    },
                    {
                        "hash": "fdaaa018976eb3350c7aab42fe060b190f2eaf4d",
                        "name": "block/chiseled_bookshelf/break4"
                    },
                    {
                        "hash": "575f63a30d3e0c623b3d9a5c34eadd73ec7558b3",
                        "name": "block/chiseled_bookshelf/break5"
                    },
                    {
                        "hash": "33c5c4052513683b12fee7adf9720f8501107c3d",
                        "name": "block/chiseled_bookshelf/break6"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.chiseled_bookshelf.fall": [
            null,
            {
                "field": "dG",
                "id": 240,
                "name": "block.chiseled_bookshelf.fall",
                "sounds": [
                    {
                        "hash": "8d887ffeeefdd8e3049ebfc459f2a87d8bb155b6",
                        "name": "block/chiseled_bookshelf/step1"
                    },
                    {
                        "hash": "2a398cf76da4b3eff88ac96cc54911dab466e16f",
                        "name": "block/chiseled_bookshelf/step2"
                    },
                    {
                        "hash": "83e7358c1825cf061caf4e9fd21dcb39dd90dc39",
                        "name": "block/chiseled_bookshelf/step3"
                    },
                    {
                        "hash": "2c2c121d63188be0e841c5d38fcae269d48a47a4",
                        "name": "block/chiseled_bookshelf/step4"
                    },
                    {
                        "hash": "c0e4e7cc2b604f0aef85d20390b468e07102f6c2",
                        "name": "block/chiseled_bookshelf/step5"
                    }
                ]
            }
        ],
        "block.chiseled_bookshelf.hit": [
            null,
            {
                "field": "dH",
                "id": 241,
                "name": "block.chiseled_bookshelf.hit",
                "sounds": [
                    {
                        "hash": "8d887ffeeefdd8e3049ebfc459f2a87d8bb155b6",
                        "name": "block/chiseled_bookshelf/step1"
                    },
                    {
                        "hash": "2a398cf76da4b3eff88ac96cc54911dab466e16f",
                        "name": "block/chiseled_bookshelf/step2"
                    },
                    {
                        "hash": "83e7358c1825cf061caf4e9fd21dcb39dd90dc39",
                        "name": "block/chiseled_bookshelf/step3"
                    },
                    {
                        "hash": "2c2c121d63188be0e841c5d38fcae269d48a47a4",
                        "name": "block/chiseled_bookshelf/step4"
                    },
                    {
                        "hash": "c0e4e7cc2b604f0aef85d20390b468e07102f6c2",
                        "name": "block/chiseled_bookshelf/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.chiseled_bookshelf.insert": [
            null,
            {
                "field": "dI",
                "id": 242,
                "name": "block.chiseled_bookshelf.insert",
                "sounds": [
                    {
                        "hash": "922d1220c168dcc899672b6b26bbbbd3662507bb",
                        "name": "block/chiseled_bookshelf/insert1",
                        "volume": 0.8
                    },
                    {
                        "hash": "922d1220c168dcc899672b6b26bbbbd3662507bb",
                        "name": "block/chiseled_bookshelf/insert1",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "922d1220c168dcc899672b6b26bbbbd3662507bb",
                        "name": "block/chiseled_bookshelf/insert1",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "d422688a19eb4e943b40c28d38f7b7b6f51f9332",
                        "name": "block/chiseled_bookshelf/insert2",
                        "volume": 0.8
                    },
                    {
                        "hash": "d422688a19eb4e943b40c28d38f7b7b6f51f9332",
                        "name": "block/chiseled_bookshelf/insert2",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "d422688a19eb4e943b40c28d38f7b7b6f51f9332",
                        "name": "block/chiseled_bookshelf/insert2",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "8ea84646d64a6a45e53b9f648ca3fae7c825ef34",
                        "name": "block/chiseled_bookshelf/insert3",
                        "volume": 0.8
                    },
                    {
                        "hash": "8ea84646d64a6a45e53b9f648ca3fae7c825ef34",
                        "name": "block/chiseled_bookshelf/insert3",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "8ea84646d64a6a45e53b9f648ca3fae7c825ef34",
                        "name": "block/chiseled_bookshelf/insert3",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "5cf323a496d65365dbcc7eb219a4fcc0bb5f57a1",
                        "name": "block/chiseled_bookshelf/insert4",
                        "volume": 0.8
                    },
                    {
                        "hash": "5cf323a496d65365dbcc7eb219a4fcc0bb5f57a1",
                        "name": "block/chiseled_bookshelf/insert4",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "5cf323a496d65365dbcc7eb219a4fcc0bb5f57a1",
                        "name": "block/chiseled_bookshelf/insert4",
                        "pitch": 1.1,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Book placed",
                "subtitle_key": "subtitles.chiseled_bookshelf.insert"
            }
        ],
        "block.chiseled_bookshelf.insert.enchanted": [
            null,
            {
                "field": "dJ",
                "id": 243,
                "name": "block.chiseled_bookshelf.insert.enchanted",
                "sounds": [
                    {
                        "hash": "2106f2509f5c64a2e7d26990295d6162a8f6026a",
                        "name": "block/chiseled_bookshelf/insert_enchanted1",
                        "volume": 0.8
                    },
                    {
                        "hash": "2106f2509f5c64a2e7d26990295d6162a8f6026a",
                        "name": "block/chiseled_bookshelf/insert_enchanted1",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "2106f2509f5c64a2e7d26990295d6162a8f6026a",
                        "name": "block/chiseled_bookshelf/insert_enchanted1",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "5679fb4fd184e9e3e4199ade7d03c64465bbe4bd",
                        "name": "block/chiseled_bookshelf/insert_enchanted2",
                        "volume": 0.8
                    },
                    {
                        "hash": "5679fb4fd184e9e3e4199ade7d03c64465bbe4bd",
                        "name": "block/chiseled_bookshelf/insert_enchanted2",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "5679fb4fd184e9e3e4199ade7d03c64465bbe4bd",
                        "name": "block/chiseled_bookshelf/insert_enchanted2",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "b6e09e210d9150d6a96b38c07bddb22f5734a05f",
                        "name": "block/chiseled_bookshelf/insert_enchanted3",
                        "volume": 0.8
                    },
                    {
                        "hash": "b6e09e210d9150d6a96b38c07bddb22f5734a05f",
                        "name": "block/chiseled_bookshelf/insert_enchanted3",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "b6e09e210d9150d6a96b38c07bddb22f5734a05f",
                        "name": "block/chiseled_bookshelf/insert_enchanted3",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "586aaa54702dbad12becc220b9142970a6cf783b",
                        "name": "block/chiseled_bookshelf/insert_enchanted4",
                        "volume": 0.8
                    },
                    {
                        "hash": "586aaa54702dbad12becc220b9142970a6cf783b",
                        "name": "block/chiseled_bookshelf/insert_enchanted4",
                        "pitch": 0.85,
                        "volume": 0.8
                    },
                    {
                        "hash": "586aaa54702dbad12becc220b9142970a6cf783b",
                        "name": "block/chiseled_bookshelf/insert_enchanted4",
                        "pitch": 1.1,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Enchanted book placed",
                "subtitle_key": "subtitles.chiseled_bookshelf.insert_enchanted"
            }
        ],
        "block.chiseled_bookshelf.pickup": [
            null,
            {
                "field": "dL",
                "id": 245,
                "name": "block.chiseled_bookshelf.pickup",
                "sounds": [
                    {
                        "hash": "989f136de03972f34055b0674ed7499440158c0e",
                        "name": "block/chiseled_bookshelf/pickup1",
                        "volume": 0.8
                    },
                    {
                        "hash": "989f136de03972f34055b0674ed7499440158c0e",
                        "name": "block/chiseled_bookshelf/pickup1",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "989f136de03972f34055b0674ed7499440158c0e",
                        "name": "block/chiseled_bookshelf/pickup1",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "442fcb0cd57d4b570a17712e0cccaadb8fa8f598",
                        "name": "block/chiseled_bookshelf/pickup2",
                        "volume": 0.8
                    },
                    {
                        "hash": "442fcb0cd57d4b570a17712e0cccaadb8fa8f598",
                        "name": "block/chiseled_bookshelf/pickup2",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "442fcb0cd57d4b570a17712e0cccaadb8fa8f598",
                        "name": "block/chiseled_bookshelf/pickup2",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "96757629d4b9d285f639257c6a30452cd7e79b0f",
                        "name": "block/chiseled_bookshelf/pickup3",
                        "volume": 0.8
                    },
                    {
                        "hash": "96757629d4b9d285f639257c6a30452cd7e79b0f",
                        "name": "block/chiseled_bookshelf/pickup3",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "96757629d4b9d285f639257c6a30452cd7e79b0f",
                        "name": "block/chiseled_bookshelf/pickup3",
                        "pitch": 1.1,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Book taken",
                "subtitle_key": "subtitles.chiseled_bookshelf.take"
            }
        ],
        "block.chiseled_bookshelf.pickup.enchanted": [
            null,
            {
                "field": "dM",
                "id": 246,
                "name": "block.chiseled_bookshelf.pickup.enchanted",
                "sounds": [
                    {
                        "hash": "2e3cb35243d6fed155618c3b0b26c2c6fb80bced",
                        "name": "block/chiseled_bookshelf/pickup_enchanted1",
                        "volume": 0.8
                    },
                    {
                        "hash": "2e3cb35243d6fed155618c3b0b26c2c6fb80bced",
                        "name": "block/chiseled_bookshelf/pickup_enchanted1",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "2e3cb35243d6fed155618c3b0b26c2c6fb80bced",
                        "name": "block/chiseled_bookshelf/pickup_enchanted1",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "1387c1334885ce091f0397ac2f13f8bf3867ac46",
                        "name": "block/chiseled_bookshelf/pickup_enchanted2",
                        "volume": 0.8
                    },
                    {
                        "hash": "1387c1334885ce091f0397ac2f13f8bf3867ac46",
                        "name": "block/chiseled_bookshelf/pickup_enchanted2",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "1387c1334885ce091f0397ac2f13f8bf3867ac46",
                        "name": "block/chiseled_bookshelf/pickup_enchanted2",
                        "pitch": 1.1,
                        "volume": 0.8
                    },
                    {
                        "hash": "7efcfedf902dfb5e85a4779899bed3e934fed432",
                        "name": "block/chiseled_bookshelf/pickup_enchanted3",
                        "volume": 0.8
                    },
                    {
                        "hash": "7efcfedf902dfb5e85a4779899bed3e934fed432",
                        "name": "block/chiseled_bookshelf/pickup_enchanted3",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "7efcfedf902dfb5e85a4779899bed3e934fed432",
                        "name": "block/chiseled_bookshelf/pickup_enchanted3",
                        "pitch": 1.1,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Enchanted book taken",
                "subtitle_key": "subtitles.chiseled_bookshelf.take_enchanted"
            }
        ],
        "block.chiseled_bookshelf.place": [
            null,
            {
                "field": "dN",
                "id": 247,
                "name": "block.chiseled_bookshelf.place",
                "sounds": [
                    {
                        "hash": "220e698dd673ceccb25cc9e7428fb2ab76c01ddb",
                        "name": "block/chiseled_bookshelf/break1"
                    },
                    {
                        "hash": "8e5a70a320c58d1ff09270c13b0fa9d5b776f272",
                        "name": "block/chiseled_bookshelf/break2"
                    },
                    {
                        "hash": "97c5a5b02bdf99e4b3d478423b85491f49876c68",
                        "name": "block/chiseled_bookshelf/break3"
                    },
                    {
                        "hash": "fdaaa018976eb3350c7aab42fe060b190f2eaf4d",
                        "name": "block/chiseled_bookshelf/break4"
                    },
                    {
                        "hash": "575f63a30d3e0c623b3d9a5c34eadd73ec7558b3",
                        "name": "block/chiseled_bookshelf/break5"
                    },
                    {
                        "hash": "33c5c4052513683b12fee7adf9720f8501107c3d",
                        "name": "block/chiseled_bookshelf/break6"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.chiseled_bookshelf.step": [
            null,
            {
                "field": "dK",
                "id": 244,
                "name": "block.chiseled_bookshelf.step",
                "sounds": [
                    {
                        "hash": "8d887ffeeefdd8e3049ebfc459f2a87d8bb155b6",
                        "name": "block/chiseled_bookshelf/step1"
                    },
                    {
                        "hash": "2a398cf76da4b3eff88ac96cc54911dab466e16f",
                        "name": "block/chiseled_bookshelf/step2"
                    },
                    {
                        "hash": "83e7358c1825cf061caf4e9fd21dcb39dd90dc39",
                        "name": "block/chiseled_bookshelf/step3"
                    },
                    {
                        "hash": "2c2c121d63188be0e841c5d38fcae269d48a47a4",
                        "name": "block/chiseled_bookshelf/step4"
                    },
                    {
                        "hash": "c0e4e7cc2b604f0aef85d20390b468e07102f6c2",
                        "name": "block/chiseled_bookshelf/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.fence_gate.close": [
            {
                "field": "gc",
                "id": 366,
                "name": "block.fence_gate.close",
                "sounds": [
                    {
                        "hash": "aaebcc83934fb7919c7af934eefc5a586678e1b2",
                        "name": "block/fence_gate/close1"
                    },
                    {
                        "hash": "58d63232621aaa03e4d09598700561214e7c2477",
                        "name": "block/fence_gate/close2"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            },
            {
                "field": "gL",
                "id": 401,
                "name": "block.fence_gate.close",
                "sounds": [
                    {
                        "hash": "aaebcc83934fb7919c7af934eefc5a586678e1b2",
                        "name": "block/fence_gate/close1",
                        "volume": 0.9
                    },
                    {
                        "hash": "58d63232621aaa03e4d09598700561214e7c2477",
                        "name": "block/fence_gate/close2",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.fence_gate.open": [
            {
                "field": "gd",
                "id": 367,
                "name": "block.fence_gate.open",
                "sounds": [
                    {
                        "hash": "fa68bbdcbb68db8dea8604f3ae5caadb9ded0cbe",
                        "name": "block/fence_gate/open1"
                    },
                    {
                        "hash": "836ae33bdfadbe5dcbe0696fe64c671beb4938fb",
                        "name": "block/fence_gate/open2"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            },
            {
                "field": "gM",
                "id": 402,
                "name": "block.fence_gate.open",
                "sounds": [
                    {
                        "hash": "fa68bbdcbb68db8dea8604f3ae5caadb9ded0cbe",
                        "name": "block/fence_gate/open1",
                        "volume": 0.9
                    },
                    {
                        "hash": "836ae33bdfadbe5dcbe0696fe64c671beb4938fb",
                        "name": "block/fence_gate/open2",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.hanging_sign.break": [
            null,
            {
                "field": "jx",
                "id": 543,
                "name": "block.hanging_sign.break",
                "sounds": [
                    {
                        "hash": "f41ba2e4cd1f152e8ffc18dfbfe7ee1a7a95caa0",
                        "name": "block/hanging_sign/break1"
                    },
                    {
                        "hash": "8c4fdc724edf4be64e7f0541d6f60772c70c9394",
                        "name": "block/hanging_sign/break2"
                    },
                    {
                        "hash": "47ab18c2789b99266f25672a7aeb453c59a1ccb8",
                        "name": "block/hanging_sign/break3"
                    },
                    {
                        "hash": "670a96ecdac04bb1083b0d4025d8afb05fd9b200",
                        "name": "block/hanging_sign/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.hanging_sign.fall": [
            null,
            {
                "field": "jy",
                "id": 544,
                "name": "block.hanging_sign.fall",
                "sounds": [
                    {
                        "hash": "a2a96a710d9c4a3aaf0e6958c6fdc7090993f5cc",
                        "name": "block/hanging_sign/step1"
                    },
                    {
                        "hash": "4e22b9a399bd3e921027aab36dc329e884275e7e",
                        "name": "block/hanging_sign/step2"
                    },
                    {
                        "hash": "ebfd31f8d4b31c0b4373ef967120632d562130f7",
                        "name": "block/hanging_sign/step3"
                    },
                    {
                        "hash": "6cbea09cbfa9347b0aef6349388863a03effa296",
                        "name": "block/hanging_sign/step4"
                    }
                ]
            }
        ],
        "block.hanging_sign.hit": [
            null,
            {
                "field": "jz",
                "id": 545,
                "name": "block.hanging_sign.hit",
                "sounds": [
                    {
                        "hash": "a2a96a710d9c4a3aaf0e6958c6fdc7090993f5cc",
                        "name": "block/hanging_sign/step1"
                    },
                    {
                        "hash": "4e22b9a399bd3e921027aab36dc329e884275e7e",
                        "name": "block/hanging_sign/step2"
                    },
                    {
                        "hash": "ebfd31f8d4b31c0b4373ef967120632d562130f7",
                        "name": "block/hanging_sign/step3"
                    },
                    {
                        "hash": "6cbea09cbfa9347b0aef6349388863a03effa296",
                        "name": "block/hanging_sign/step4"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.hanging_sign.place": [
            null,
            {
                "field": "jA",
                "id": 546,
                "name": "block.hanging_sign.place",
                "sounds": [
                    {
                        "hash": "f41ba2e4cd1f152e8ffc18dfbfe7ee1a7a95caa0",
                        "name": "block/hanging_sign/break1"
                    },
                    {
                        "hash": "8c4fdc724edf4be64e7f0541d6f60772c70c9394",
                        "name": "block/hanging_sign/break2"
                    },
                    {
                        "hash": "47ab18c2789b99266f25672a7aeb453c59a1ccb8",
                        "name": "block/hanging_sign/break3"
                    },
                    {
                        "hash": "670a96ecdac04bb1083b0d4025d8afb05fd9b200",
                        "name": "block/hanging_sign/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.hanging_sign.step": [
            null,
            {
                "field": "jw",
                "id": 542,
                "name": "block.hanging_sign.step",
                "sounds": [
                    {
                        "hash": "a2a96a710d9c4a3aaf0e6958c6fdc7090993f5cc",
                        "name": "block/hanging_sign/step1"
                    },
                    {
                        "hash": "4e22b9a399bd3e921027aab36dc329e884275e7e",
                        "name": "block/hanging_sign/step2"
                    },
                    {
                        "hash": "ebfd31f8d4b31c0b4373ef967120632d562130f7",
                        "name": "block/hanging_sign/step3"
                    },
                    {
                        "hash": "6cbea09cbfa9347b0aef6349388863a03effa296",
                        "name": "block/hanging_sign/step4"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.iron_door.close": [
            {
                "field": "jM",
                "id": 557,
                "name": "block.iron_door.close",
                "sounds": [
                    {
                        "hash": "108c61bfecd4f969778173578984503e08dd7898",
                        "name": "block/iron_door/close1"
                    },
                    {
                        "hash": "aec962400204953cc7eefef2c0cc1942bbeaff38",
                        "name": "block/iron_door/close2"
                    },
                    {
                        "hash": "278ae35982e186ab9f4a9ef5728b18793c939e98",
                        "name": "block/iron_door/close3"
                    },
                    {
                        "hash": "4710afcb488c6ee3881e3b896dfcd5cc2069049a",
                        "name": "block/iron_door/close4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            },
            {
                "field": "kK",
                "id": 607,
                "name": "block.iron_door.close",
                "sounds": [
                    {
                        "hash": "108c61bfecd4f969778173578984503e08dd7898",
                        "name": "block/iron_door/close1",
                        "volume": 0.9
                    },
                    {
                        "hash": "aec962400204953cc7eefef2c0cc1942bbeaff38",
                        "name": "block/iron_door/close2",
                        "volume": 0.9
                    },
                    {
                        "hash": "278ae35982e186ab9f4a9ef5728b18793c939e98",
                        "name": "block/iron_door/close3",
                        "volume": 0.9
                    },
                    {
                        "hash": "4710afcb488c6ee3881e3b896dfcd5cc2069049a",
                        "name": "block/iron_door/close4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.iron_door.open": [
            {
                "field": "jN",
                "id": 558,
                "name": "block.iron_door.open",
                "sounds": [
                    {
                        "hash": "a8756192499be8204a5e195b9873b6b48c0d1d25",
                        "name": "block/iron_door/open1"
                    },
                    {
                        "hash": "0208597870daf05e8bde08d4aac04989c9ebedf2",
                        "name": "block/iron_door/open2"
                    },
                    {
                        "hash": "e700e2c9abdfc27a32ac3b7f759d6c48a0846992",
                        "name": "block/iron_door/open3"
                    },
                    {
                        "hash": "ae6914ce7180755e98ee2d169e1757bc624bbade",
                        "name": "block/iron_door/open4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            },
            {
                "field": "kL",
                "id": 608,
                "name": "block.iron_door.open",
                "sounds": [
                    {
                        "hash": "a8756192499be8204a5e195b9873b6b48c0d1d25",
                        "name": "block/iron_door/open1",
                        "volume": 0.9
                    },
                    {
                        "hash": "0208597870daf05e8bde08d4aac04989c9ebedf2",
                        "name": "block/iron_door/open2",
                        "volume": 0.9
                    },
                    {
                        "hash": "e700e2c9abdfc27a32ac3b7f759d6c48a0846992",
                        "name": "block/iron_door/open3",
                        "volume": 0.9
                    },
                    {
                        "hash": "ae6914ce7180755e98ee2d169e1757bc624bbade",
                        "name": "block/iron_door/open4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.iron_trapdoor.close": [
            {
                "field": "jU",
                "id": 565,
                "name": "block.iron_trapdoor.close",
                "sounds": [
                    {
                        "hash": "2eed61a9d62487569fe54986856238e1c364f7cd",
                        "name": "block/iron_trapdoor/close1"
                    },
                    {
                        "hash": "003409183ca2b8a8a140bfeb6390d1a9edc8c88b",
                        "name": "block/iron_trapdoor/close2"
                    },
                    {
                        "hash": "d76adcd771f45c83ded14aaad4645dd068918d52",
                        "name": "block/iron_trapdoor/close3"
                    },
                    {
                        "hash": "f1f532ab1d59998dcdb4e1838fa62d224cdcfd1e",
                        "name": "block/iron_trapdoor/close4"
                    }
                ],
                "subtitle": "Trapdoor closes",
                "subtitle_key": "subtitles.block.iron_trapdoor.close"
            },
            {
                "field": "kS",
                "id": 615,
                "name": "block.iron_trapdoor.close",
                "sounds": [
                    {
                        "hash": "2eed61a9d62487569fe54986856238e1c364f7cd",
                        "name": "block/iron_trapdoor/close1",
                        "volume": 0.9
                    },
                    {
                        "hash": "003409183ca2b8a8a140bfeb6390d1a9edc8c88b",
                        "name": "block/iron_trapdoor/close2",
                        "volume": 0.9
                    },
                    {
                        "hash": "d76adcd771f45c83ded14aaad4645dd068918d52",
                        "name": "block/iron_trapdoor/close3",
                        "volume": 0.9
                    },
                    {
                        "hash": "f1f532ab1d59998dcdb4e1838fa62d224cdcfd1e",
                        "name": "block/iron_trapdoor/close4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Trapdoor closes",
                "subtitle_key": "subtitles.block.iron_trapdoor.close"
            }
        ],
        "block.iron_trapdoor.open": [
            {
                "field": "jV",
                "id": 566,
                "name": "block.iron_trapdoor.open",
                "sounds": [
                    {
                        "hash": "45f65be973d1929c2bd26d4fbc7912ad6bfc4834",
                        "name": "block/iron_trapdoor/open1"
                    },
                    {
                        "hash": "fdce7a33bf8e7605d40a10dbe0edc5556b1d43c4",
                        "name": "block/iron_trapdoor/open2"
                    },
                    {
                        "hash": "edb8625e330ee1ee8ceeb2540cd083360e9daf65",
                        "name": "block/iron_trapdoor/open3"
                    },
                    {
                        "hash": "e73b083393fa29357e85f8b535751e14853cf7b5",
                        "name": "block/iron_trapdoor/open4"
                    }
                ],
                "subtitle": "Trapdoor opens",
                "subtitle_key": "subtitles.block.iron_trapdoor.open"
            },
            {
                "field": "kT",
                "id": 616,
                "name": "block.iron_trapdoor.open",
                "sounds": [
                    {
                        "hash": "45f65be973d1929c2bd26d4fbc7912ad6bfc4834",
                        "name": "block/iron_trapdoor/open1",
                        "volume": 0.9
                    },
                    {
                        "hash": "fdce7a33bf8e7605d40a10dbe0edc5556b1d43c4",
                        "name": "block/iron_trapdoor/open2",
                        "volume": 0.9
                    },
                    {
                        "hash": "edb8625e330ee1ee8ceeb2540cd083360e9daf65",
                        "name": "block/iron_trapdoor/open3",
                        "volume": 0.9
                    },
                    {
                        "hash": "e73b083393fa29357e85f8b535751e14853cf7b5",
                        "name": "block/iron_trapdoor/open4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Trapdoor opens",
                "subtitle_key": "subtitles.block.iron_trapdoor.open"
            }
        ],
        "block.metal_pressure_plate.click_off": [
            {
                "field": "lf",
                "id": 628,
                "name": "block.metal_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "md",
                "id": 678,
                "name": "block.metal_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.65,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.metal_pressure_plate.click_on": [
            {
                "field": "lg",
                "id": 629,
                "name": "block.metal_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "me",
                "id": 679,
                "name": "block.metal_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.75,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.nether_wood.break": [
            null,
            {
                "field": "nN",
                "id": 766,
                "name": "block.nether_wood.break",
                "sounds": [
                    {
                        "hash": "b4a699c6cc600bbca6c68fdea990ff1bd0c168c4",
                        "name": "block/nether_wood/break1"
                    },
                    {
                        "hash": "85be73a6b5906e197d7660c421be70f0d5849eb3",
                        "name": "block/nether_wood/break2"
                    },
                    {
                        "hash": "bbc7f549a09cb47865e49c0ff411b78d165ebb2e",
                        "name": "block/nether_wood/break3"
                    },
                    {
                        "hash": "f8e07e6ccd756b4d716cf1f9a56d41ecad1b70a6",
                        "name": "block/nether_wood/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.nether_wood.fall": [
            null,
            {
                "field": "nO",
                "id": 767,
                "name": "block.nether_wood.fall",
                "sounds": [
                    {
                        "hash": "0c3604495566fee8449f3ccc316bbf9c675f54a3",
                        "name": "block/nether_wood/step1"
                    },
                    {
                        "hash": "a6f8d872cbe883abfc9c98d113cf7fd8f963a47b",
                        "name": "block/nether_wood/step2"
                    },
                    {
                        "hash": "9e0cb7e98b8b11fc1506e8904ffff7adb1041a50",
                        "name": "block/nether_wood/step3"
                    },
                    {
                        "hash": "755c6326b95dd496c70fca25f479aec022cac116",
                        "name": "block/nether_wood/step4"
                    },
                    {
                        "hash": "a52ca5ef349b61d12e3a51c3f62e804951493bf9",
                        "name": "block/nether_wood/step5"
                    }
                ]
            }
        ],
        "block.nether_wood.hit": [
            null,
            {
                "field": "nP",
                "id": 768,
                "name": "block.nether_wood.hit",
                "sounds": [
                    {
                        "hash": "0c3604495566fee8449f3ccc316bbf9c675f54a3",
                        "name": "block/nether_wood/step1"
                    },
                    {
                        "hash": "a6f8d872cbe883abfc9c98d113cf7fd8f963a47b",
                        "name": "block/nether_wood/step2"
                    },
                    {
                        "hash": "9e0cb7e98b8b11fc1506e8904ffff7adb1041a50",
                        "name": "block/nether_wood/step3"
                    },
                    {
                        "hash": "755c6326b95dd496c70fca25f479aec022cac116",
                        "name": "block/nether_wood/step4"
                    },
                    {
                        "hash": "a52ca5ef349b61d12e3a51c3f62e804951493bf9",
                        "name": "block/nether_wood/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.nether_wood.place": [
            null,
            {
                "field": "nQ",
                "id": 769,
                "name": "block.nether_wood.place",
                "sounds": [
                    {
                        "hash": "b4a699c6cc600bbca6c68fdea990ff1bd0c168c4",
                        "name": "block/nether_wood/break1"
                    },
                    {
                        "hash": "85be73a6b5906e197d7660c421be70f0d5849eb3",
                        "name": "block/nether_wood/break2"
                    },
                    {
                        "hash": "bbc7f549a09cb47865e49c0ff411b78d165ebb2e",
                        "name": "block/nether_wood/break3"
                    },
                    {
                        "hash": "f8e07e6ccd756b4d716cf1f9a56d41ecad1b70a6",
                        "name": "block/nether_wood/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.nether_wood.step": [
            null,
            {
                "field": "nR",
                "id": 770,
                "name": "block.nether_wood.step",
                "sounds": [
                    {
                        "hash": "0c3604495566fee8449f3ccc316bbf9c675f54a3",
                        "name": "block/nether_wood/step1"
                    },
                    {
                        "hash": "a6f8d872cbe883abfc9c98d113cf7fd8f963a47b",
                        "name": "block/nether_wood/step2"
                    },
                    {
                        "hash": "9e0cb7e98b8b11fc1506e8904ffff7adb1041a50",
                        "name": "block/nether_wood/step3"
                    },
                    {
                        "hash": "755c6326b95dd496c70fca25f479aec022cac116",
                        "name": "block/nether_wood/step4"
                    },
                    {
                        "hash": "a52ca5ef349b61d12e3a51c3f62e804951493bf9",
                        "name": "block/nether_wood/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.nether_wood_button.click_off": [
            null,
            {
                "field": "nW",
                "id": 775,
                "name": "block.nether_wood_button.click_off",
                "sounds": [
                    {
                        "hash": "fa51d8a60356b7f1aa59154b6f7ac30d06e7fac7",
                        "name": "block/nether_wood_button/nether_wood_button",
                        "pitch": 0.5,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.nether_wood_button.click_on": [
            null,
            {
                "field": "nX",
                "id": 776,
                "name": "block.nether_wood_button.click_on",
                "sounds": [
                    {
                        "hash": "fa51d8a60356b7f1aa59154b6f7ac30d06e7fac7",
                        "name": "block/nether_wood_button/nether_wood_button",
                        "pitch": 0.6,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.nether_wood_door.close": [
            null,
            {
                "field": "nS",
                "id": 771,
                "name": "block.nether_wood_door.close",
                "sounds": [
                    {
                        "hash": "7336b09e37536fa4e88f0b3b59e416b28eae98b1",
                        "name": "block/nether_wood_door/toggle1"
                    },
                    {
                        "hash": "59eba31f2283b74b3683d7d2759f83e412342421",
                        "name": "block/nether_wood_door/toggle2"
                    },
                    {
                        "hash": "04e72237ecdc6189492ba0f7ac51b8d2bb04feea",
                        "name": "block/nether_wood_door/toggle3"
                    },
                    {
                        "hash": "1e275e041a7511c22b71ac8b4a15bba258a803c5",
                        "name": "block/nether_wood_door/toggle4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.nether_wood_door.open": [
            null,
            {
                "field": "nT",
                "id": 772,
                "name": "block.nether_wood_door.open",
                "sounds": [
                    {
                        "hash": "7336b09e37536fa4e88f0b3b59e416b28eae98b1",
                        "name": "block/nether_wood_door/toggle1"
                    },
                    {
                        "hash": "59eba31f2283b74b3683d7d2759f83e412342421",
                        "name": "block/nether_wood_door/toggle2"
                    },
                    {
                        "hash": "04e72237ecdc6189492ba0f7ac51b8d2bb04feea",
                        "name": "block/nether_wood_door/toggle3"
                    },
                    {
                        "hash": "1e275e041a7511c22b71ac8b4a15bba258a803c5",
                        "name": "block/nether_wood_door/toggle4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.nether_wood_fence_gate.close": [
            null,
            {
                "field": "oa",
                "id": 779,
                "name": "block.nether_wood_fence_gate.close",
                "sounds": [
                    {
                        "hash": "a6be5b71e282b38c0c07f3bec5299e7650c99494",
                        "name": "block/nether_wood_fence/toggle1"
                    },
                    {
                        "hash": "a58472253d7558a119a8cf11e7dd02c609df05e4",
                        "name": "block/nether_wood_fence/toggle2"
                    },
                    {
                        "hash": "8315fc66544f79cc770b7359a1286245c75b190c",
                        "name": "block/nether_wood_fence/toggle3"
                    },
                    {
                        "hash": "e54a57bfc826e22db761843eee9c82327464b4fd",
                        "name": "block/nether_wood_fence/toggle4"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.nether_wood_fence_gate.open": [
            null,
            {
                "field": "ob",
                "id": 780,
                "name": "block.nether_wood_fence_gate.open",
                "sounds": [
                    {
                        "hash": "a6be5b71e282b38c0c07f3bec5299e7650c99494",
                        "name": "block/nether_wood_fence/toggle1"
                    },
                    {
                        "hash": "a58472253d7558a119a8cf11e7dd02c609df05e4",
                        "name": "block/nether_wood_fence/toggle2"
                    },
                    {
                        "hash": "8315fc66544f79cc770b7359a1286245c75b190c",
                        "name": "block/nether_wood_fence/toggle3"
                    },
                    {
                        "hash": "e54a57bfc826e22db761843eee9c82327464b4fd",
                        "name": "block/nether_wood_fence/toggle4"
                    }
                ],
                "subtitle": "Fence Gate creaks",
                "subtitle_key": "subtitles.block.fence_gate.toggle"
            }
        ],
        "block.nether_wood_hanging_sign.break": [
            null,
            {
                "field": "jC",
                "id": 548,
                "name": "block.nether_wood_hanging_sign.break",
                "sounds": [
                    {
                        "hash": "29b532b62c4189787dd5d6e06a637bd4a050f6c8",
                        "name": "block/nether_wood_hanging_sign/break1"
                    },
                    {
                        "hash": "1625e087b85d692c294c6d006e45061f42b2647e",
                        "name": "block/nether_wood_hanging_sign/break2"
                    },
                    {
                        "hash": "3d2a7c10c8909adbbc303d48a8bd6804107afe6d",
                        "name": "block/nether_wood_hanging_sign/break3"
                    },
                    {
                        "hash": "27a16d9f0dad66a215e63c425690694e6263b75f",
                        "name": "block/nether_wood_hanging_sign/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.nether_wood_hanging_sign.fall": [
            null,
            {
                "field": "jD",
                "id": 549,
                "name": "block.nether_wood_hanging_sign.fall",
                "sounds": [
                    {
                        "hash": "26f2fdfce1011455266706469ec188c003d01a13",
                        "name": "block/nether_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "b38c1043cd3bc6be329406820f899ee4652973a6",
                        "name": "block/nether_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "e47058d78a1e2eedb1a88c4a13b1cdd33eed75c5",
                        "name": "block/nether_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "ed2fb3904307d98fd4c8dd1a567190284b0424a6",
                        "name": "block/nether_wood_hanging_sign/step4"
                    }
                ]
            }
        ],
        "block.nether_wood_hanging_sign.hit": [
            null,
            {
                "field": "jE",
                "id": 550,
                "name": "block.nether_wood_hanging_sign.hit",
                "sounds": [
                    {
                        "hash": "26f2fdfce1011455266706469ec188c003d01a13",
                        "name": "block/nether_wood_hanging_sign/step1",
                        "volume": 0.8
                    },
                    {
                        "hash": "b38c1043cd3bc6be329406820f899ee4652973a6",
                        "name": "block/nether_wood_hanging_sign/step2",
                        "volume": 0.8
                    },
                    {
                        "hash": "e47058d78a1e2eedb1a88c4a13b1cdd33eed75c5",
                        "name": "block/nether_wood_hanging_sign/step3",
                        "volume": 0.8
                    },
                    {
                        "hash": "ed2fb3904307d98fd4c8dd1a567190284b0424a6",
                        "name": "block/nether_wood_hanging_sign/step4",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.nether_wood_hanging_sign.place": [
            null,
            {
                "field": "jF",
                "id": 551,
                "name": "block.nether_wood_hanging_sign.place",
                "sounds": [
                    {
                        "hash": "29b532b62c4189787dd5d6e06a637bd4a050f6c8",
                        "name": "block/nether_wood_hanging_sign/break1"
                    },
                    {
                        "hash": "1625e087b85d692c294c6d006e45061f42b2647e",
                        "name": "block/nether_wood_hanging_sign/break2"
                    },
                    {
                        "hash": "3d2a7c10c8909adbbc303d48a8bd6804107afe6d",
                        "name": "block/nether_wood_hanging_sign/break3"
                    },
                    {
                        "hash": "27a16d9f0dad66a215e63c425690694e6263b75f",
                        "name": "block/nether_wood_hanging_sign/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.nether_wood_hanging_sign.step": [
            null,
            {
                "field": "jB",
                "id": 547,
                "name": "block.nether_wood_hanging_sign.step",
                "sounds": [
                    {
                        "hash": "26f2fdfce1011455266706469ec188c003d01a13",
                        "name": "block/nether_wood_hanging_sign/step1"
                    },
                    {
                        "hash": "b38c1043cd3bc6be329406820f899ee4652973a6",
                        "name": "block/nether_wood_hanging_sign/step2"
                    },
                    {
                        "hash": "e47058d78a1e2eedb1a88c4a13b1cdd33eed75c5",
                        "name": "block/nether_wood_hanging_sign/step3"
                    },
                    {
                        "hash": "ed2fb3904307d98fd4c8dd1a567190284b0424a6",
                        "name": "block/nether_wood_hanging_sign/step4"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.nether_wood_pressure_plate.click_off": [
            null,
            {
                "field": "nY",
                "id": 777,
                "name": "block.nether_wood_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.7,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.nether_wood_pressure_plate.click_on": [
            null,
            {
                "field": "nZ",
                "id": 778,
                "name": "block.nether_wood_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.8,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.nether_wood_trapdoor.close": [
            null,
            {
                "field": "nU",
                "id": 773,
                "name": "block.nether_wood_trapdoor.close",
                "sounds": [
                    {
                        "hash": "64b7612a22c46a974a2e4ddcce0b3bf61fffd11e",
                        "name": "block/nether_wood_trapdoor/toggle1"
                    },
                    {
                        "hash": "3a48d36cc6bd2b1d5c7dbdcd7710e5bd5e25ce19",
                        "name": "block/nether_wood_trapdoor/toggle2"
                    },
                    {
                        "hash": "faa6ab35a1f6d20e8e7738341265b36c140bc42d",
                        "name": "block/nether_wood_trapdoor/toggle3"
                    },
                    {
                        "hash": "b332519d27bebece8b03079d104bd11b96d14999",
                        "name": "block/nether_wood_trapdoor/toggle4"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.nether_wood_trapdoor.open": [
            null,
            {
                "field": "nV",
                "id": 774,
                "name": "block.nether_wood_trapdoor.open",
                "sounds": [
                    {
                        "hash": "64b7612a22c46a974a2e4ddcce0b3bf61fffd11e",
                        "name": "block/nether_wood_trapdoor/toggle1"
                    },
                    {
                        "hash": "3a48d36cc6bd2b1d5c7dbdcd7710e5bd5e25ce19",
                        "name": "block/nether_wood_trapdoor/toggle2"
                    },
                    {
                        "hash": "faa6ab35a1f6d20e8e7738341265b36c140bc42d",
                        "name": "block/nether_wood_trapdoor/toggle3"
                    },
                    {
                        "hash": "b332519d27bebece8b03079d104bd11b96d14999",
                        "name": "block/nether_wood_trapdoor/toggle4"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.note_block.imitate.creeper": [
            null,
            {
                "field": "pn",
                "id": 844,
                "name": "block.note_block.imitate.creeper",
                "sounds": [
                    {
                        "name": "entity.creeper.primed",
                        "pitch": 0.5,
                        "type": "event"
                    }
                ],
                "subtitle": "Creeper hisses",
                "subtitle_key": "subtitles.entity.creeper.primed"
            }
        ],
        "block.note_block.imitate.ender_dragon": [
            null,
            {
                "field": "po",
                "id": 845,
                "name": "block.note_block.imitate.ender_dragon",
                "sounds": [
                    {
                        "name": "entity.ender_dragon.ambient",
                        "type": "event"
                    }
                ],
                "subtitle": "Dragon roars",
                "subtitle_key": "subtitles.entity.ender_dragon.ambient"
            }
        ],
        "block.note_block.imitate.piglin": [
            null,
            {
                "field": "pq",
                "id": 847,
                "name": "block.note_block.imitate.piglin",
                "sounds": [
                    {
                        "name": "entity.piglin.ambient",
                        "type": "event"
                    }
                ],
                "subtitle": "Piglin snorts",
                "subtitle_key": "subtitles.entity.piglin.ambient"
            }
        ],
        "block.note_block.imitate.skeleton": [
            null,
            {
                "field": "pm",
                "id": 843,
                "name": "block.note_block.imitate.skeleton",
                "sounds": [
                    {
                        "name": "entity.skeleton.ambient",
                        "type": "event"
                    }
                ],
                "subtitle": "Skeleton rattles",
                "subtitle_key": "subtitles.entity.skeleton.ambient"
            }
        ],
        "block.note_block.imitate.wither_skeleton": [
            null,
            {
                "field": "pp",
                "id": 846,
                "name": "block.note_block.imitate.wither_skeleton",
                "sounds": [
                    {
                        "name": "entity.wither_skeleton.ambient",
                        "type": "event"
                    }
                ],
                "subtitle": "Wither Skeleton rattles",
                "subtitle_key": "subtitles.entity.wither_skeleton.ambient"
            }
        ],
        "block.note_block.imitate.zombie": [
            null,
            {
                "field": "pl",
                "id": 842,
                "name": "block.note_block.imitate.zombie",
                "sounds": [
                    {
                        "name": "entity.zombie.ambient",
                        "type": "event"
                    }
                ],
                "subtitle": "Zombie groans",
                "subtitle_key": "subtitles.entity.zombie.ambient"
            }
        ],
        "block.roots.fall": [
            {
                "field": "hh",
                "id": 423,
                "name": "block.roots.fall",
                "sounds": []
            },
            {
                "field": "hQ",
                "id": 458,
                "name": "block.roots.fall",
                "sounds": [
                    {
                        "hash": "627986868ad27e85f53e1e8dc1db406fe2d0a7b2",
                        "name": "block/roots/step1"
                    },
                    {
                        "hash": "64397c108f51882304e4012219b0782bbadb6056",
                        "name": "block/roots/step2"
                    },
                    {
                        "hash": "595b687c4da88dfafee324b6c500e1df7dead0eb",
                        "name": "block/roots/step3"
                    },
                    {
                        "hash": "de7b3af61600660442e2ad6af224d48b7bf37030",
                        "name": "block/roots/step4"
                    },
                    {
                        "hash": "6164117445e8dfd29379e9bb97108ec0b7126270",
                        "name": "block/roots/step5"
                    }
                ]
            }
        ],
        "block.roots.hit": [
            {
                "field": "hg",
                "id": 422,
                "name": "block.roots.hit",
                "sounds": [],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            {
                "field": "hP",
                "id": 457,
                "name": "block.roots.hit",
                "sounds": [
                    {
                        "hash": "627986868ad27e85f53e1e8dc1db406fe2d0a7b2",
                        "name": "block/roots/step1"
                    },
                    {
                        "hash": "64397c108f51882304e4012219b0782bbadb6056",
                        "name": "block/roots/step2"
                    },
                    {
                        "hash": "595b687c4da88dfafee324b6c500e1df7dead0eb",
                        "name": "block/roots/step3"
                    },
                    {
                        "hash": "de7b3af61600660442e2ad6af224d48b7bf37030",
                        "name": "block/roots/step4"
                    },
                    {
                        "hash": "6164117445e8dfd29379e9bb97108ec0b7126270",
                        "name": "block/roots/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.roots.step": [
            {
                "field": "he",
                "id": 420,
                "name": "block.roots.step",
                "sounds": [],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            {
                "field": "hN",
                "id": 455,
                "name": "block.roots.step",
                "sounds": [
                    {
                        "hash": "627986868ad27e85f53e1e8dc1db406fe2d0a7b2",
                        "name": "block/roots/step1"
                    },
                    {
                        "hash": "64397c108f51882304e4012219b0782bbadb6056",
                        "name": "block/roots/step2"
                    },
                    {
                        "hash": "595b687c4da88dfafee324b6c500e1df7dead0eb",
                        "name": "block/roots/step3"
                    },
                    {
                        "hash": "de7b3af61600660442e2ad6af224d48b7bf37030",
                        "name": "block/roots/step4"
                    },
                    {
                        "hash": "6164117445e8dfd29379e9bb97108ec0b7126270",
                        "name": "block/roots/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.stone_button.click_off": [
            {
                "field": "up",
                "id": 1106,
                "name": "block.stone_button.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            },
            {
                "field": "vI",
                "id": 1177,
                "name": "block.stone_button.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.5,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.stone_button.click_on": [
            {
                "field": "uq",
                "id": 1107,
                "name": "block.stone_button.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            },
            {
                "field": "vJ",
                "id": 1178,
                "name": "block.stone_button.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.6,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.stone_pressure_plate.click_off": [
            {
                "field": "uu",
                "id": 1111,
                "name": "block.stone_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "vN",
                "id": 1182,
                "name": "block.stone_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.5,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.stone_pressure_plate.click_on": [
            {
                "field": "uv",
                "id": 1112,
                "name": "block.stone_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "vO",
                "id": 1183,
                "name": "block.stone_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.6,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.wooden_button.click_off": [
            {
                "field": "xz",
                "id": 1272,
                "name": "block.wooden_button.click_off",
                "sounds": [
                    {
                        "hash": "b210a3c371441b77fe873133b2cb7b63e367b2f3",
                        "name": "random/wood_click"
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            },
            {
                "field": "yS",
                "id": 1343,
                "name": "block.wooden_button.click_off",
                "sounds": [
                    {
                        "hash": "b210a3c371441b77fe873133b2cb7b63e367b2f3",
                        "name": "random/wood_click",
                        "pitch": 0.5,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.wooden_button.click_on": [
            {
                "field": "xA",
                "id": 1273,
                "name": "block.wooden_button.click_on",
                "sounds": [
                    {
                        "hash": "b210a3c371441b77fe873133b2cb7b63e367b2f3",
                        "name": "random/wood_click"
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            },
            {
                "field": "yT",
                "id": 1344,
                "name": "block.wooden_button.click_on",
                "sounds": [
                    {
                        "hash": "b210a3c371441b77fe873133b2cb7b63e367b2f3",
                        "name": "random/wood_click",
                        "pitch": 0.6,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Button clicks",
                "subtitle_key": "subtitles.block.button.click"
            }
        ],
        "block.wooden_door.close": [
            {
                "field": "xu",
                "id": 1267,
                "name": "block.wooden_door.close",
                "sounds": [
                    {
                        "hash": "6e0d43b064fb69f7b63e0704d99a38bb2ebc19e0",
                        "name": "block/wooden_door/close2"
                    },
                    {
                        "hash": "4cf6992a99518dfac836228cffbbc7e8344d969b",
                        "name": "block/wooden_door/close5"
                    },
                    {
                        "hash": "73a3bfcb37099c49ac22e6fa308ca14a6e4f8347",
                        "name": "block/wooden_door/close6"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            },
            {
                "field": "yN",
                "id": 1338,
                "name": "block.wooden_door.close",
                "sounds": [
                    {
                        "hash": "6e0d43b064fb69f7b63e0704d99a38bb2ebc19e0",
                        "name": "block/wooden_door/close1",
                        "volume": 0.9
                    },
                    {
                        "hash": "4cf6992a99518dfac836228cffbbc7e8344d969b",
                        "name": "block/wooden_door/close2",
                        "volume": 0.9
                    },
                    {
                        "hash": "73a3bfcb37099c49ac22e6fa308ca14a6e4f8347",
                        "name": "block/wooden_door/close3",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.wooden_door.open": [
            {
                "field": "xv",
                "id": 1268,
                "name": "block.wooden_door.open",
                "sounds": [
                    {
                        "hash": "d2ba0797ca24fcf15d105c88899089e4af5cb9f4",
                        "name": "block/wooden_door/open3"
                    },
                    {
                        "hash": "21464f4cfb0163f9071d2a84d818bd5ac5b6eee6",
                        "name": "block/wooden_door/open4"
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            },
            {
                "field": "yO",
                "id": 1339,
                "name": "block.wooden_door.open",
                "sounds": [
                    {
                        "hash": "d2ba0797ca24fcf15d105c88899089e4af5cb9f4",
                        "name": "block/wooden_door/open1",
                        "volume": 0.9
                    },
                    {
                        "hash": "21464f4cfb0163f9071d2a84d818bd5ac5b6eee6",
                        "name": "block/wooden_door/open2",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Door creaks",
                "subtitle_key": "subtitles.block.door.toggle"
            }
        ],
        "block.wooden_pressure_plate.click_off": [
            {
                "field": "xE",
                "id": 1277,
                "name": "block.wooden_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "yX",
                "id": 1348,
                "name": "block.wooden_pressure_plate.click_off",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.7,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.wooden_pressure_plate.click_on": [
            {
                "field": "xF",
                "id": 1278,
                "name": "block.wooden_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click"
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            },
            {
                "field": "yY",
                "id": 1349,
                "name": "block.wooden_pressure_plate.click_on",
                "sounds": [
                    {
                        "hash": "ec4f4d122ab7c5d44e48419de0e3de1b0922514d",
                        "name": "random/click",
                        "pitch": 0.8,
                        "volume": 0.3
                    }
                ],
                "subtitle": "Pressure Plate clicks",
                "subtitle_key": "subtitles.block.pressure_plate.click"
            }
        ],
        "block.wooden_trapdoor.close": [
            {
                "field": "xw",
                "id": 1269,
                "name": "block.wooden_trapdoor.close",
                "sounds": [
                    {
                        "hash": "159697af99ef2640f870bee2aaeda9170a918523",
                        "name": "block/wooden_trapdoor/close1"
                    },
                    {
                        "hash": "5e49444266bf88c2006233a811561272ad8f157f",
                        "name": "block/wooden_trapdoor/close2"
                    },
                    {
                        "hash": "c9a5510420292be670d0020b7123ca0fef1f6087",
                        "name": "block/wooden_trapdoor/close3"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            },
            {
                "field": "yP",
                "id": 1340,
                "name": "block.wooden_trapdoor.close",
                "sounds": [
                    {
                        "hash": "159697af99ef2640f870bee2aaeda9170a918523",
                        "name": "block/wooden_trapdoor/close1",
                        "volume": 0.9
                    },
                    {
                        "hash": "5e49444266bf88c2006233a811561272ad8f157f",
                        "name": "block/wooden_trapdoor/close2",
                        "volume": 0.9
                    },
                    {
                        "hash": "c9a5510420292be670d0020b7123ca0fef1f6087",
                        "name": "block/wooden_trapdoor/close3",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "block.wooden_trapdoor.open": [
            {
                "field": "xx",
                "id": 1270,
                "name": "block.wooden_trapdoor.open",
                "sounds": [
                    {
                        "hash": "9eb0c3c8c34bcf83db451c12f24edd756908d265",
                        "name": "block/wooden_trapdoor/open1"
                    },
                    {
                        "hash": "a410f82debee252f1399a8c391bef261ab42d07c",
                        "name": "block/wooden_trapdoor/open2"
                    },
                    {
                        "hash": "37c0ff8ac56889125bb0d11be7225f453e1e4098",
                        "name": "block/wooden_trapdoor/open3"
                    },
                    {
                        "hash": "f756c39f4ca9565c359a66d33b5a4f9d886e5479",
                        "name": "block/wooden_trapdoor/open4"
                    },
                    {
                        "hash": "3a05ef3ce1827538f54ba4b3262eaee438da4217",
                        "name": "block/wooden_trapdoor/open5"
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            },
            {
                "field": "yQ",
                "id": 1341,
                "name": "block.wooden_trapdoor.open",
                "sounds": [
                    {
                        "hash": "9eb0c3c8c34bcf83db451c12f24edd756908d265",
                        "name": "block/wooden_trapdoor/open1",
                        "volume": 0.9
                    },
                    {
                        "hash": "a410f82debee252f1399a8c391bef261ab42d07c",
                        "name": "block/wooden_trapdoor/open2",
                        "volume": 0.9
                    },
                    {
                        "hash": "37c0ff8ac56889125bb0d11be7225f453e1e4098",
                        "name": "block/wooden_trapdoor/open3",
                        "volume": 0.9
                    },
                    {
                        "hash": "f756c39f4ca9565c359a66d33b5a4f9d886e5479",
                        "name": "block/wooden_trapdoor/open4",
                        "volume": 0.9
                    },
                    {
                        "hash": "3a05ef3ce1827538f54ba4b3262eaee438da4217",
                        "name": "block/wooden_trapdoor/open5",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Trapdoor creaks",
                "subtitle_key": "subtitles.block.trapdoor.toggle"
            }
        ],
        "entity.camel.ambient": [
            null,
            {
                "field": "cK",
                "id": 192,
                "name": "entity.camel.ambient",
                "sounds": [
                    {
                        "hash": "450e6ae5f90c21a8317eb7d1e76e427a7b765233",
                        "name": "mob/camel/ambient1",
                        "volume": 0.45
                    },
                    {
                        "hash": "cfd8a8479455286ae466faa132864746b15547c0",
                        "name": "mob/camel/ambient2",
                        "volume": 0.45
                    },
                    {
                        "hash": "97507df0101f8d5e6b610511eefc5260057295e4",
                        "name": "mob/camel/ambient3",
                        "volume": 0.5
                    },
                    {
                        "hash": "17eb9af9222182888ecb67f07d89bd20de9c0aae",
                        "name": "mob/camel/ambient4",
                        "volume": 0.5
                    },
                    {
                        "hash": "3a080cb3bc9ebd940a07f15af76751023d3ce811",
                        "name": "mob/camel/ambient5",
                        "volume": 0.5
                    },
                    {
                        "hash": "a3ab1d3e5e3eb9ef4d29e2f82987404164887df4",
                        "name": "mob/camel/ambient6",
                        "volume": 0.5
                    },
                    {
                        "hash": "8e8abdcb0998a62bb8c8a02935f2ad1b47102c01",
                        "name": "mob/camel/ambient7",
                        "volume": 0.3
                    },
                    {
                        "hash": "a58aafc75747e7ca17d03c8b719b3eaf052852f2",
                        "name": "mob/camel/ambient8",
                        "volume": 0.3
                    }
                ],
                "subtitle": "Camel grunts",
                "subtitle_key": "subtitles.entity.camel.ambient"
            }
        ],
        "entity.camel.dash": [
            null,
            {
                "field": "cL",
                "id": 193,
                "name": "entity.camel.dash",
                "sounds": [
                    {
                        "hash": "b61ddbf1a1168b20bd8468b011439825d34c96ef",
                        "name": "mob/camel/dash1"
                    },
                    {
                        "hash": "a993072e7e707a94d962c883d8b3aa07252d6d71",
                        "name": "mob/camel/dash2"
                    },
                    {
                        "hash": "a6ab566783a950df4166476e967cd01a2a01bc95",
                        "name": "mob/camel/dash3"
                    },
                    {
                        "hash": "058d2ec4e9346fb833357c84b45b41428dcc608a",
                        "name": "mob/camel/dash4"
                    },
                    {
                        "hash": "8442cf4b5ed1b5c73da12405536d3e11794c50e6",
                        "name": "mob/camel/dash5"
                    },
                    {
                        "hash": "142096d7f75b3437f6f230f75a1cf24b7e8bc05d",
                        "name": "mob/camel/dash6"
                    }
                ],
                "subtitle": "Camel yeets",
                "subtitle_key": "subtitles.entity.camel.dash"
            }
        ],
        "entity.camel.dash_ready": [
            null,
            {
                "field": "cM",
                "id": 194,
                "name": "entity.camel.dash_ready",
                "sounds": [
                    {
                        "hash": "9dd6b1a7cd75a67153afaa4caa102b38926b2ef4",
                        "name": "mob/camel/dash_ready1",
                        "volume": 0.25
                    }
                ],
                "subtitle": "Camel recovers",
                "subtitle_key": "subtitles.entity.camel.dash_ready"
            }
        ],
        "entity.camel.death": [
            null,
            {
                "field": "cN",
                "id": 195,
                "name": "entity.camel.death",
                "sounds": [
                    {
                        "hash": "9ec0af6191b27f269de6cf0aa2e577c3d23d727d",
                        "name": "mob/camel/death1"
                    },
                    {
                        "hash": "3978d90f0200812a55c663ec740faa374edc446c",
                        "name": "mob/camel/death2"
                    }
                ],
                "subtitle": "Camel dies",
                "subtitle_key": "subtitles.entity.camel.death"
            }
        ],
        "entity.camel.eat": [
            null,
            {
                "field": "cO",
                "id": 196,
                "name": "entity.camel.eat",
                "sounds": [
                    {
                        "hash": "acbc271d03e739bf45004c3c52e9fd178aa3bdd9",
                        "name": "mob/camel/eat1",
                        "volume": 0.2
                    },
                    {
                        "hash": "443d89006aba8088dee499b50a71f464c8235690",
                        "name": "mob/camel/eat2",
                        "volume": 0.2
                    },
                    {
                        "hash": "728652c728fb22fd140ae2b06f93eef8df6e3088",
                        "name": "mob/camel/eat3",
                        "volume": 0.2
                    },
                    {
                        "hash": "1ddbaacef32520869880af7bab6dc3a1dde5f3b9",
                        "name": "mob/camel/eat4",
                        "volume": 0.2
                    },
                    {
                        "hash": "237780d9346ca90ac1d0c91e322bbab088b957cc",
                        "name": "mob/camel/eat5",
                        "volume": 0.2
                    }
                ],
                "subtitle": "Camel eats",
                "subtitle_key": "subtitles.entity.camel.eat"
            }
        ],
        "entity.camel.hurt": [
            null,
            {
                "field": "cP",
                "id": 197,
                "name": "entity.camel.hurt",
                "sounds": [
                    {
                        "hash": "96edd6f5bda1889ac2cf01d1bdcee3b03768f5ca",
                        "name": "mob/camel/hurt1"
                    },
                    {
                        "hash": "ec7cb60f8d39960207800528e7881233897f20db",
                        "name": "mob/camel/hurt2"
                    },
                    {
                        "hash": "51a01c7de5d3f48c70c76fd031ead3802cbe1219",
                        "name": "mob/camel/hurt3"
                    },
                    {
                        "hash": "a55fe7a4613fd5422013e670da00d98431cfae9f",
                        "name": "mob/camel/hurt4"
                    }
                ],
                "subtitle": "Camel hurts",
                "subtitle_key": "subtitles.entity.camel.hurt"
            }
        ],
        "entity.camel.saddle": [
            null,
            {
                "field": "cQ",
                "id": 198,
                "name": "entity.camel.saddle",
                "sounds": [
                    {
                        "name": "entity.horse.saddle",
                        "pitch": 0.8,
                        "type": "event"
                    }
                ],
                "subtitle": "Saddle equips",
                "subtitle_key": "subtitles.entity.camel.saddle"
            }
        ],
        "entity.camel.sit": [
            null,
            {
                "field": "cR",
                "id": 199,
                "name": "entity.camel.sit",
                "sounds": [
                    {
                        "hash": "bfe9f9cddbfa746c37a68cf6f664f87420eae9b3",
                        "name": "mob/camel/sit1",
                        "volume": 0.3
                    },
                    {
                        "hash": "0390dc9708e60e1cb542d702fc5451ef214eb5ac",
                        "name": "mob/camel/sit2",
                        "volume": 0.3
                    },
                    {
                        "hash": "34b26e7f9ba93b9039a4a480404a801bd2ebb7c2",
                        "name": "mob/camel/sit3",
                        "volume": 0.3
                    },
                    {
                        "hash": "eac564f4d57e2070271a97eea3d34a56789ed6e0",
                        "name": "mob/camel/sit4",
                        "volume": 0.3
                    }
                ],
                "subtitle": "Camel sits down",
                "subtitle_key": "subtitles.entity.camel.sit"
            }
        ],
        "entity.camel.stand": [
            null,
            {
                "field": "cS",
                "id": 200,
                "name": "entity.camel.stand",
                "sounds": [
                    {
                        "hash": "0f28236aa3e920a9aee2fd271972c5eb29e5231d",
                        "name": "mob/camel/stand1",
                        "volume": 0.3
                    },
                    {
                        "hash": "f21c164230f6a7695c4a13373e99456a53d1a006",
                        "name": "mob/camel/stand2",
                        "volume": 0.3
                    },
                    {
                        "hash": "a9a36ffe2edfdb364933693e58affc06357a1216",
                        "name": "mob/camel/stand3",
                        "volume": 0.3
                    },
                    {
                        "hash": "935dd0ba88d273ddb5bdbfa61590bc8e1fc6e2ae",
                        "name": "mob/camel/stand4",
                        "volume": 0.3
                    },
                    {
                        "hash": "bdb4d17a92f52f86cb717742e37bd2d09d2e37d1",
                        "name": "mob/camel/stand5",
                        "volume": 0.3
                    }
                ],
                "subtitle": "Camel stands up",
                "subtitle_key": "subtitles.entity.camel.stand"
            }
        ],
        "entity.camel.step": [
            null,
            {
                "field": "cT",
                "id": 201,
                "name": "entity.camel.step",
                "sounds": [
                    {
                        "hash": "0eaf63e114fdc307e318b31a43e228c1f4387c81",
                        "name": "mob/camel/step1",
                        "volume": 0.5
                    },
                    {
                        "hash": "ce94d4fa54ef9de2b8b3e88683093bf177ca8278",
                        "name": "mob/camel/step2",
                        "volume": 0.5
                    },
                    {
                        "hash": "b692f6c77f84bd887a79ab519c33e7532fc25dea",
                        "name": "mob/camel/step3",
                        "volume": 0.5
                    },
                    {
                        "hash": "a4857d4c844d07c4fcb9f06f74339900745eec6a",
                        "name": "mob/camel/step4",
                        "volume": 0.5
                    },
                    {
                        "hash": "233b338e13c17aec1048de3b17f8574ce8ea8049",
                        "name": "mob/camel/step5",
                        "volume": 0.5
                    },
                    {
                        "hash": "4debec9dc62d068117353faa457d79cbbc91c82e",
                        "name": "mob/camel/step6",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Camel steps",
                "subtitle_key": "subtitles.entity.camel.step"
            }
        ],
        "entity.camel.step_sand": [
            null,
            {
                "field": "cU",
                "id": 202,
                "name": "entity.camel.step_sand",
                "sounds": [
                    {
                        "hash": "c38dfc112c6762daa315afde3f059e8c9ec4e48f",
                        "name": "mob/camel/step_sand1",
                        "volume": 0.45
                    },
                    {
                        "hash": "5214b44cbc6aa25d07f9fe146d92a68abfc967ca",
                        "name": "mob/camel/step_sand2",
                        "volume": 0.45
                    },
                    {
                        "hash": "8dfcec9ada0d6b48585ad2749d62526c26ea7bfd",
                        "name": "mob/camel/step_sand3",
                        "volume": 0.45
                    },
                    {
                        "hash": "fdf4c26863c42c647bc7e674e82d231ca54a95ba",
                        "name": "mob/camel/step_sand4",
                        "volume": 0.45
                    },
                    {
                        "hash": "e016ace48566d631c1508f4ba6acdfc759b07773",
                        "name": "mob/camel/step_sand5",
                        "volume": 0.45
                    },
                    {
                        "hash": "5ec5275e38f39507062fbb17d8c6b253fbfc5963",
                        "name": "mob/camel/step_sand6",
                        "volume": 0.45
                    }
                ],
                "subtitle": "Camel sands",
                "subtitle_key": "subtitles.entity.camel.step_sand"
            }
        ],
        "entity.enderman.scream": [
            {
                "field": "fG",
                "id": 344,
                "name": "entity.enderman.scream",
                "sounds": [
                    {
                        "hash": "c4b5265bbafbe058347058a257abe33a0afb5ab7",
                        "name": "mob/endermen/scream1"
                    },
                    {
                        "hash": "c8cd465468a0fd41a1d5cc24cb499862b5ade2cb",
                        "name": "mob/endermen/scream2"
                    },
                    {
                        "hash": "dbab0094299eacbce86ad427edcb34b8342861af",
                        "name": "mob/endermen/scream3"
                    },
                    {
                        "hash": "bcc73584d83225383aaa6affce905392c96afe86",
                        "name": "mob/endermen/scream4"
                    }
                ],
                "subtitle": "Enderman vwoops",
                "subtitle_key": "subtitles.entity.enderman.ambient"
            },
            {
                "field": "gp",
                "id": 379,
                "name": "entity.enderman.scream",
                "sounds": [
                    {
                        "hash": "c4b5265bbafbe058347058a257abe33a0afb5ab7",
                        "name": "mob/endermen/scream1"
                    },
                    {
                        "hash": "c8cd465468a0fd41a1d5cc24cb499862b5ade2cb",
                        "name": "mob/endermen/scream2"
                    },
                    {
                        "hash": "dbab0094299eacbce86ad427edcb34b8342861af",
                        "name": "mob/endermen/scream3"
                    },
                    {
                        "hash": "bcc73584d83225383aaa6affce905392c96afe86",
                        "name": "mob/endermen/scream4"
                    }
                ],
                "subtitle": "Enderman screams",
                "subtitle_key": "subtitles.entity.enderman.scream"
            }
        ],
        "entity.tadpole.grow_up": [
            {
                "field": "uG",
                "id": 1123,
                "name": "entity.tadpole.grow_up",
                "sounds": [
                    {
                        "hash": "2b853a27aca328d99868ab0b120011dfc80a9319",
                        "name": "mob/frog/idle1",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "edb6292e40d10f68455ed4e48c7e08b8d56ded09",
                        "name": "mob/frog/idle2",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "0d0d07e93934554dc351aa587e3f74fdf71b5f7b",
                        "name": "mob/frog/idle3",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "b6752821a49acec1fb2c99c01166d8b779262764",
                        "name": "mob/frog/idle4",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "66fcdb126456dcd5d91e9c4045ff6119e4e52f7c",
                        "name": "mob/frog/idle5",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "615c3c57e70cbfcd8c71de34a70b7ea8e477613f",
                        "name": "mob/frog/idle6",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "59f54257a2c6f7aced62b589fd7df46efc3a9a9b",
                        "name": "mob/frog/idle7",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "24cd1999c9981792bce3cee255b30b9b2591bc6f",
                        "name": "mob/frog/idle8",
                        "pitch": 1.2,
                        "volume": 0.75
                    }
                ],
                "subtitle_key": "subtitles.entity.tadpole.grow_up"
            },
            {
                "field": "vZ",
                "id": 1194,
                "name": "entity.tadpole.grow_up",
                "sounds": [
                    {
                        "hash": "2b853a27aca328d99868ab0b120011dfc80a9319",
                        "name": "mob/frog/idle1",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "edb6292e40d10f68455ed4e48c7e08b8d56ded09",
                        "name": "mob/frog/idle2",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "0d0d07e93934554dc351aa587e3f74fdf71b5f7b",
                        "name": "mob/frog/idle3",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "b6752821a49acec1fb2c99c01166d8b779262764",
                        "name": "mob/frog/idle4",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "66fcdb126456dcd5d91e9c4045ff6119e4e52f7c",
                        "name": "mob/frog/idle5",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "615c3c57e70cbfcd8c71de34a70b7ea8e477613f",
                        "name": "mob/frog/idle6",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "59f54257a2c6f7aced62b589fd7df46efc3a9a9b",
                        "name": "mob/frog/idle7",
                        "pitch": 1.2,
                        "volume": 0.75
                    },
                    {
                        "hash": "24cd1999c9981792bce3cee255b30b9b2591bc6f",
                        "name": "mob/frog/idle8",
                        "pitch": 1.2,
                        "volume": 0.75
                    }
                ],
                "subtitle": "Tadpole grows up",
                "subtitle_key": "subtitles.entity.tadpole.grow_up"
            }
        ],
        "entity.villager.work_armorer": [
            {
                "field": "vM",
                "id": 1181,
                "name": "entity.villager.work_armorer",
                "sounds": [
                    {
                        "hash": "37310577c903e85a9ae6b1393a94b9127a1a4c76",
                        "name": "block/blastfurnace/blastfurnace1"
                    },
                    {
                        "hash": "4d1d157536fd24989860a8adaa615c6d2dba5c9d",
                        "name": "block/blastfurnace/blastfurnace2"
                    },
                    {
                        "hash": "0cc576cae7a4c2e2bb969f545ba09a1d4f746e4f",
                        "name": "block/blastfurnace/blastfurnace3"
                    },
                    {
                        "hash": "b7a496f571a432f8a20cdd725b8a10f0cc30d5bb",
                        "name": "block/blastfurnace/blastfurnace4"
                    },
                    {
                        "hash": "9f6f7c5a11aeb75ed6f943b5d9ee02e49a0bf26f",
                        "name": "block/blastfurnace/blastfurnace5"
                    }
                ],
                "subtitle": "Blast Furnace crackles",
                "subtitle_key": "subtitles.block.blastfurnace.fire_crackle"
            },
            {
                "field": "xf",
                "id": 1252,
                "name": "entity.villager.work_armorer",
                "sounds": [
                    {
                        "hash": "37310577c903e85a9ae6b1393a94b9127a1a4c76",
                        "name": "block/blastfurnace/blastfurnace1"
                    },
                    {
                        "hash": "4d1d157536fd24989860a8adaa615c6d2dba5c9d",
                        "name": "block/blastfurnace/blastfurnace2"
                    },
                    {
                        "hash": "0cc576cae7a4c2e2bb969f545ba09a1d4f746e4f",
                        "name": "block/blastfurnace/blastfurnace3"
                    },
                    {
                        "hash": "b7a496f571a432f8a20cdd725b8a10f0cc30d5bb",
                        "name": "block/blastfurnace/blastfurnace4"
                    },
                    {
                        "hash": "9f6f7c5a11aeb75ed6f943b5d9ee02e49a0bf26f",
                        "name": "block/blastfurnace/blastfurnace5"
                    }
                ],
                "subtitle": "Armorer works",
                "subtitle_key": "subtitles.entity.villager.work_armorer"
            }
        ],
        "entity.villager.work_cleric": [
            {
                "field": "vP",
                "id": 1184,
                "name": "entity.villager.work_cleric",
                "sounds": [
                    {
                        "hash": "b91c8cf157979540e517895beefe0390acac6454",
                        "name": "block/brewing_stand/brew1"
                    },
                    {
                        "hash": "030a3d36cccac21197db2ec078f96cbc2caa1311",
                        "name": "block/brewing_stand/brew2"
                    }
                ],
                "subtitle": "Brewing Stand bubbles",
                "subtitle_key": "subtitles.block.brewing_stand.brew"
            },
            {
                "field": "xi",
                "id": 1255,
                "name": "entity.villager.work_cleric",
                "sounds": [
                    {
                        "hash": "b91c8cf157979540e517895beefe0390acac6454",
                        "name": "block/brewing_stand/brew1"
                    },
                    {
                        "hash": "030a3d36cccac21197db2ec078f96cbc2caa1311",
                        "name": "block/brewing_stand/brew2"
                    }
                ],
                "subtitle": "Cleric works",
                "subtitle_key": "subtitles.entity.villager.work_cleric"
            }
        ],
        "entity.villager.work_weaponsmith": [
            {
                "field": "vY",
                "id": 1193,
                "name": "entity.villager.work_weaponsmith",
                "sounds": [
                    {
                        "hash": "035df7547acd8451e76b4f26fc01db3baeb6d006",
                        "name": "block/grindstone/grindstone1",
                        "volume": 0.5
                    },
                    {
                        "hash": "2cf5f1639e8e3bdca4977dd0e46ac0d7cab42ecf",
                        "name": "block/grindstone/grindstone2",
                        "volume": 0.5
                    },
                    {
                        "hash": "9b665e99a4ae8eb6e3334f3750eda8a2485e798f",
                        "name": "block/grindstone/grindstone3",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Grindstone used",
                "subtitle_key": "subtitles.block.grindstone.use"
            },
            {
                "field": "xr",
                "id": 1264,
                "name": "entity.villager.work_weaponsmith",
                "sounds": [
                    {
                        "hash": "035df7547acd8451e76b4f26fc01db3baeb6d006",
                        "name": "block/grindstone/grindstone1",
                        "volume": 0.5
                    },
                    {
                        "hash": "2cf5f1639e8e3bdca4977dd0e46ac0d7cab42ecf",
                        "name": "block/grindstone/grindstone2",
                        "volume": 0.5
                    },
                    {
                        "hash": "9b665e99a4ae8eb6e3334f3750eda8a2485e798f",
                        "name": "block/grindstone/grindstone3",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Weaponsmith works",
                "subtitle_key": "subtitles.entity.villager.work_weaponsmith"
            }
        ],
        "music.menu": [
            {
                "field": "mp",
                "id": 690,
                "name": "music.menu",
                "sounds": [
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true
                    },
                    {
                        "hash": "c157c56846f0e50620f808fecd9d069423dd6c41",
                        "name": "music/menu/menu1",
                        "stream": true
                    },
                    {
                        "hash": "783ddccf4681a0c50d3e651f4e6ac27a0f4ea76f",
                        "name": "music/menu/menu2",
                        "stream": true
                    },
                    {
                        "hash": "87722a59c8d488370f3d430cd4c97a3161081785",
                        "name": "music/menu/menu3",
                        "stream": true
                    },
                    {
                        "hash": "15f38314274e759c44f50ac641d11bde12474a25",
                        "name": "music/menu/menu4",
                        "stream": true
                    }
                ]
            },
            {
                "field": "nn",
                "id": 740,
                "name": "music.menu",
                "sounds": [
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "c157c56846f0e50620f808fecd9d069423dd6c41",
                        "name": "music/menu/menu1",
                        "stream": true
                    },
                    {
                        "hash": "783ddccf4681a0c50d3e651f4e6ac27a0f4ea76f",
                        "name": "music/menu/menu2",
                        "stream": true
                    },
                    {
                        "hash": "87722a59c8d488370f3d430cd4c97a3161081785",
                        "name": "music/menu/menu3",
                        "stream": true
                    },
                    {
                        "hash": "15f38314274e759c44f50ac641d11bde12474a25",
                        "name": "music/menu/menu4",
                        "stream": true
                    }
                ]
            }
        ],
        "music.overworld.jungle_and_forest": [
            {
                "field": "my",
                "id": 699,
                "name": "music.overworld.jungle_and_forest",
                "sounds": [
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true
                    },
                    {
                        "hash": "cab779f1a15d9fe49bcc975d077717ebd1f87cda",
                        "name": "music/game/comforting_memories",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "df1ff11b79757432c5c3f279e5ecde7b63ceda64",
                        "name": "music/game/hal1",
                        "stream": true
                    },
                    {
                        "hash": "ceaaaa1d57dfdfbb0bd4da5ea39628b42897a687",
                        "name": "music/game/hal2",
                        "stream": true
                    },
                    {
                        "hash": "dd85fb564e96ee2dbd4754f711ae9deb08a169f9",
                        "name": "music/game/hal3",
                        "stream": true
                    },
                    {
                        "hash": "5e7d63e75c6e042f452bc5e151276911ef92fed8",
                        "name": "music/game/hal4",
                        "stream": true
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "cc1a80b6becfc6d6489c069f053d0a8adc71c339",
                        "name": "music/game/nuance1",
                        "stream": true
                    },
                    {
                        "hash": "78152dc42b036e0de7616e6e669ce5a81d17f82a",
                        "name": "music/game/nuance2",
                        "stream": true
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "0f374764aafba398f4ba90dba05a53a9e6166138",
                        "name": "music/game/piano1",
                        "stream": true
                    },
                    {
                        "hash": "98a918eb2694defd19726436d4b9dca9e7dd6a65",
                        "name": "music/game/piano2",
                        "stream": true
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true
                    }
                ]
            },
            {
                "field": "nw",
                "id": 749,
                "name": "music.overworld.jungle_and_forest",
                "sounds": [
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true
                    },
                    {
                        "hash": "cab779f1a15d9fe49bcc975d077717ebd1f87cda",
                        "name": "music/game/comforting_memories",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "df1ff11b79757432c5c3f279e5ecde7b63ceda64",
                        "name": "music/game/hal1",
                        "stream": true
                    },
                    {
                        "hash": "ceaaaa1d57dfdfbb0bd4da5ea39628b42897a687",
                        "name": "music/game/hal2",
                        "stream": true
                    },
                    {
                        "hash": "dd85fb564e96ee2dbd4754f711ae9deb08a169f9",
                        "name": "music/game/hal3",
                        "stream": true
                    },
                    {
                        "hash": "5e7d63e75c6e042f452bc5e151276911ef92fed8",
                        "name": "music/game/hal4",
                        "stream": true
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "cc1a80b6becfc6d6489c069f053d0a8adc71c339",
                        "name": "music/game/nuance1",
                        "stream": true
                    },
                    {
                        "hash": "78152dc42b036e0de7616e6e669ce5a81d17f82a",
                        "name": "music/game/nuance2",
                        "stream": true
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "0f374764aafba398f4ba90dba05a53a9e6166138",
                        "name": "music/game/piano1",
                        "stream": true
                    },
                    {
                        "hash": "98a918eb2694defd19726436d4b9dca9e7dd6a65",
                        "name": "music/game/piano2",
                        "stream": true
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true,
                        "volume": 0.4
                    }
                ]
            }
        ],
        "music.overworld.lush_caves": [
            {
                "field": "mw",
                "id": 697,
                "name": "music.overworld.lush_caves",
                "sounds": [
                    {
                        "hash": "fb47d8c0ba3756e2c5066fcd865e866fa209ae2d",
                        "name": "music/game/an_ordinary_day",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 4
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 2
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true
                    }
                ]
            },
            {
                "field": "nu",
                "id": 747,
                "name": "music.overworld.lush_caves",
                "sounds": [
                    {
                        "hash": "fb47d8c0ba3756e2c5066fcd865e866fa209ae2d",
                        "name": "music/game/an_ordinary_day",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 4
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 2
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true,
                        "weight": 2
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true,
                        "volume": 0.4
                    }
                ]
            }
        ],
        "music.overworld.old_growth_taiga": [
            {
                "field": "mz",
                "id": 700,
                "name": "music.overworld.old_growth_taiga",
                "sounds": [
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "cab779f1a15d9fe49bcc975d077717ebd1f87cda",
                        "name": "music/game/comforting_memories",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "df1ff11b79757432c5c3f279e5ecde7b63ceda64",
                        "name": "music/game/hal1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "ceaaaa1d57dfdfbb0bd4da5ea39628b42897a687",
                        "name": "music/game/hal2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "dd85fb564e96ee2dbd4754f711ae9deb08a169f9",
                        "name": "music/game/hal3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "5e7d63e75c6e042f452bc5e151276911ef92fed8",
                        "name": "music/game/hal4",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "cc1a80b6becfc6d6489c069f053d0a8adc71c339",
                        "name": "music/game/nuance1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "78152dc42b036e0de7616e6e669ce5a81d17f82a",
                        "name": "music/game/nuance2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "0f374764aafba398f4ba90dba05a53a9e6166138",
                        "name": "music/game/piano1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "98a918eb2694defd19726436d4b9dca9e7dd6a65",
                        "name": "music/game/piano2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true
                    }
                ]
            },
            {
                "field": "nx",
                "id": 750,
                "name": "music.overworld.old_growth_taiga",
                "sounds": [
                    {
                        "hash": "50a59a4f56e4046701b758ddbb1c1587efa4cadf",
                        "name": "music/game/calm1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "74da65c99aa578486efa7b69983d3533e14c0d6e",
                        "name": "music/game/calm2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "14ae57a6bce3d4254daa8be2b098c2d99743cc3f",
                        "name": "music/game/calm3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "cab779f1a15d9fe49bcc975d077717ebd1f87cda",
                        "name": "music/game/comforting_memories",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "45bdfe06cc8c375dc507e59527c9a89105980085",
                        "name": "music/game/floating_dream",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "df1ff11b79757432c5c3f279e5ecde7b63ceda64",
                        "name": "music/game/hal1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "ceaaaa1d57dfdfbb0bd4da5ea39628b42897a687",
                        "name": "music/game/hal2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "dd85fb564e96ee2dbd4754f711ae9deb08a169f9",
                        "name": "music/game/hal3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "5e7d63e75c6e042f452bc5e151276911ef92fed8",
                        "name": "music/game/hal4",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "aa1d3aace1c481ac32d5827fba287294b6bc99fb",
                        "name": "music/game/left_to_bloom",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "cc1a80b6becfc6d6489c069f053d0a8adc71c339",
                        "name": "music/game/nuance1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "78152dc42b036e0de7616e6e669ce5a81d17f82a",
                        "name": "music/game/nuance2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "8b0b49dcab54157bb02ef81380990dac2a187b99",
                        "name": "music/game/one_more_day",
                        "stream": true,
                        "volume": 0.4,
                        "weight": 3
                    },
                    {
                        "hash": "0f374764aafba398f4ba90dba05a53a9e6166138",
                        "name": "music/game/piano1",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "98a918eb2694defd19726436d4b9dca9e7dd6a65",
                        "name": "music/game/piano2",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "9528b6a76e7bac64ca1145cc682e8a8448cc04e5",
                        "name": "music/game/piano3",
                        "stream": true,
                        "weight": 3
                    },
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true,
                        "volume": 0.4
                    }
                ]
            }
        ],
        "music.overworld.swamp": [
            {
                "field": "mx",
                "id": 698,
                "name": "music.overworld.swamp",
                "sounds": [
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true
                    }
                ]
            },
            {
                "field": "nv",
                "id": 748,
                "name": "music.overworld.swamp",
                "sounds": [
                    {
                        "hash": "6615ab7f668384cf98b0cb034ce8e4c52eaf86b2",
                        "name": "music/game/swamp/aerie",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "352bc5b46e08effbb8d92298b601e688cc36c4de",
                        "name": "music/game/swamp/firebugs",
                        "stream": true,
                        "volume": 0.4
                    },
                    {
                        "hash": "b83bbafa9799680da24f10215de2c40b73ce1fe3",
                        "name": "music/game/swamp/labyrinthine",
                        "stream": true,
                        "volume": 0.4
                    }
                ]
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/all_signs": [
            null,
            {
                "name": "all_signs",
                "type": "blocks",
                "values": [
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign",
                    "minecraft:oak_wall_sign",
                    "minecraft:spruce_wall_sign",
                    "minecraft:birch_wall_sign",
                    "minecraft:acacia_wall_sign",
                    "minecraft:jungle_wall_sign",
                    "minecraft:dark_oak_wall_sign",
                    "minecraft:crimson_wall_sign",
                    "minecraft:warped_wall_sign",
                    "minecraft:mangrove_wall_sign"
                ]
            }
        ],
        "blocks/inside_step_sound_blocks": [
            {
                "name": "inside_step_sound_blocks",
                "type": "blocks",
                "values": [
                    "minecraft:snow",
                    "minecraft:powder_snow",
                    "minecraft:sculk_vein"
                ]
            },
            {
                "name": "inside_step_sound_blocks",
                "type": "blocks",
                "values": [
                    "minecraft:snow",
                    "minecraft:powder_snow",
                    "minecraft:sculk_vein",
                    "minecraft:lily_pad",
                    "minecraft:nether_sprouts",
                    "minecraft:warped_roots",
                    "minecraft:crimson_roots",
                    "minecraft:glow_lichen",
                    "minecraft:small_amethyst_bud",
                    "minecraft:moss_carpet",
                    "minecraft:white_carpet",
                    "minecraft:orange_carpet",
                    "minecraft:magenta_carpet",
                    "minecraft:light_blue_carpet",
                    "minecraft:yellow_carpet",
                    "minecraft:lime_carpet",
                    "minecraft:pink_carpet",
                    "minecraft:gray_carpet",
                    "minecraft:light_gray_carpet",
                    "minecraft:cyan_carpet",
                    "minecraft:purple_carpet",
                    "minecraft:blue_carpet",
                    "minecraft:brown_carpet",
                    "minecraft:green_carpet",
                    "minecraft:red_carpet",
                    "minecraft:black_carpet"
                ]
            }
        ],
        "blocks/invalid_spawn_inside": [
            null,
            {
                "name": "invalid_spawn_inside",
                "type": "blocks",
                "values": [
                    "minecraft:end_portal",
                    "minecraft:end_gateway"
                ]
            }
        ],
        "blocks/non_flammable_wood": [
            {
                "name": "non_flammable_wood",
                "type": "blocks",
                "values": [
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:crimson_wall_sign",
                    "minecraft:warped_wall_sign"
                ]
            },
            null
        ],
        "items/creeper_igniters": [
            null,
            {
                "name": "creeper_igniters",
                "type": "items",
                "values": [
                    "minecraft:flint_and_steel",
                    "minecraft:fire_charge"
                ]
            }
        ],
        "items/fence_gates": [
            null,
            {
                "name": "fence_gates",
                "type": "items",
                "values": [
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate"
                ]
            }
        ],
        "items/overworld_natural_logs": [
            {
                "name": "overworld_natural_logs",
                "type": "items",
                "values": [
                    "minecraft:acacia_log",
                    "minecraft:birch_log",
                    "minecraft:oak_log",
                    "minecraft:jungle_log",
                    "minecraft:spruce_log",
                    "minecraft:dark_oak_log",
                    "minecraft:mangrove_log"
                ]
            },
            null
        ]
    },
    "tileentity": {
        "tileentities": {
            "chiseled_bookshelf": [
                null,
                {
                    "blocks": [
                        "chiseled_bookshelf"
                    ],
                    "class": "cws",
                    "name": "chiseled_bookshelf"
                }
            ],
            "hanging_sign": [
                null,
                {
                    "blocks": [
                        "oak_hanging_sign",
                        "spruce_hanging_sign",
                        "birch_hanging_sign",
                        "acacia_hanging_sign",
                        "jungle_hanging_sign",
                        "dark_oak_hanging_sign",
                        "crimson_hanging_sign",
                        "warped_hanging_sign",
                        "mangrove_hanging_sign",
                        "bamboo_hanging_sign",
                        "oak_wall_hanging_sign",
                        "spruce_wall_hanging_sign",
                        "birch_wall_hanging_sign",
                        "acacia_wall_hanging_sign",
                        "jungle_wall_hanging_sign",
                        "dark_oak_wall_hanging_sign",
                        "mangrove_wall_hanging_sign",
                        "crimson_wall_hanging_sign",
                        "warped_wall_hanging_sign",
                        "bamboo_wall_hanging_sign"
                    ],
                    "class": "cxd",
                    "name": "hanging_sign"
                }
            ],
            "sign": [
                {
                    "blocks": [
                        "oak_sign",
                        "spruce_sign",
                        "birch_sign",
                        "acacia_sign",
                        "jungle_sign",
                        "dark_oak_sign",
                        "mangrove_sign",
                        "oak_wall_sign",
                        "spruce_wall_sign",
                        "birch_wall_sign",
                        "acacia_wall_sign",
                        "jungle_wall_sign",
                        "dark_oak_wall_sign",
                        "mangrove_wall_sign",
                        "crimson_sign",
                        "warped_sign",
                        "crimson_wall_sign",
                        "warped_wall_sign"
                    ],
                    "class": "cuk",
                    "name": "sign"
                },
                {
                    "blocks": [
                        "oak_sign",
                        "spruce_sign",
                        "birch_sign",
                        "acacia_sign",
                        "jungle_sign",
                        "dark_oak_sign",
                        "mangrove_sign",
                        "bamboo_sign",
                        "oak_wall_sign",
                        "spruce_wall_sign",
                        "birch_wall_sign",
                        "acacia_wall_sign",
                        "jungle_wall_sign",
                        "dark_oak_wall_sign",
                        "mangrove_wall_sign",
                        "bamboo_wall_sign",
                        "crimson_sign",
                        "warped_sign",
                        "crimson_wall_sign",
                        "warped_wall_sign"
                    ],
                    "class": "cxp",
                    "name": "sign"
                }
            ],
            "skull": [
                {
                    "blocks": [
                        "skeleton_skull",
                        "skeleton_wall_skull",
                        "wither_skeleton_skull",
                        "wither_skeleton_wall_skull",
                        "zombie_head",
                        "zombie_wall_head",
                        "player_head",
                        "player_wall_head",
                        "creeper_head",
                        "creeper_wall_head",
                        "dragon_head",
                        "dragon_wall_head"
                    ],
                    "class": "cul",
                    "name": "skull"
                },
                {
                    "blocks": [
                        "skeleton_skull",
                        "skeleton_wall_skull",
                        "wither_skeleton_skull",
                        "wither_skeleton_wall_skull",
                        "zombie_head",
                        "zombie_wall_head",
                        "player_head",
                        "player_wall_head",
                        "creeper_head",
                        "creeper_wall_head",
                        "dragon_head",
                        "dragon_wall_head",
                        "piglin_head",
                        "piglin_wall_head"
                    ],
                    "class": "cxq",
                    "name": "skull"
                }
            ]
        }
    },
    "version": {
        "data": [
            3120,
            3218
        ],
        "id": [
            "1.19.2",
            "1.19.3"
        ],
        "name": [
            "1.19.2",
            "1.19.3"
        ],
        "protocol": [
            760,
            761
        ]
    }
}